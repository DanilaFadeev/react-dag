{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 351d71b85b24d53a3aee","webpack:///./dag.js","webpack:///external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack:///external {\"root\":\"ReactDOM\",\"commonjs2\":\"react-dom\",\"commonjs\":\"react-dom\",\"amd\":\"react-dom\"}","webpack:///./dag-store.js","webpack:///./~/redux/lib/index.js","webpack:///(webpack)/~/node-libs-browser/~/process/browser.js","webpack:///./~/redux/lib/createStore.js","webpack:///./~/lodash/isPlainObject.js","webpack:///./~/lodash/_getPrototype.js","webpack:///./~/lodash/_isHostObject.js","webpack:///./~/lodash/isObjectLike.js","webpack:///./~/redux/~/symbol-observable/index.js","webpack:///./~/redux/~/symbol-observable/ponyfill.js","webpack:///./~/redux/lib/combineReducers.js","webpack:///./~/redux/lib/utils/warning.js","webpack:///./~/redux/lib/bindActionCreators.js","webpack:///./~/redux/lib/applyMiddleware.js","webpack:///./~/redux/lib/compose.js","webpack:///./~/node-uuid/uuid.js","webpack:///(webpack)/~/node-libs-browser/~/buffer/index.js","webpack:///(webpack)/~/node-libs-browser/~/buffer/~/base64-js/lib/b64.js","webpack:///(webpack)/~/node-libs-browser/~/buffer/~/ieee754/index.js","webpack:///(webpack)/~/node-libs-browser/~/buffer/~/isarray/index.js","webpack:///(webpack)/~/node-libs-browser/~/crypto-browserify/index.js","webpack:///(webpack)/~/node-libs-browser/~/crypto-browserify/rng.js","webpack:///crypto (ignored)","webpack:///(webpack)/~/node-libs-browser/~/crypto-browserify/create-hash.js","webpack:///(webpack)/~/node-libs-browser/~/crypto-browserify/~/sha.js/index.js","webpack:///(webpack)/~/node-libs-browser/~/crypto-browserify/~/sha.js/hash.js","webpack:///(webpack)/~/node-libs-browser/~/crypto-browserify/~/sha.js/sha1.js","webpack:///(webpack)/~/node-libs-browser/~/util/util.js","webpack:///(webpack)/~/node-libs-browser/~/util/support/isBufferBrowser.js","webpack:///(webpack)/~/node-libs-browser/~/util/~/inherits/inherits_browser.js","webpack:///(webpack)/~/node-libs-browser/~/crypto-browserify/~/sha.js/sha256.js","webpack:///(webpack)/~/node-libs-browser/~/crypto-browserify/~/sha.js/sha512.js","webpack:///(webpack)/~/node-libs-browser/~/crypto-browserify/md5.js","webpack:///(webpack)/~/node-libs-browser/~/crypto-browserify/helpers.js","webpack:///(webpack)/~/node-libs-browser/~/crypto-browserify/~/ripemd160/lib/ripemd160.js","webpack:///(webpack)/~/node-libs-browser/~/crypto-browserify/create-hmac.js","webpack:///(webpack)/~/node-libs-browser/~/crypto-browserify/pbkdf2.js","webpack:///(webpack)/~/node-libs-browser/~/crypto-browserify/~/pbkdf2-compat/pbkdf2.js","webpack:///./dag-settings.js","webpack:///./~/lodash/clone.js","webpack:///./~/lodash/_baseClone.js","webpack:///./~/lodash/_Stack.js","webpack:///./~/lodash/_listCacheClear.js","webpack:///./~/lodash/_listCacheDelete.js","webpack:///./~/lodash/_assocIndexOf.js","webpack:///./~/lodash/eq.js","webpack:///./~/lodash/_listCacheGet.js","webpack:///./~/lodash/_listCacheHas.js","webpack:///./~/lodash/_listCacheSet.js","webpack:///./~/lodash/_arrayEach.js","webpack:///./~/lodash/_assignValue.js","webpack:///./~/lodash/_baseAssign.js","webpack:///./~/lodash/_copyObject.js","webpack:///./~/lodash/keys.js","webpack:///./~/lodash/_cloneBuffer.js","webpack:///./~/lodash/_copyArray.js","webpack:///./~/lodash/_copySymbols.js","webpack:///./~/lodash/_getSymbols.js","webpack:///./~/lodash/_getAllKeys.js","webpack:///./~/lodash/_baseGetAllKeys.js","webpack:///./~/lodash/_arrayPush.js","webpack:///./~/lodash/isArray.js","webpack:///./~/lodash/_getTag.js","webpack:///./~/lodash/_DataView.js","webpack:///./~/lodash/_getNative.js","webpack:///./~/lodash/_root.js","webpack:///./~/lodash/_checkGlobal.js","webpack:///./~/lodash/_Map.js","webpack:///./~/lodash/_Promise.js","webpack:///./~/lodash/_Set.js","webpack:///./~/lodash/_WeakMap.js","webpack:///./~/lodash/_toSource.js","webpack:///./~/lodash/_initCloneArray.js","webpack:///./~/lodash/_initCloneByTag.js","webpack:///./~/lodash/_initCloneObject.js","webpack:///./~/lodash/_baseCreate.js","webpack:///./~/lodash/isObject.js","webpack:///./~/lodash/_isPrototype.js","webpack:///./~/lodash/isBuffer.js","webpack:///./~/lodash/extend.js","webpack:///./~/lodash/assignIn.js","webpack:///./~/lodash/_createAssigner.js","webpack:///./~/lodash/_isIterateeCall.js","webpack:///./~/lodash/rest.js","webpack:///./~/lodash/_apply.js","webpack:///./~/lodash/toInteger.js","webpack:///./~/lodash/isArrayLike.js","webpack:///./~/lodash/_getLength.js","webpack:///./~/lodash/_baseProperty.js","webpack:///./~/lodash/isFunction.js","webpack:///./~/lodash/isLength.js","webpack:///./~/lodash/keysIn.js","webpack:///./~/lodash/_Reflect.js","webpack:///./~/lodash/_iteratorToArray.js","webpack:///./styles/dag.less?0131","webpack:///./styles/dag.less","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/style-loader/addStyles.js","webpack:///./~/jsPlumb/dist/js/jsPlumb-2.0.7.js?f941","webpack:///./~/script-loader/addScript.js","webpack:///./~/jsPlumb/dist/js/jsPlumb-2.0.7.js","webpack:///./~/dagre/index.js","webpack:///./~/dagre/lib/graphlib.js","webpack:///./~/dagre/~/graphlib/index.js","webpack:///./~/dagre/~/graphlib/lib/index.js","webpack:///./~/dagre/~/graphlib/lib/graph.js","webpack:///./~/dagre/~/graphlib/lib/lodash.js","webpack:///./~/dagre/~/lodash/index.js","webpack:///(webpack)/buildin/module.js","webpack:///./~/dagre/~/graphlib/lib/version.js","webpack:///./~/dagre/~/graphlib/lib/json.js","webpack:///./~/dagre/~/graphlib/lib/alg/index.js","webpack:///./~/dagre/~/graphlib/lib/alg/components.js","webpack:///./~/dagre/~/graphlib/lib/alg/dijkstra.js","webpack:///./~/dagre/~/graphlib/lib/data/priority-queue.js","webpack:///./~/dagre/~/graphlib/lib/alg/dijkstra-all.js","webpack:///./~/dagre/~/graphlib/lib/alg/find-cycles.js","webpack:///./~/dagre/~/graphlib/lib/alg/tarjan.js","webpack:///./~/dagre/~/graphlib/lib/alg/floyd-warshall.js","webpack:///./~/dagre/~/graphlib/lib/alg/is-acyclic.js","webpack:///./~/dagre/~/graphlib/lib/alg/topsort.js","webpack:///./~/dagre/~/graphlib/lib/alg/postorder.js","webpack:///./~/dagre/~/graphlib/lib/alg/dfs.js","webpack:///./~/dagre/~/graphlib/lib/alg/preorder.js","webpack:///./~/dagre/~/graphlib/lib/alg/prim.js","webpack:///./~/dagre/lib/layout.js","webpack:///./~/dagre/lib/lodash.js","webpack:///./~/dagre/lib/acyclic.js","webpack:///./~/dagre/lib/greedy-fas.js","webpack:///./~/dagre/lib/data/list.js","webpack:///./~/dagre/lib/normalize.js","webpack:///./~/dagre/lib/util.js","webpack:///./~/dagre/lib/rank/index.js","webpack:///./~/dagre/lib/rank/util.js","webpack:///./~/dagre/lib/rank/feasible-tree.js","webpack:///./~/dagre/lib/rank/network-simplex.js","webpack:///./~/dagre/lib/parent-dummy-chains.js","webpack:///./~/dagre/lib/nesting-graph.js","webpack:///./~/dagre/lib/add-border-segments.js","webpack:///./~/dagre/lib/coordinate-system.js","webpack:///./~/dagre/lib/order/index.js","webpack:///./~/dagre/lib/order/init-order.js","webpack:///./~/dagre/lib/order/cross-count.js","webpack:///./~/dagre/lib/order/sort-subgraph.js","webpack:///./~/dagre/lib/order/barycenter.js","webpack:///./~/dagre/lib/order/resolve-conflicts.js","webpack:///./~/dagre/lib/order/sort.js","webpack:///./~/dagre/lib/order/build-layer-graph.js","webpack:///./~/dagre/lib/order/add-subgraph-constraints.js","webpack:///./~/dagre/lib/position/index.js","webpack:///./~/dagre/lib/position/bk.js","webpack:///./~/dagre/lib/debug.js","webpack:///./~/dagre/lib/version.js","webpack:///external \"classname\""],"names":[],"mappings":"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;;;;;;AC7CA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA2B;AAC3B;AACA;AACA;AACA,6BAA4B,UAAU;;;;;;;;;;AClGtC;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,kBAAkB;;AAE/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,SAAS;AACpB;AACA;AACA,YAAW,IAAI;AACf;AACA;AACA;AACA;AACA;AACA,YAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,cAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,IAAI;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,SAAS;AACtB,gBAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA,oBAAmB,sBAAsB;AACzC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,SAAS;AACtB,gBAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc,yBAAyB;AACvC;;AAEA;AACA;AACA,gBAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA,oBAAmB,aAAa;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAgB;AAChB;AACA,MAAK;AACL;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA,aAAY,yBAAyB;;AAErC;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,E;;;;;;;;;ACrQA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACrEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,cAAa,YAAY;AACzB;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,cAAa,QAAQ;AACrB;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;AC5BA;AACA;;AAEA;;;;;;;;;;;ACHA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,GAAE;AACF;AACA;;AAEA;AACA;;;;;;;;;;AClBA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,kBAAkB;;AAE/F;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oEAAmE;AACnE;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4CAA2C,sCAAsC;;AAEjF;AACA;AACA;;AAEA;AACA,oCAAmC,aAAa;AAChD;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA,kBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA,yEAAwE;AACxE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,6BAA6B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;;;;;;;;;;AC9HA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,E;;;;;;;;;ACvBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,gBAAgB;AAC3B;AACA;AACA;AACA,YAAW,SAAS;AACpB;AACA;AACA,cAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;;;;;;;;;AClDA;;AAEA;;AAEA,oDAAmD,gBAAgB,sBAAsB,OAAO,2BAA2B,0BAA0B,yDAAyD,2BAA2B,EAAE,EAAE,EAAE,eAAe;;AAE9P;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,kBAAkB;;AAE/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,YAAY;AACvB,cAAa,SAAS;AACtB;AACA;AACA,yEAAwE,aAAa;AACrF;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA,yBAAwB;AACxB;AACA,QAAO;AACP;AACA;AACA,E;;;;;;;;;ACzDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,YAAY;AACvB,cAAa,SAAS;AACtB;AACA;AACA;;AAEA;AACA,mEAAkE,aAAa;AAC/E;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA,MAAK;;AAEL;AACA;AACA,E;;;;;;;;;mCCvCA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B,QAAQ;AAClC,kCAAiC,iCAAiC;AAClE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C;AAC7C;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,SAAS;AAC1B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uCAAsC,EAAE;AACxC,qBAAoB;AACpB;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sCAAqC;AACrC;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAsB,SAAS;AAC/B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA,mDAAuB,aAAa;;;AAGpC,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAC;;;;;;;;;;;AC/QD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA,iBAAgB,oCAAoC;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;AACA,cAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iDAAgD,EAAE;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,6BAA6B;AAChD;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,sBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,oBAAmB,cAAc;AACjwDAAuD,OAAO;AAC9D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,wDAAuD,OAAO;AAC9D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,sBAAqB,QAAQ;AAC7B;AACA;AACA,IAAG;AACH;AACA,gBAAe,SAAS;AACxB;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAkB;AAClB;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAmB,SAAS;AAC5B;AACA;AACA,IAAG;AACH;AACA;AACA,oBAAmB,SAAS;AAC5B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,wCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB,YAAY;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,gBAAgB;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;;;;;;;;;;AC3gDA;;AAEA,EAAC;AACD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,qBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kDAAiD,YAAY;AAC7D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAC,6BAAqD;;;;;;;;;;AC3HtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAQ,WAAW;;AAEnB;AACA;AACA;AACA,SAAQ,WAAW;;AAEnB;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA,SAAQ,WAAW;;AAEnB;AACA;AACA,SAAQ,UAAU;;AAElB;AACA;;;;;;;;;;ACnFA,kBAAiB;;AAEjB;AACA;AACA;;;;;;;;;;ACJA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAK,cAAc;AACnB,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;;;;;;;;;;ACpDD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;;;;;;;;;;ACzBD,gB;;;;;;;;;ACAA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;ACXA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAqB,QAAQ;AAC7B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;AC5EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAkB,QAAQ;AAC1B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;ACzIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,wBAAuB,SAAS;AAChC;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6CAA4C,KAAK;;AAEjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,MAAK;AACL;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,oCAAmC,OAAO;AAC1C;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;;AAGA;AACA;AACA,0DAAyD;AACzD;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX,UAAS;AACT;AACA;AACA,YAAW;AACX;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,SAAS;AACpB;AACA,YAAW,SAAS;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;ACzkBA;AACA;AACA;AACA;AACA;AACA,E;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,QAAQ;AAC3B;AACA;AACA;;AAEA;;AAEA;AACA,aAAY,OAAO,OAAO,YAAY,OAAO,OAAO,OAAO;AAC3D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;;;;;;;;;ACloBAAmB,QAAQ;AAC3B;;AAEA;;AAEA;AACA;AACA;;AAEA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;;;;;;;;;ACnPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAgB,cAAc;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;AC1JA;AACA,sCAAqC;AACrC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAkB;;;;;;;;;;;;AChClB;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,kdAAid,+BAA+B;AAChf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,yBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,uBAAuB;AACxC;AACA;AACA;AACA;;AAEA;;AAEA;AACA,kBAAiB,QAAQ;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK,OAAO;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK,OAAO;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAgB,YAAY;AAC5B;AACA;;AAEA;AACA,kBAAiB,OAAO;AACxB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC1MA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;;AAEA,iBAAgB,eAAe;AAC/B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACzCA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;A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GAAG,SAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C;AAC1C;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;;;;;;;;;AC1IA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,MAAM;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACXA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,cAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACjCA;;AAEA;AACA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,EAAE;AACb,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,YAAW,EAAE;AACb,cAAa,QAAQ;AACrB;AACA;AACA,kBAAiB;AACjB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACpCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,cAAa,EAAE;AACf;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;AClBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,cAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACfA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,EAAE;AACb,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,SAAS;AACpB,cAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACrBA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;AC1BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;;;;;;;;;AChBA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,MAAM;AACjB,YAAW,OAAO,WAAW;AAC7B,YAAW,SAAS;AACpB,cAAa,OAAO;AACpB;AACA;AACA,yBAAwB;;AAExB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;AC9BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,cAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,MAAM;AACjB,cAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACnBA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO,WAAW;AAC7B,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACtBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,cAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACfA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,YAAW,SAAS;AACpB,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,MAAM;AACjB,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV;AACA,YAAW,EAAE;AACb,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACrEA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,EAAE;AACf;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACZA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,cAAa,YAAY;AACzB;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACXA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;ACNA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;ACNA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;ACNA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;ACNA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,SAAS;AACpB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;;;;;;;;;;ACtBA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,MAAM;AACjB,cAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,cAAa,EAAE;AACf;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACpBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACjBA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,cAAa,QAAQ;AACrB;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACjBA;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,kDAAiD,eAAe;;AAEhE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,UAAU;AACrB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;;;;;;;;;ACzDA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,SAAS;AACpB,cAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACjBA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,cAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA,YAAW,SAAS;AACpB,YAAW,EAAE;AACb,YAAW,MAAM;AACjB,cAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,cAAa,EAAE;AACf;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACpBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACjCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,cAAa,EAAE;AACf;AACA;;AAEA;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,cAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACbA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;AC1CA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACnCA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,cAAa,MAAM;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8CAA6C,eAAe;AAC5D;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACnCA;;AAEA;AACA;;AAEA;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,cAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACjBA;;AAEA;AACA;AACA;AACA;AACA,0FAAgF;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,iCAAgC,UAAU,EAAE;AAC5C,E;;;;;;;;;ACpBA;AACA;;;AAGA;AACA,mCAAkC,mBAAmB,GAAG,gCAAgC,sBAAsB,GAAG,mCAAmC,gBAAgB,WAAW,sBAAsB,GAAG,uDAAuD,kBAAkB,GAAG,0DAA0D,mBAAmB,GAAG,qDAAqD,mBAAmB,GAAG,6BAA6B,uBAAuB,gBAAgB,iBAAiB,qBAAqB,qBAAqB,GAAG,4CAA4C,oBAAoB,mBAAmB,uBAAuB,kCAAkC,GAAG,iDAAiD,uBAAuB,iBAAiB,iBAAiB,oBAAoB,GAAG,2DAA2D,mBAAmB,+BAA+B,iBAAiB,gBAAgB,uBAAuB,GAAG,kEAAkE,4BAA4B,GAAG,2EAA2E,iBAAiB,GAAG,qEAAqE,6BAA6B,GAAG,8EAA8E,kBAAkB,GAAG,gEAAgE,6BAA6B,GAAG,yEAAyE,kBAAkB,GAAG,wDAAwD,oBAAoB,GAAG,iCAAiC,uBAAuB,cAAc,aAAa,qCAAqC,GAAG;;AAEzvD;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB,iBAAiB;AACjC;AACA;AACA,yCAAwC,gBAAgB;AACxD,KAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;AACA,aAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA,GAAE;AACF;AACA;AACA,GAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,sBAAsB;AACtC;AACA;AACA,mBAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAe,mBAAmB;AAClC;AACA;AACA;AACA;AACA,kBAAiB,2BAA2B;AAC5C;AACA;AACA,SAAQ,uBAAuB;AAC/B;AACA;AACA,IAAG;AACH;AACA,kBAAiB,uBAAuB;AACxC;AACA;AACA,4BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA,iCAAgC,sBAAsB;AACtD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA,GAAE;AACF;AACA,GAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;;AAEA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,wDAAuD;AACvD;;AAEA,8BAA6B,mBAAmB;;AAEhD;;AAEA;;AAEA;AACA;AACA;;;;;;;;;;ACrPA;AACA;;AAEA;AACA,EAAC,e;;;;;;;;;ACJD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACTA,0bAAyb,WAAW,kGAAkG,WAAW,GAAG,WAAW,GAAG,WAAW,GAAG,WAAW,quCAAquC,QAAQ,YAAY,qBAAqB,0uCAA0uC,YAAY,GAAG,YAAY,iCAAiC,wBAAwB,8CAA8C,kCAAkC,mCAAmC,GAAG,OAAO,uBAAuB,+CAA+C,SAAS,+BAA+B,EAAE,iDAAiD,uCAA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,KAAK,aAAa,G;;;;;;;;;ACAl+jjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;;;;;;;;;AChCA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,+BAA+B;AAC3C;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;;;;;;;;;;ACJA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qEAAoE,WAAW;AAC/E;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,mCAAkC,oCAAoC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA,aAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C,qBAAqB,EAAE;AAClE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C,qBAAqB,EAAE;AAClE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA,mBAAkB,eAAe;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;ACtgBA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;mCCdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4CAA2C;AAC3C;AACA,4DAA2D;;AAE3D;AACA,oDAAmD;AACnD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+CAA8C;AAC9C;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,2BAA0B,MAAM,aAAa,OAAO;;AAEpD;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe;AACf,eAAc;AACd,eAAc;AACd,iBAAgB;AAChB,gBAAe;AACf,gBAAe;AACf;;AAEA;AACA;AACA,WAAU;AACV,UAAS;AACT,UAAS;AACT,YAAW;AACX,WAAU;AACV,WAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,EAAE;AACf,cAAa,EAAE;AACf,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,MAAM;AACnB,cAAa,SAAS;AACtB,cAAa,QAAQ;AACrB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,MAAM;AACnB,cAAa,EAAE;AACf,cAAa,OAAO;AACpB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,EAAE;AACf,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,EAAE;AACf,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,gBAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,UAAU;AACvB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,MAAM;AACnB,cAAa,OAAO;AACpB,cAAa,QAAQ;AACrB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,EAAE;AACf,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,MAAM;AACnB,cAAa,EAAE;AACf,gBAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,MAAM;AACnB,cAAa,SAAS;AACtB,gBAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,gBAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,gBAAe,SAAS;AACxB;AACA;AACA,eAAc,2BAA2B;AACzC;AACA;AACA,oBAAmB,gCAAgC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,OAAM;AACN;AACA;AACA,kCAAiC,6BAA6B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gEAA+D;AAC/D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,QAAQ;AACvB,gBAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW;AACX;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB;AACA;AACA;;AAEA,oBAAmB;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,SAAS;AACxB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,SAAS;AACxB,kBAAiB,MAAM;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,SAAS;AACxB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,SAAS;AACxB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,SAAS;AACxB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,gBAAe,QAAQ;AACvB;AACA,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,gBAAe,QAAQ;AACvB;AACA,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,SAAS;AACxB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,SAAS;AACxB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,aAAa;AAC5B,gBAAe,kBAAkB;AACjC,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,MAAM;AACrB,gBAAe,OAAO,WAAW;AACjC,kBAAiB,OAAO;AACxB;AACA;AACA,6BAA4B;;AAE5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,gBAAe,OAAO;AACtB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,QAAQ;AACvB,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA,+CAA8C;AAC9C;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA,qCAAoC,6BAA6B,EAAE;AACnE;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,SAAS;AACxB,kBAAiB,oBAAoB;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,SAAS;AACxB,kBAAiB,oBAAoB;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,SAAS;AACxB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,EAAE;AACjB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,MAAM;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,SAAS;AACxB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,QAAQ;AACvB;AACA,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,QAAQ;AACvB,gBAAe,QAAQ;AACvB,gBAAe,MAAM;AACrB,kBAAiB,MAAM;AACvB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,kBAAiB,OAAO;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,kBAAiB,OAAO;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,MAAM;AACrB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,gBAAe,SAAS;AACxB,gBAAe,QAAQ;AACvB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,QAAQ;AACvB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,MAAM;AACrB,gBAAe,SAAS;AACxB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,SAAS;AACxB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,EAAE;AACjB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,aAAa;AAC5B,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,SAAS;AACxB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,gBAAe,QAAQ;AACvB;AACA,gBAAe,SAAS;AACxB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,SAAS;AACxB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,SAAS;AACxB,kBAAiB,MAAM;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,6BAA6B;AAC5C,gBAAe,UAAU;AACzB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;;AAEA,2DAA0D,2BAA2B,EAAE;;AAEvF;AACA,gEAA+D,wBAAwB,EAAE;AACzF,iBAAgB;AAChB,QAAO;;AAEP;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,SAAS;AACxB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,SAAS;AACxB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,MAAM;AACrB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,SAAS;AACxB,gBAAe,QAAQ;AACvB,gBAAe,QAAQ;AACvB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,MAAM;AACrB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,EAAE;AACjB,gBAAe,QAAQ;AACvB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8CAA6C;AAC7C;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,EAAE;AACjB,gBAAe,SAAS;AACxB,gBAAe,QAAQ;AACvB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,gBAAe,OAAO;AACtB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,YAAY;AAC3B,kBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,aAAa;AAC5B,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,aAAa;AAC5B,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,QAAQ;AACvB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,SAAS;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,kBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,QAAQ;AACvB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,gBAAgB;AAC/B,gBAAe,OAAO;AACtB,gBAAe,EAAE;AACjB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,gBAAe,EAAE;AACjB,gBAAe,MAAM;AACrB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,gBAAgB;AAC/B,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,QAAQ;AACvB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,QAAQ;AACvB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,EAAE;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,MAAM;AACrB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,2CAA0C;AAC1C,yCAAwC;AACxC,gEAA+D;AAC/D,kEAAiE;AACjE;AACA;AACA,eAAc;AACd;;AAEA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,aAAa;AAC5B,gBAAe,MAAM;AACrB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,OAAO;AACtB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,OAAO;AACtB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,kBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,SAAS;AACxB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA,WAAU,oCAAoC;AAC9C,WAAU,qCAAqC;AAC/C,WAAU;AACV;AACA;AACA;AACA,yCAAwC,qCAAqC;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA,WAAU,qCAAqC;AAC/C,WAAU,qCAAqC;AAC/C,WAAU;AACV;AACA;AACA;AACA,oCAAmC,oCAAoC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,EAAE;AACjB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA,WAAU,qCAAqC;AAC/C,WAAU,qCAAqC;AAC/C,WAAU;AACV;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA,4BAA2B,kCAAkC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA,WAAU,oCAAoC;AAC9C,WAAU,qCAAqC;AAC/C,WAAU;AACV;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA,gCAA+B,mCAAmC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,QAAQ;AACvB,iBAAgB,OAAO;AACvB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,EAAE;AACjB,gBAAe,eAAe;AAC9B;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,EAAE;AACjB,gBAAe,eAAe;AAC9B;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,KAAK;AACpB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,qBAAqB;AACpC;AACA,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,EAAE;AACjB,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,UAAU,yCAAyC;AACtE;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA,wBAAuB,UAAU,GAAG,UAAU,IAAI,UAAU;AAC5D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,EAAE;AACjB,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA,WAAU,oCAAoC;AAC9C,WAAU,qCAAqC;AAC/C,WAAU;AACV;AACA;AACA;AACA,yCAAwC,qCAAqC;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA,WAAU,qCAAqC;AAC/C,WAAU,oCAAoC;AAC9C,WAAU;AACV;AACA;AACA;AACA,oCAAmC,oCAAoC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,QAAQ;AACvB,gBAAe,uBAAuB;AACtC,gBAAe,EAAE;AACjB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA,iBAAgB,SAAS,GAAG,SAAS,GAAG,SAAS;AACjD,gBAAe,SAAS,GAAG,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,KAAK;AACpB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA,eAAc;AACd;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA,WAAU,+BAA+B;AACzC,WAAU,+BAA+B;AACzC,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA,WAAU,8BAA8B;AACxC,WAAU;AACV;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,KAAK;AACpB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC,4DAA4D;AAC9F;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,qCAAqC;AACpD;AACA,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA,SAAQ;AACR,eAAc;AACd;AACA;AACA;AACA,SAAQ;AACR,eAAc;AACd;AACA;AACA,eAAc;AACd;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU,oCAAoC;AAC9C,WAAU;AACV;AACA;AACA;AACA,wBAAuB,oCAAoC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA,WAAU,8CAA8C;AACxD,WAAU;AACV;AACA;AACA;AACA,iCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA,WAAU,+CAA+C;AACzD,WAAU,gDAAgD;AAC1D,WAAU;AACV;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA,gCAA+B,2BAA2B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,OAAO;AACtB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA,WAAU,8CAA8C;AACxD,WAAU;AACV;AACA;AACA,qCAAoC,4BAA4B;AAChE;AACA;AACA,qCAAoC,6BAA6B;AACjE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA,mBAAkB,iBAAiB;AACnC;AACA,SAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA,SAAQ;AACR,eAAc;AACd;AACA;AACA;AACA,SAAQ;AACR,eAAc;AACd;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,EAAE;AACjB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA,WAAU,4BAA4B;AACtC,WAAU;AACV;AACA;AACA;AACA,eAAc,UAAU,4BAA4B,YAAY,8BAA8B;AAC9F;AACA;AACA;AACA,SAAQ;AACR,eAAc,OAAO,4BAA4B,QAAQ,8BAA8B;AACvF;AACA;AACA;AACA,SAAQ;AACR,eAAc,OAAO,4BAA4B,QAAQ,8BAA8B;AACvF;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,sBAAsB;AACrC;AACA,gBAAe,KAAK;AACpB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,iBAAiB;AAC/B;AACA;AACA;AACA,WAAU,mBAAmB;AAC7B,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA,WAAU,gDAAgD;AAC1D,WAAU,+CAA+C;AACzD,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,4BAA4B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK,cAAc,iBAAiB,EAAE;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,aAAa;AAC5B,kBAAiB,MAAM;AACvB;AACA;AACA;AACA,WAAU,8BAA8B;AACxC,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA,kBAAiB,iBAAiB;AAClC;AACA;AACA,SAAQ,IAAI;AACZ,eAAc,iBAAiB;AAC/B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;;AAEA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA,WAAU,+CAA+C;AACzD,WAAU;AACV;AACA;AACA;AACA,iCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA,gBAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU,mCAAmC;AAC7C,WAAU;AACV;AACA;AACA;AACA,uBAAsB,oCAAoC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA,WAAU,iBAAiB;AAC3B,WAAU,oBAAoB;AAC9B,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAgB;AAChB,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,yDAAyD;AACxE;AACA,kBAAiB,MAAM;AACvB;AACA;AACA;AACA,WAAU,8BAA8B;AACxC,WAAU,8BAA8B;AACxC,WAAU,8BAA8B;AACxC,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,6BAA6B;AAC5C,gBAAe,UAAU;AACzB,iBAAgB,OAAO;AACvB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA,WAAU,8BAA8B;AACxC,WAAU,8BAA8B;AACxC,WAAU,8BAA8B;AACxC,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,OAAO;AACtB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA,WAAU,kEAAkE;AAC5E,WAAU;AACV;AACA;AACA,gCAA+B,6BAA6B;AAC5D;AACA;AACA,gCAA+B,mBAAmB;AAClD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA,qBAAoB,iCAAiC;AACrD,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,gBAAe,KAAK;AACpB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,qBAAqB;AACpC;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,KAAK;AACpB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB;AACA,gBAAe,OAAO;AACtB;AACA,gBAAe,QAAQ;AACvB;AACA,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B,kCAAkC;AAChE;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,KAAK;AACpB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,gBAAe,KAAK;AACpB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,YAAY;AAC3B,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,YAAY;AAC3B,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB,qBAAoB;AACpB;AACA;AACA;AACA,eAAc;AACd;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,yBAAyB;AACxC;AACA,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,KAAK;AACpB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,KAAK;AACpB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,qBAAqB;AACpC;AACA,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB;AACA,gBAAe,QAAQ;AACvB;AACA,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,oCAAmC,6DAA6D;AAChG;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,SAAS;AACxB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA,qCAAoC;AACpC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,gDAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,QAAQ;AACvB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA,WAAU,mBAAmB;AAC7B,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA,WAAU,mBAAmB;AAC7B,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA,kCAAiC,kBAAkB,EAAE;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA,8BAA6B,kBAAkB,EAAE;AACjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA,sBAAqB;AACrB,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA,sBAAqB;AACrB;AACA,2BAA0B,YAAY;AACtC;AACA;AACA,2BAA0B,YAAY;AACtC;AACA;AACA;AACA,sBAAqB;AACrB,sBAAqB;AACrB;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,iBAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,SAAS;AAC1B,eAAc;AACd;AACA,kBAAiB,SAAS;AAC1B,eAAc;AACd;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,UAAU;AACzB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA,oBAAmB,mBAAmB,GAAG,iBAAiB;AAC1D;AACA;AACA;AACA,oBAAmB,YAAY,GAAG,YAAY;AAC9C;AACA;AACA;AACA,eAAc,WAAW,8BAA8B,GAAG,4BAA4B;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR,eAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,UAAU;AACzB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA,kBAAiB,mBAAmB,GAAG,YAAY,GAAG,iBAAiB;AACvE,eAAc;AACd;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA,kBAAiB,mBAAmB,GAAG,YAAY,GAAG,iBAAiB;AACvE,eAAc;AACd;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,UAAU;AACzB,kBAAiB,OAAO;AACxB;AACA;AACA,oBAAmB,mBAAmB,GAAG,YAAY,GAAG,iBAAiB;AACzE,eAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,UAAU;AACzB,kBAAiB,OAAO;AACxB;AACA;AACA,wBAAuB,UAAU,mBAAmB,EAAE,GAAG,UAAU,4BAA4B,EAAE;AACjG,eAAc,UAAU,8BAA8B;AACtD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,iBAAiB;AAClC;AACA;AACA;AACA,sBAAqB,4BAA4B;AACjD,sBAAqB,6BAA6B;AAClD,sBAAqB;AACrB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA,0BAAyB,2BAA2B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,iBAAiB;AAClC;AACA;AACA;AACA,sBAAqB,4BAA4B;AACjD,sBAAqB,6BAA6B;AAClD,sBAAqB;AACrB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA,8BAA6B,4BAA4B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,aAAa;AAC5B,gBAAe,EAAE;AACjB,kBAAiB,EAAE;AACnB;AACA;AACA,sBAAqB,QAAQ,OAAO,SAAS,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,aAAa;AAC5B,kBAAiB,QAAQ;AACzB;AACA;AACA,sBAAqB,OAAO,OAAO,SAAS,EAAE;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB,iBAAgB,OAAO;AACvB,kBAAiB,OAAO;AACxB;AACA;AACA,sBAAqB;AACrB;AACA;AACA,eAAc;AACd;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA,mBAAkB,iBAAiB;AACnC;AACA,SAAQ;AACR,eAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA,qBAAoB,iBAAiB;AACrC;AACA,SAAQ;AACR,eAAc;AACd;AACA;AACA,sBAAqB,+BAA+B;AACpD,sBAAqB;AACrB;AACA;AACA;AACA;AACA,eAAc,2BAA2B;AACzC;AACA;;AAEA;AACA,iCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,8BAA8B;AAC7C;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA,sBAAqB;AACrB;AACA;AACA,eAAc;AACd;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,MAAM;AACvB;AACA;AACA,iBAAgB,2BAA2B;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,8BAA8B;AAC7C;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA,sBAAqB;AACrB;AACA;AACA,eAAc;AACd;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,aAAa;AAC5B,gBAAe,EAAE;AACjB,kBAAiB,EAAE;AACnB;AACA;AACA,sBAAqB,QAAQ,OAAO,+BAA+B,EAAE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,aAAa;AAC5B,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA,sBAAqB,QAAQ,OAAO,SAAS,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,aAAa;AAC5B,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA,qBAAoB,iBAAiB;AACrC;AACA,SAAQ;AACR,eAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wCAAuC,QAAQ;AAC/C;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA,kBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA,kBAAiB,sBAAsB;AACvC,sBAAqB,UAAU;AAC/B;AACA;AACA,uEAAsE,2BAA2B,EAAE;AACnG,kBAAiB,8BAA8B;AAC/C;AACA;AACA;AACA,6DAA4D;AAC5D,kBAAiB,mBAAmB;AACpC;AACA;AACA;AACA,2CAA0C,OAAO;AACjD,kBAAiB,oBAAoB;AACrC;AACA;AACA;AACA,4CAA2C,YAAY;AACvD,2CAA0C,QAAQ;AAClD,kBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA,kBAAiB,qBAAqB;AACtC;AACA;AACA;AACA,sDAAqD,2BAA2B,EAAE;AAClF,yCAAwC,aAAa,eAAe,EAAE;AACtE,kBAAiB,8BAA8B;AAC/C;AACA;AACA;AACA,yDAAwD,qCAAqC;AAC7F;AACA;AACA;AACA;AACA,2DAA0D,qBAAqB;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yCAAwC;;AAExC,6CAA4C;AAC5C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;;AAEP,oBAAmB;;AAEnB;AACA;AACA;AACA;AACA,+BAA8B,mBAAmB;AACjD;AACA;AACA;AACA;AACA,6CAA4C;;AAE5C;AACA,wDAAuD;AACvD;AACA;AACA,8BAA6B,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C;AAC1C,gCAA+B,iCAAiC;AAChE,eAAc;AACd;AACA;AACA,uBAAsB;;AAEtB;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,cAAc;AAC7B,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,cAAc;AAC7B,iBAAgB,OAAO;AACvB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAiC;AACjC,cAAa,QAAQ,QAAQ,UAAU,SAAS,aAAa;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA,uCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,cAAc;AAC7B,iBAAgB,OAAO;AACvB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,iBAAgB,OAAO;AACvB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA,WAAU,8BAA8B;AACxC,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA,gBAAe,4BAA4B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,SAAS;AAC1B;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,EAAE;AACnB;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA,WAAU,8CAA8C;AACxD,WAAU;AACV;AACA;AACA,mCAAkC,6BAA6B;AAC/D,gBAAe,6CAA6C;AAC5D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,aAAa;AAC5B,gBAAe,EAAE;AACjB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA,WAAU,mBAAmB;AAC7B,WAAU;AACV;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,aAAa;AAC5B,gBAAe,KAAK;AACpB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA,WAAU,OAAO,OAAO,qBAAqB,EAAE,EAAE;AACjD,WAAU,OAAO,OAAO,qBAAqB,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,KAAK;AACpB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,gBAAgB;AAC/B,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB;AACA,kBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA,WAAU;AACV;AACA;AACA,iBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,mBAAmB,GAAG,iBAAiB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+BAA8B,qDAAqD;AACnF;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,aAAa;AAC5B,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA,WAAU,OAAO,OAAO,SAAS,EAAE,EAAE;AACrC,WAAU,OAAO,OAAO,SAAS,EAAE;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,uBAAuB;AACtC,gBAAe,EAAE;AACjB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU,8BAA8B;AACxC,WAAU;AACV;AACA;AACA;AACA;AACA,SAAQ;AACR,eAAc;AACd;AACA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,uBAAuB;AACtC,gBAAe,EAAE;AACjB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU,8BAA8B;AACxC,WAAU;AACV;AACA;AACA;AACA;AACA,SAAQ;AACR,eAAc;AACd;AACA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,uBAAuB;AACtC,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA,eAAc,iBAAiB;AAC/B;AACA;AACA;AACA,WAAU,SAAS;AACnB,WAAU;AACV;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,MAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT,kCAAiC,sEAAsE;AACvG;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAmC,8DAA8D;AACjG;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAsB,4DAA4D;AAClF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAoB,yCAAyC;AAC7D;AACA,MAAK;;AAEL,uEAAsE,uCAAuC;;AAE7G;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;;;;;;;;;;AC9jYD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACTA;;;;;;;;;;ACAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,gBAAe,2CAA2C;AAC1D,IAAG;AACH;AACA;;;;;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACZA;;AAEA;;AAEA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;;;;;;;;;AC1BA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,6CAA4C,sBAAsB,EAAE;AACpE;;AAEA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;ACrDA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qCAAoC,cAAc,EAAE;AACpD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA2C;AAC3C;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,6BAA6B;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACvJA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG,IAAI;AACP;;;;;;;;;;ACTA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;AACH;;;;;;;;;;ACTA;;AAEA;;AAEA;AACA;AACA;AACA,mBAAkB,iBAAiB;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;;;;;;;;;AC9CA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,kDAAiD,sBAAsB,EAAE;AACzE;;AAEA;AACA,mBAAkB;AAClB;;AAEA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,0BAAyB;AACzB;AACA,MAAK;AACL;AACA;AACA;AACA,wBAAuB;AACvB,MAAK;AACL,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL,IAAG;;AAEH;AACA;;;;;;;;;;ACjDA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACdA;;AAEA;AACA;;AAEA;AACA,mBAAkB;AAClB,iBAAgB;AAChB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;ACjCA;;AAEA;;AAEA;AACA;AACA;;;;;;;;;;ACNA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA,sBAAqB,aAAa;AAClC;AACA;AACA,MAAK;AACL,qBAAoB,aAAa;AACjC;AACA;;;;;;;;;;ACtCA;;AAEA;;AAEA;AACA;AACA;;;;;;;;;;ACNA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;ACnDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,4CAA2C,4BAA4B,EAAE;AACzE,4CAA2C,8BAA8B,EAAE;AAC3E,4CAA2C,kCAAkC,EAAE;AAC/E,IAAG;AACH;;AAEA;AACA,kDAAiD,2BAA2B,EAAE;AAC9E,kDAAiD,oBAAoB,EAAE;AACvE,kDAAiD,gBAAgB,EAAE;AACnE,kDAAiD,qBAAqB,EAAE;AACxE,kDAAiD,kCAAkC,EAAE;AACrF,kDAAiD,2BAA2B,EAAE;AAC9E,kDAAiD,qBAAqB,EAAE;AACxE,kDAAiD,yBAAyB,EAAE;AAC5E,kDAAiD,mBAAmB,EAAE;AACtE,kDAAiD,qBAAqB,EAAE;AACxE,kDAAiD,2BAA2B,EAAE;AAC9E,kDAAiD,kBAAkB,EAAE;AACrE,kDAAiD,sBAAsB,EAAE;AACzE,kDAAiD,sBAAsB,EAAE;AACzE,kDAAiD,UAAU,EAAE;AAC7D,kDAAiD,oBAAoB,EAAE;AACvE,kDAAiD,4BAA4B,EAAE;AAC/E,kDAAiD,aAAa,EAAE;AAChE,kDAAiD,sBAAsB,EAAE;AACzE,kDAAiD,sBAAsB,EAAE;AACzE,kDAAiD,mBAAmB,EAAE;AACtE,kDAAiD,yBAAyB,EAAE;AAC5E,kDAAiD,0BAA0B,EAAE;AAC7E,kDAAiD,mBAAmB,EAAE;AACtE,kDAAiD,yBAAyB,EAAE;AAC5E,kDAAiD,kCAAkC,EAAE;AACrF,kDAAiD,iBAAiB,EAAE;AACpE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA,sBAAqB,uDAAuD;AAC5E;AACA;AACA,qBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,mCAAmC;AACxD;;AAEA,wBAAuB;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,4BAA2B;AAC3B;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kCAAiC,wBAAwB,EAAE;AAC3D;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,4BAA2B,gBAAgB;AAC3C,4BAA2B,gBAAgB;AAC3C,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA8D;AAC9D,+DAA8D;AAC9D;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,yBAAyB;AACpD;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA,MAAK;AACL,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS,+BAA+B;AACxC,UAAS,+BAA+B;AACxC,UAAS,0BAA0B;AACnC,UAAS,+BAA+B;AACxC,UAAS,+BAA+B;AACxC;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;;;;;;;;;ACvYA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;ACdA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAgB;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;;;;;;;;;AClEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,0CAAyC,wCAAwC;AACjF,0CAAyC,wCAAwC;AACjF;AACA,uCAAsC,OAAO;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAoB,uBAAuB;AAC3C;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0BAAyB,wBAAwB;AACjD,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH,6DAA4D,mBAAmB,EAAE;AACjF;;AAEA;AACA;AACA,IAAG;;AAEH,WAAU;AACV;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;;;;;;;;;;ACrHA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;ACvDA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC,wBAAwB,EAAE;AAC9D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,uBAAsB,eAAe;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB,2BAA2B;AACpD;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,2BAA2B;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B,uBAAuB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;;;;;;;;;ACzFA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,kCAAkC,EAAE;AACrE;AACA,qDAAoD,uBAAuB;AAC3E;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;AACA;;AAEA;AACA,+BAA8B,+BAA+B;AAC7D;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;AACH;AACA;;AAEA;AACA,2CAA0C,KAAK;AAC/C,MAAK,oBAAoB;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA,6DAA4D,WAAW,EAAE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iDAAgD,uBAAuB,EAAE;AACzE;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA,oDAAmD,uBAAuB,EAAE;;AAE5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,+BAA8B,yBAAyB,EAAE;AACzD;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;AC3OA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAoD;AACpD,2CAA0C;AAC1C,+CAA8C;AAC9C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;AC/CA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC5DA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,kBAAkB;;AAEvC;AACA;AACA;AACA,sBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB,2BAA0B;AAC1B;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA,IAAG;AACH;;;;;;;;;;ACxFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA0B;AAC1B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH,4CAA2C,uBAAuB,EAAE;AACpE;;AAEA;AACA;AACA;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;;AAEA;AACA,6CAA4C,0BAA0B,EAAE;AACxE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACzOA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,WAAU;AACV;;AAEA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;;AAEA;AACA;;;;;;;;;;ACrFA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C;AAC5C;AACA;AACA;;AAEA;;AAEA;AACA,kCAAiC,6BAA6B,EAAE;;AAEhE;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA0B,6BAA6B;AACvD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA,2BAA0B,wCAAwC;AAClE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,qCAAoC,WAAW,EAAE;AACjD;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;;;;;;;;;ACnIA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gBAAe,oDAAoD;AACnE;AACA;AACA;AACA;AACA;AACA,4BAA2B,YAAY;AACvC;AACA;;;;;;;;;;ACrCA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAiC,+BAA+B,EAAE;AAClE,kCAAiC,+BAA+B,EAAE;AAClE;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAiC,wBAAwB,EAAE;;AAE3D;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA,kCAAiC,sBAAsB,EAAE;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;ACvEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,gCAA+B,cAAc;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;;;;;;;;;;AC9EA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA,QAAO;AACP,uDAAsD,uBAAuB,EAAE;AAC/E,wDAAuD,WAAW,EAAE;;AAEpE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sDAAqD,uBAAuB,EAAE;AAC9E;;AAEA;AACA;;;;;;;;;;ACrCA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iEAAgE,UAAU,EAAE;AAC5E;AACA;AACA;AACA,uBAAsB;AACtB,cAAa;AACb;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,qDAAoD,UAAU,EAAE;;AAEhE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;;;;;;;;;ACrEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;;;;;;;;;AC3EA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,eAAc;AACd,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO,GAAG,oBAAoB;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;;;;;;;;;;AC1BA;;AAEA;;AAEA;;AAEA;AACA,yCAAwC,sBAAsB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC,sBAAsB;AACxD,+BAA8B,EAAE;AAChC;AACA;AACA;AACA,0CAAyC,0BAA0B;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAmC,sBAAsB,EAAE;AAC3D;AACA;AACA,YAAW;AACX;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC1HA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA,yDAAwD,iBAAiB,EAAE;AAC3E;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;;;;;;;;;;ACxDA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B,iBAAiB,YAAY,aAAa;AACpE,qDAAoD,kBAAkB,EAAE;;AAExE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+BAA8B,oCAAoC;AAClE,QAAO;;AAEP;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;ACxEA;;AAEA;;AAEA;AACA,gBAAe;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B,4BAA4B;AACtD;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACpDA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,qDAAoD,yBAAyB,EAAE;AAC/E;AACA;AACA,MAAK;AACL;AACA,IAAG;AACH;;;;;;;;;;;AC5BA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX,UAAS;AACT;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;AACL;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf,iBAAgB;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,wCAAuC,eAAe,EAAE;AACxD;AACA,yDAAwD,SAAS;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH,WAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yCAAwC,4BAA4B,EAAE;AACtE,yCAAwC,4BAA4B,EAAE;AACtE;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,uDAAsD,kBAAkB,EAAE;AAC1E;AACA,MAAK;AACL,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,WAAW,EAAE;AACvD;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6CAA4C;AAC5C,4CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,4CAA2C;AAC3C,6CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;AC7YA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAqB,mCAAmC,aAAa;;AAErE;AACA,mBAAkB,WAAW;AAC7B;AACA,IAAG;;AAEH;AACA,2BAA0B;AAC1B,IAAG;;AAEH;AACA;AACA,wBAAuB,eAAe;AACtC;AACA,wBAAuB,iBAAiB;AACxC;AACA,MAAK;AACL,IAAG;;AAEH;AACA;;;;;;;;;;ACjCA;;;;;;;;;;ACAA,kD","file":"./dag.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"react-dom\"), require(\"classname\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\", \"react-dom\", \"classname\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dag\"] = factory(require(\"react\"), require(\"react-dom\"), require(\"classname\"));\n\telse\n\t\troot[\"dag\"] = factory(root[\"React\"], root[\"ReactDOM\"], root[\"classname\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_156__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 351d71b85b24d53a3aee\n **/","import React , { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport {configureStore} from './dag-store';\nimport {getSettings} from './dag-settings';\nimport uuid from 'node-uuid';\n\nrequire('./styles/dag.less');\nrequire('jsPlumb');\n\nvar dagre = require('dagre');\nvar classnames = require('classname');\n\nexport class DAG extends Component {\n  constructor(props) {\n    super(props);\n    this.props = props;\n    let {data, additionalReducersMap, middlewares = []} = props;\n    this.store = configureStore(\n      data,\n      additionalReducersMap,\n      [...middlewares]\n    );\n    this.state = this.store.getState();\n    if (props.data) {\n      this.toggleLoading(true);\n    }\n    this.endpoints = [];\n    if (props.settings) {\n      this.settings = Object.assign({}, props.settings);\n    } else {\n      this.settings = getSettings();\n    }\n    this.store.subscribe( () => {\n      this.setState(this.store.getState());\n      setTimeout(this.renderGraph.bind(this));\n    });\n\n    jsPlumb.ready(() => {\n      let dagSettings = this.settings.default;\n      let container = document.querySelector(`${this.state.componentId} #dag-container`);\n      jsPlumb.setContainer(container);\n      this.instance = jsPlumb.getInstance(dagSettings);\n      this.instance.bind('connection', this.makeConnections.bind(this));\n      this.instance.bind('connectionDetached', this.makeConnections.bind(this));\n    });\n  }\n  toggleLoading(loading) {\n    this.store.dispatch({\n      type: 'LOADING',\n      payload: {\n        loading: loading\n      }\n    });\n  }\n  renderGraph() {\n    this.addEndpoints();\n    this.makeNodesDraggable();\n    this.renderConnections();\n  }\n  makeNodesDraggable() {\n    let nodes = document.querySelectorAll('#dag-container .box');\n    this.instance.draggable(nodes, {\n      start: () => { console.log('Starting to drag')},\n      stop: (dragEndEvent) => {\n        this.store.dispatch({\n          type: 'UPDATE_NODE',\n          payload: {\n            nodeId: dragEndEvent.el.id,\n            style: {\n              top: dragEndEvent.el.style.top,\n              left: dragEndEvent.el.style.left\n            }\n          }\n        });\n        this.instance.repaintEverything();\n      }\n    });\n  }\n  makeConnections(info, originalEvent) {\n    if (!originalEvent) { return; }\n    let connections = this.instance\n      .getConnections()\n      .map(conn => ({\n          from: conn.sourceId,\n          to: conn.targetId\n        })\n      );\n      this.store.dispatch({\n        type: 'SET-CONNECTIONS',\n        payload: {\n          connections\n        }\n      });\n  }\n  renderConnections() {\n    let connectionsFromInstance = this.instance\n      .getConnections()\n      .map( conn => ({\n          from: conn.sourceId,\n          to: conn.targetId\n        })\n      );\n    let {nodes, connections} = this.store.getState();\n    if (connections.length === connectionsFromInstance.length) { return; }\n    connections\n      .forEach( connection => {\n        var sourceNode = nodes.find( node => node.id === connection.from);\n        var targetNode = nodes.find( node => node.id === connection.to);\n        var sourceId = sourceNode.type === 'transform' ? 'Left' + connection.from : connection.from;\n        var targetId = targetNode.type === 'transform' ? 'Right' + connection.to : connection.to;\n        var connObj = {\n          uuids: [sourceId, targetId],\n          detachable: true\n        };\n        this.instance.connect(connObj);\n      });\n  }\n  addEndpoints() {\n    this.store.getState()\n      .nodes\n      .forEach(node => {\n        if (this.endpoints.indexOf(node.id) !== -1) {\n          return;\n        }\n        this.endpoints.push(node.id);\n        let type = node.type;\n        switch(type) {\n          case 'source':\n            this.instance.addEndpoint(node.id, this.settings.source, {uuid: node.id});\n            return;\n          case 'sink':\n            this.instance.addEndpoint(node.id, this.settings.sink, {uuid: node.id});\n            return;\n          default:\n            this.instance.addEndpoint(node.id, this.settings.transformSource, {uuid: `Left${node.id}`});\n            this.instance.addEndpoint(node.id, this.settings.transformSink, {uuid: `Right${node.id}`});\n        }\n      });\n  }\n  componentDidMount() {\n    this.setState(this.store.getState());\n    // Because html id needs to start with a character\n    this.setState({componentId: 'A' + uuid.v4()});\n    setTimeout( () => {\n      this.toggleLoading(false);\n      if (Object.keys(this.props.data || {}).length) {\n        this.renderGraph();\n        this.cleanUpGraph();\n      }\n    }, 1000);\n  }\n  addNode(node) {\n    let {type, label} = node;\n    this.store.dispatch({\n      type: 'ADD-NODE',\n      payload: {\n        type,\n        label,\n        id: type + Date.now().toString().slice(8)\n      }\n    });\n  }\n  cleanUpGraph() {\n    let {nodes, connections} = this.store.getState();\n    let parent = document.querySelector(`#${this.state.componentId} .diagram-container`);\n    let parentDimension = {\n      height: parent.getBoundingClientRect().height,\n      width: parent.getBoundingClientRect().width\n    };\n\n    this.store.dispatch({\n      type: 'CLEANUP-GRAPH',\n      payload: {nodes, connections}\n    });\n\n    this.store.dispatch({\n      type: 'FIT-TO-SCREEN',\n      payload: {nodes, connections, parentDimension}\n    });\n    setTimeout(this.instance.repaintEverything.bind(this));\n  }\n  componentWillUnmount() {\n    this.store.dispatch({\n      type: 'RESET'\n    });\n  }\n  render() {\n    const loadContent = () => {\n      if (this.state.graph.loading) {\n        return (\n          <div className=\"fa fa-spin fa-refresh fa-5x\"></div>\n        );\n      }\n    };\n    const loadNodes = () => {\n      if (!this.state.graph.loading) {\n        return (\n          this.state.nodes.map(function(node) {\n            return (\n                <div className=\"box text-center\" id={node.id} key={node.id} style={node.style}>\n                  <div className={classnames({'dag-node': true, [node.type]: true})}></div>\n                    <div className=\"label\">{node.label}</div>\n                </div>\n              )\n          })\n        );\n      }\n    };\n    return (\n      <my-dag id={this.state.componentId}>\n        {this.props.children}\n        <div className=\"diagram-container\">\n          <div id=\"dag-container\" style={\n            {\n              transform: 'scale(' +\n              this.state.graph.scale +\n              ') ' +\n              'translate( ' +\n              this.state.graph.translate +\n              ')'\n           }}>\n            {loadContent()}\n            {loadNodes()}\n          </div>\n        </div>\n      </my-dag>\n    );\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./dag.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}\n ** module id = 1\n ** module chunks = 0 1\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"ReactDOM\",\"commonjs2\":\"react-dom\",\"commonjs\":\"react-dom\",\"amd\":\"react-dom\"}\n ** module id = 2\n ** module chunks = 0 1\n **/","import {combineReducers, createStore, applyMiddleware} from 'redux';\nimport uuid from 'node-uuid';\n\nlet nodes = (state = [], action = {}) => {\n  switch(action.type) {\n    case 'ADD-NODE':\n      return [\n        ...state,\n        {\n          id: uuid.v4(),\n          label: action.payload.label,\n          type: action.payload.type\n        }\n      ];\n    case 'UPDATE_NODE':\n      return state.map(node => {\n        if (node.id === action.payload.nodeId) {\n          node.style = action.payload.style;\n          return node;\n        }\n        return node;\n      });\n    case 'RESET':\n      return [];\n    default:\n      return state;\n  }\n};\nconst connections = (state = [], action = {}) => {\n  switch(action.type) {\n    case 'ADD-CONNECTIONS':\n      return [\n        ...state,\n        {\n          from: action.connection.from,\n          to: action.connection.to\n        }\n      ];\n    case 'SET-CONNECTIONS':\n      return [...action.payload.connections];\n    case 'RESET':\n      return [];\n    default:\n      return state;\n  }\n};\n\nconst graph = (state = {}, action = {}) => {\n  switch(action.type) {\n    case 'LOADING':\n      return Object.assign({}, state, {loading: action.payload.loading});\n    case 'RESET':\n      return {};\n    default:\n      return state;\n  }\n};\n\nconst defaultReducersMap = () => {\n  return {\n    nodes: [ (state = [], action = {}) => state ],\n    graph: [ (state = {}, action = {}) => state ],\n    connections: [ (state = [], action = {}) => state ]\n  }\n};\n\nlet combinedReducers = (reducersMap = defaultReducersMap()) => {\n  let nodesReducers = [nodes].concat(reducersMap['nodes']);\n  let graphReducers = [graph].concat(reducersMap['graph']);\n\n  return combineReducers({\n    nodes: (state, action) => {\n      return nodesReducers\n        .reduce((prev, curr) => curr.bind(null, prev(state, action), action))();\n    },\n    connections,\n    graph: (state, action) => {\n      return graphReducers\n        .reduce((prev, curr) => curr.bind(null, prev(state, action), action))();\n    }\n  });\n};\n\nexport function configureStore(data, reducersMap, middlewares = []) {\n  let store = createStore(\n    combinedReducers(reducersMap),\n    data,\n    applyMiddleware.apply(null, middlewares)\n  );\n  return store;\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./dag-store.js\n **/","'use strict';\n\nexports.__esModule = true;\nexports.compose = exports.applyMiddleware = exports.bindActionCreators = exports.combineReducers = exports.createStore = undefined;\n\nvar _createStore = require('./createStore');\n\nvar _createStore2 = _interopRequireDefault(_createStore);\n\nvar _combineReducers = require('./combineReducers');\n\nvar _combineReducers2 = _interopRequireDefault(_combineReducers);\n\nvar _bindActionCreators = require('./bindActionCreators');\n\nvar _bindActionCreators2 = _interopRequireDefault(_bindActionCreators);\n\nvar _applyMiddleware = require('./applyMiddleware');\n\nvar _applyMiddleware2 = _interopRequireDefault(_applyMiddleware);\n\nvar _compose = require('./compose');\n\nvar _compose2 = _interopRequireDefault(_compose);\n\nvar _warning = require('./utils/warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/*\n* This is a dummy function to check if the function name has been altered by minification.\n* If the function has been minified and NODE_ENV !== 'production', warn the user.\n*/\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  (0, _warning2[\"default\"])('You are currently using minified code outside of NODE_ENV === \\'production\\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexports.createStore = _createStore2[\"default\"];\nexports.combineReducers = _combineReducers2[\"default\"];\nexports.bindActionCreators = _bindActionCreators2[\"default\"];\nexports.applyMiddleware = _applyMiddleware2[\"default\"];\nexports.compose = _compose2[\"default\"];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/redux/lib/index.js\n ** module id = 4\n ** module chunks = 0 1\n **/","// shim for using process in browser\n\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it don't break things.\nvar cachedSetTimeout = setTimeout;\nvar cachedClearTimeout = clearTimeout;\n\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = cachedSetTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    cachedClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        cachedSetTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/process/browser.js\n ** module id = 5\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\nexports.ActionTypes = undefined;\nexports[\"default\"] = createStore;\n\nvar _isPlainObject = require('lodash/isPlainObject');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _symbolObservable = require('symbol-observable');\n\nvar _symbolObservable2 = _interopRequireDefault(_symbolObservable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar ActionTypes = exports.ActionTypes = {\n  INIT: '@@redux/INIT'\n};\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [initialState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} enhancer The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\nfunction createStore(reducer, initialState, enhancer) {\n  var _ref2;\n\n  if (typeof initialState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = initialState;\n    initialState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, initialState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = initialState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n  function getState() {\n    return currentState;\n  }\n\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected listener to be a function.');\n    }\n\n    var isSubscribed = true;\n\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      isSubscribed = false;\n\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n    };\n  }\n\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n  function dispatch(action) {\n    if (!(0, _isPlainObject2[\"default\"])(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n    for (var i = 0; i < listeners.length; i++) {\n      listeners[i]();\n    }\n\n    return action;\n  }\n\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer;\n    dispatch({ type: ActionTypes.INIT });\n  }\n\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/zenparsing/es-observable\n   */\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object') {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return { unsubscribe: unsubscribe };\n      }\n    }, _ref[_symbolObservable2[\"default\"]] = function () {\n      return this;\n    }, _ref;\n  }\n\n  // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n  dispatch({ type: ActionTypes.INIT });\n\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[_symbolObservable2[\"default\"]] = observable, _ref2;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/redux/lib/createStore.js\n ** module id = 6\n ** module chunks = 0 1\n **/","var getPrototype = require('./_getPrototype'),\n    isHostObject = require('./_isHostObject'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = Function.prototype.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object,\n *  else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) ||\n      objectToString.call(value) != objectTag || isHostObject(value)) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nmodule.exports = isPlainObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/isPlainObject.js\n ** module id = 7\n ** module chunks = 0 1\n **/","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetPrototype = Object.getPrototypeOf;\n\n/**\n * Gets the `[[Prototype]]` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {null|Object} Returns the `[[Prototype]]`.\n */\nfunction getPrototype(value) {\n  return nativeGetPrototype(Object(value));\n}\n\nmodule.exports = getPrototype;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_getPrototype.js\n ** module id = 8\n ** module chunks = 0 1\n **/","/**\n * A method that returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_isHostObject.js\n ** module id = 9\n ** module chunks = 0 1\n **/","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/isObjectLike.js\n ** module id = 10\n ** module chunks = 0 1\n **/","/* global window */\n'use strict';\n\nmodule.exports = require('./ponyfill')(global || window || this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/redux/~/symbol-observable/index.js\n ** module id = 11\n ** module chunks = 0 1\n **/","'use strict';\n\nmodule.exports = function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/redux/~/symbol-observable/ponyfill.js\n ** module id = 12\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\nexports[\"default\"] = combineReducers;\n\nvar _createStore = require('./createStore');\n\nvar _isPlainObject = require('lodash/isPlainObject');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _warning = require('./utils/warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionName = actionType && '\"' + actionType.toString() + '\"' || 'an action';\n\n  return 'Given action ' + actionName + ', reducer \"' + key + '\" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state.';\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === _createStore.ActionTypes.INIT ? 'initialState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!(0, _isPlainObject2[\"default\"])(inputState)) {\n    return 'The ' + argumentName + ' has unexpected type of \"' + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + '\". Expected argument to be an object with the following ' + ('keys: \"' + reducerKeys.join('\", \"') + '\"');\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key);\n  });\n\n  if (unexpectedKeys.length > 0) {\n    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('\"' + unexpectedKeys.join('\", \"') + '\" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('\"' + reducerKeys.join('\", \"') + '\". Unexpected keys will be ignored.');\n  }\n}\n\nfunction assertReducerSanity(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, { type: _createStore.ActionTypes.INIT });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined.');\n    }\n\n    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');\n    if (typeof reducer(undefined, { type: type }) === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined when probed with a random type. ' + ('Don\\'t try to handle ' + _createStore.ActionTypes.INIT + ' or other actions in \"redux/*\" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined.');\n    }\n  });\n}\n\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n  var finalReducerKeys = Object.keys(finalReducers);\n\n  var sanityError;\n  try {\n    assertReducerSanity(finalReducers);\n  } catch (e) {\n    sanityError = e;\n  }\n\n  return function combination() {\n    var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n    var action = arguments[1];\n\n    if (sanityError) {\n      throw sanityError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action);\n      if (warningMessage) {\n        (0, _warning2[\"default\"])(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n    for (var i = 0; i < finalReducerKeys.length; i++) {\n      var key = finalReducerKeys[i];\n      var reducer = finalReducers[key];\n      var previousStateForKey = state[key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(key, action);\n        throw new Error(errorMessage);\n      }\n      nextState[key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n    return hasChanged ? nextState : state;\n  };\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/redux/lib/combineReducers.js\n ** module id = 13\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\nexports[\"default\"] = warning;\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n  try {\n    // This error was thrown as a convenience so that you can use this stack\n    // to find the callsite that caused this warning to fire.\n    throw new Error(message);\n    /* eslint-disable no-empty */\n  } catch (e) {}\n  /* eslint-enable no-empty */\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/redux/lib/utils/warning.js\n ** module id = 14\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\nexports[\"default\"] = bindActionCreators;\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(undefined, arguments));\n  };\n}\n\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass a single function as the first argument,\n * and get a function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?');\n  }\n\n  var keys = Object.keys(actionCreators);\n  var boundActionCreators = {};\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var actionCreator = actionCreators[key];\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n  return boundActionCreators;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/redux/lib/bindActionCreators.js\n ** module id = 15\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports[\"default\"] = applyMiddleware;\n\nvar _compose = require('./compose');\n\nvar _compose2 = _interopRequireDefault(_compose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function (reducer, initialState, enhancer) {\n      var store = createStore(reducer, initialState, enhancer);\n      var _dispatch = store.dispatch;\n      var chain = [];\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch(action) {\n          return _dispatch(action);\n        }\n      };\n      chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = _compose2[\"default\"].apply(undefined, chain)(store.dispatch);\n\n      return _extends({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/redux/lib/applyMiddleware.js\n ** module id = 16\n ** module chunks = 0 1\n **/","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = compose;\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\n\nfunction compose() {\n  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  } else {\n    var _ret = function () {\n      var last = funcs[funcs.length - 1];\n      var rest = funcs.slice(0, -1);\n      return {\n        v: function v() {\n          return rest.reduceRight(function (composed, f) {\n            return f(composed);\n          }, last.apply(undefined, arguments));\n        }\n      };\n    }();\n\n    if (typeof _ret === \"object\") return _ret.v;\n  }\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/redux/lib/compose.js\n ** module id = 17\n ** module chunks = 0 1\n **/","//     uuid.js\n//\n//     Copyright (c) 2010-2012 Robert Kieffer\n//     MIT License - http://opensource.org/licenses/mit-license.php\n\n/*global window, require, define */\n(function(_window) {\n  'use strict';\n\n  // Unique ID creation requires a high quality random # generator.  We feature\n  // detect to determine the best RNG source, normalizing to a function that\n  // returns 128-bits of randomness, since that's what's usually required\n  var _rng, _mathRNG, _nodeRNG, _whatwgRNG, _previousRoot;\n\n  function setupBrowser() {\n    // Allow for MSIE11 msCrypto\n    var _crypto = _window.crypto || _window.msCrypto;\n\n    if (!_rng && _crypto && _crypto.getRandomValues) {\n      // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto\n      //\n      // Moderately fast, high quality\n      try {\n        var _rnds8 = new Uint8Array(16);\n        _whatwgRNG = _rng = function whatwgRNG() {\n          _crypto.getRandomValues(_rnds8);\n          return _rnds8;\n        };\n        _rng();\n      } catch(e) {}\n    }\n\n    if (!_rng) {\n      // Math.random()-based (RNG)\n      //\n      // If all else fails, use Math.random().  It's fast, but is of unspecified\n      // quality.\n      var  _rnds = new Array(16);\n      _mathRNG = _rng = function() {\n        for (var i = 0, r; i < 16; i++) {\n          if ((i & 0x03) === 0) { r = Math.random() * 0x100000000; }\n          _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n        }\n\n        return _rnds;\n      };\n      if ('undefined' !== typeof console && console.warn) {\n        console.warn(\"[SECURITY] node-uuid: crypto not usable, falling back to insecure Math.random()\");\n      }\n    }\n  }\n\n  function setupNode() {\n    // Node.js crypto-based RNG - http://nodejs.org/docs/v0.6.2/api/crypto.html\n    //\n    // Moderately fast, high quality\n    if ('function' === typeof require) {\n      try {\n        var _rb = require('crypto').randomBytes;\n        _nodeRNG = _rng = _rb && function() {return _rb(16);};\n        _rng();\n      } catch(e) {}\n    }\n  }\n\n  if (_window) {\n    setupBrowser();\n  } else {\n    setupNode();\n  }\n\n  // Buffer class to use\n  var BufferClass = ('function' === typeof Buffer) ? Buffer : Array;\n\n  // Maps for number <-> hex string conversion\n  var _byteToHex = [];\n  var _hexToByte = {};\n  for (var i = 0; i < 256; i++) {\n    _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n    _hexToByte[_byteToHex[i]] = i;\n  }\n\n  // **`parse()` - Parse a UUID into it's component bytes**\n  function parse(s, buf, offset) {\n    var i = (buf && offset) || 0, ii = 0;\n\n    buf = buf || [];\n    s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {\n      if (ii < 16) { // Don't overflow!\n        buf[i + ii++] = _hexToByte[oct];\n      }\n    });\n\n    // Zero out remaining bytes if string was short\n    while (ii < 16) {\n      buf[i + ii++] = 0;\n    }\n\n    return buf;\n  }\n\n  // **`unparse()` - Convert UUID byte array (ala parse()) into a string**\n  function unparse(buf, offset) {\n    var i = offset || 0, bth = _byteToHex;\n    return  bth[buf[i++]] + bth[buf[i++]] +\n            bth[buf[i++]] + bth[buf[i++]] + '-' +\n            bth[buf[i++]] + bth[buf[i++]] + '-' +\n            bth[buf[i++]] + bth[buf[i++]] + '-' +\n            bth[buf[i++]] + bth[buf[i++]] + '-' +\n            bth[buf[i++]] + bth[buf[i++]] +\n            bth[buf[i++]] + bth[buf[i++]] +\n            bth[buf[i++]] + bth[buf[i++]];\n  }\n\n  // **`v1()` - Generate time-based UUID**\n  //\n  // Inspired by https://github.com/LiosK/UUID.js\n  // and http://docs.python.org/library/uuid.html\n\n  // random #'s we need to init node and clockseq\n  var _seedBytes = _rng();\n\n  // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n  var _nodeId = [\n    _seedBytes[0] | 0x01,\n    _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n  ];\n\n  // Per 4.2.2, randomize (14 bit) clockseq\n  var _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\n  // Previous uuid creation time\n  var _lastMSecs = 0, _lastNSecs = 0;\n\n  // See https://github.com/broofa/node-uuid for API details\n  function v1(options, buf, offset) {\n    var i = buf && offset || 0;\n    var b = buf || [];\n\n    options = options || {};\n\n    var clockseq = (options.clockseq != null) ? options.clockseq : _clockseq;\n\n    // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n    // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n    // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n    // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n    var msecs = (options.msecs != null) ? options.msecs : new Date().getTime();\n\n    // Per 4.2.1.2, use count of uuid's generated during the current clock\n    // cycle to simulate higher resolution clock\n    var nsecs = (options.nsecs != null) ? options.nsecs : _lastNSecs + 1;\n\n    // Time since last uuid creation (in msecs)\n    var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n    // Per 4.2.1.2, Bump clockseq on clock regression\n    if (dt < 0 && options.clockseq == null) {\n      clockseq = clockseq + 1 & 0x3fff;\n    }\n\n    // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n    // time interval\n    if ((dt < 0 || msecs > _lastMSecs) && options.nsecs == null) {\n      nsecs = 0;\n    }\n\n    // Per 4.2.1.2 Throw error if too many uuids are requested\n    if (nsecs >= 10000) {\n      throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n    }\n\n    _lastMSecs = msecs;\n    _lastNSecs = nsecs;\n    _clockseq = clockseq;\n\n    // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n    msecs += 12219292800000;\n\n    // `time_low`\n    var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n    b[i++] = tl >>> 24 & 0xff;\n    b[i++] = tl >>> 16 & 0xff;\n    b[i++] = tl >>> 8 & 0xff;\n    b[i++] = tl & 0xff;\n\n    // `time_mid`\n    var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n    b[i++] = tmh >>> 8 & 0xff;\n    b[i++] = tmh & 0xff;\n\n    // `time_high_and_version`\n    b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n    b[i++] = tmh >>> 16 & 0xff;\n\n    // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n    b[i++] = clockseq >>> 8 | 0x80;\n\n    // `clock_seq_low`\n    b[i++] = clockseq & 0xff;\n\n    // `node`\n    var node = options.node || _nodeId;\n    for (var n = 0; n < 6; n++) {\n      b[i + n] = node[n];\n    }\n\n    return buf ? buf : unparse(b);\n  }\n\n  // **`v4()` - Generate random UUID**\n\n  // See https://github.com/broofa/node-uuid for API details\n  function v4(options, buf, offset) {\n    // Deprecated - 'format' argument, as supported in v1.2\n    var i = buf && offset || 0;\n\n    if (typeof(options) === 'string') {\n      buf = (options === 'binary') ? new BufferClass(16) : null;\n      options = null;\n    }\n    options = options || {};\n\n    var rnds = options.random || (options.rng || _rng)();\n\n    // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n    // Copy bytes to buffer, if provided\n    if (buf) {\n      for (var ii = 0; ii < 16; ii++) {\n        buf[i + ii] = rnds[ii];\n      }\n    }\n\n    return buf || unparse(rnds);\n  }\n\n  // Export public API\n  var uuid = v4;\n  uuid.v1 = v1;\n  uuid.v4 = v4;\n  uuid.parse = parse;\n  uuid.unparse = unparse;\n  uuid.BufferClass = BufferClass;\n  uuid._rng = _rng;\n  uuid._mathRNG = _mathRNG;\n  uuid._nodeRNG = _nodeRNG;\n  uuid._whatwgRNG = _whatwgRNG;\n\n  if (('undefined' !== typeof module) && module.exports) {\n    // Publish as node.js module\n    module.exports = uuid;\n  } else if (typeof define === 'function' && define.amd) {\n    // Publish as AMD module\n    define(function() {return uuid;});\n\n\n  } else {\n    // Publish as global (in browsers)\n    _previousRoot = _window.uuid;\n\n    // **`noConflict()` - (browser only) to reset global 'uuid' var**\n    uuid.noConflict = function() {\n      _window.uuid = _previousRoot;\n      return uuid;\n    };\n\n    _window.uuid = uuid;\n  }\n})('undefined' !== typeof window ? window : null);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/node-uuid/uuid.js\n ** module id = 18\n ** module chunks = 0\n **/","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\nBuffer.poolSize = 8192 // not used by this implementation\n\nvar rootParent = {}\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Safari 5-7 lacks support for changing the `Object.prototype.constructor` property\n *     on objects.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\nfunction typedArraySupport () {\n  function Bar () {}\n  try {\n    var arr = new Uint8Array(1)\n    arr.foo = function () { return 42 }\n    arr.constructor = Bar\n    return arr.foo() === 42 && // typed array instances can be augmented\n        arr.constructor === Bar && // constructor can be set\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\n/**\n * Class: Buffer\n * =============\n *\n * The Buffer constructor returns instances of `Uint8Array` that are augmented\n * with function properties for all the node `Buffer` API functions. We use\n * `Uint8Array` so that square bracket notation works as expected -- it returns\n * a single octet.\n *\n * By augmenting the instances, we can avoid modifying the `Uint8Array`\n * prototype.\n */\nfunction Buffer (arg) {\n  if (!(this instanceof Buffer)) {\n    // Avoid going through an ArgumentsAdaptorTrampoline in the common case.\n    if (arguments.length > 1) return new Buffer(arg, arguments[1])\n    return new Buffer(arg)\n  }\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    this.length = 0\n    this.parent = undefined\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    return fromNumber(this, arg)\n  }\n\n  // Slightly less common case.\n  if (typeof arg === 'string') {\n    return fromString(this, arg, arguments.length > 1 ? arguments[1] : 'utf8')\n  }\n\n  // Unusual.\n  return fromObject(this, arg)\n}\n\nfunction fromNumber (that, length) {\n  that = allocate(that, length < 0 ? 0 : checked(length) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < length; i++) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') encoding = 'utf8'\n\n  // Assumption: byteLength() return value is always < kMaxLength.\n  var length = byteLength(string, encoding) | 0\n  that = allocate(that, length)\n\n  that.write(string, encoding)\n  return that\n}\n\nfunction fromObject (that, object) {\n  if (Buffer.isBuffer(object)) return fromBuffer(that, object)\n\n  if (isArray(object)) return fromArray(that, object)\n\n  if (object == null) {\n    throw new TypeError('must start with number, buffer, array or string')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined') {\n    if (object.buffer instanceof ArrayBuffer) {\n      return fromTypedArray(that, object)\n    }\n    if (object instanceof ArrayBuffer) {\n      return fromArrayBuffer(that, object)\n    }\n  }\n\n  if (object.length) return fromArrayLike(that, object)\n\n  return fromJsonObject(that, object)\n}\n\nfunction fromBuffer (that, buffer) {\n  var length = checked(buffer.length) | 0\n  that = allocate(that, length)\n  buffer.copy(that, 0, 0, length)\n  return that\n}\n\nfunction fromArray (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\n// Duplicate of fromArray() to keep fromArray() monomorphic.\nfunction fromTypedArray (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  // Truncating the elements is probably not what people expect from typed\n  // arrays with BYTES_PER_ELEMENT > 1 but it's compatible with the behavior\n  // of the old Buffer constructor.\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array) {\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    array.byteLength\n    that = Buffer._augment(new Uint8Array(array))\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromTypedArray(that, new Uint8Array(array))\n  }\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\n// Deserialize { type: 'Buffer', data: [1,2,3,...] } into a Buffer object.\n// Returns a zero-length buffer for inputs that don't conform to the spec.\nfunction fromJsonObject (that, object) {\n  var array\n  var length = 0\n\n  if (object.type === 'Buffer' && isArray(object.data)) {\n    array = object.data\n    length = checked(array.length) | 0\n  }\n  that = allocate(that, length)\n\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n} else {\n  // pre-set for values that may exist in the future\n  Buffer.prototype.length = undefined\n  Buffer.prototype.parent = undefined\n}\n\nfunction allocate (that, length) {\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = Buffer._augment(new Uint8Array(length))\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that.length = length\n    that._isBuffer = true\n  }\n\n  var fromPool = length !== 0 && length <= Buffer.poolSize >>> 1\n  if (fromPool) that.parent = rootParent\n\n  return that\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (subject, encoding) {\n  if (!(this instanceof SlowBuffer)) return new SlowBuffer(subject, encoding)\n\n  var buf = new Buffer(subject, encoding)\n  delete buf.parent\n  return buf\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  var i = 0\n  var len = Math.min(x, y)\n  while (i < len) {\n    if (a[i] !== b[i]) break\n\n    ++i\n  }\n\n  if (i !== len) {\n    x = a[i]\n    y = b[i]\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) throw new TypeError('list argument must be an Array of Buffers.')\n\n  if (list.length === 0) {\n    return new Buffer(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; i++) {\n      length += list[i].length\n    }\n  }\n\n  var buf = new Buffer(length)\n  var pos = 0\n  for (i = 0; i < list.length; i++) {\n    var item = list[i]\n    item.copy(buf, pos)\n    pos += item.length\n  }\n  return buf\n}\n\nfunction byteLength (string, encoding) {\n  if (typeof string !== 'string') string = '' + string\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'binary':\n      // Deprecated\n      case 'raw':\n      case 'raws':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  start = start | 0\n  end = end === undefined || end === Infinity ? this.length : end | 0\n\n  if (!encoding) encoding = 'utf8'\n  if (start < 0) start = 0\n  if (end > this.length) end = this.length\n  if (end <= start) return ''\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'binary':\n        return binarySlice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return 0\n  return Buffer.compare(this, b)\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset) {\n  if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff\n  else if (byteOffset < -0x80000000) byteOffset = -0x80000000\n  byteOffset >>= 0\n\n  if (this.length === 0) return -1\n  if (byteOffset >= this.length) return -1\n\n  // Negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)\n\n  if (typeof val === 'string') {\n    if (val.length === 0) return -1 // special case: looking for empty string always fails\n    return String.prototype.indexOf.call(this, val, byteOffset)\n  }\n  if (Buffer.isBuffer(val)) {\n    return arrayIndexOf(this, val, byteOffset)\n  }\n  if (typeof val === 'number') {\n    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {\n      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)\n    }\n    return arrayIndexOf(this, [ val ], byteOffset)\n  }\n\n  function arrayIndexOf (arr, val, byteOffset) {\n    var foundIndex = -1\n    for (var i = 0; byteOffset + i < arr.length; i++) {\n      if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === val.length) return byteOffset + foundIndex\n      } else {\n        foundIndex = -1\n      }\n    }\n    return -1\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\n// `get` is deprecated\nBuffer.prototype.get = function get (offset) {\n  console.log('.get() is deprecated. Access using array indexes instead.')\n  return this.readUInt8(offset)\n}\n\n// `set` is deprecated\nBuffer.prototype.set = function set (v, offset) {\n  console.log('.set() is deprecated. Access using array indexes instead.')\n  return this.writeUInt8(v, offset)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; i++) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) throw new Error('Invalid hex string')\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction binaryWrite (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    var swap = encoding\n    encoding = offset\n    offset = length | 0\n    length = swap\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'binary':\n        return binaryWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction binarySlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = Buffer._augment(this.subarray(start, end))\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  if (newBuf.length) newBuf.parent = this.parent || this\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n  if (offset < 0) throw new RangeError('index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; i--) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; i++) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    target._set(this.subarray(start, start + len), targetStart)\n  }\n\n  return len\n}\n\n// fill(value, start=0, end=buffer.length)\nBuffer.prototype.fill = function fill (value, start, end) {\n  if (!value) value = 0\n  if (!start) start = 0\n  if (!end) end = this.length\n\n  if (end < start) throw new RangeError('end < start')\n\n  // Fill 0 bytes; we're done\n  if (end === start) return\n  if (this.length === 0) return\n\n  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')\n  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')\n\n  var i\n  if (typeof value === 'number') {\n    for (i = start; i < end; i++) {\n      this[i] = value\n    }\n  } else {\n    var bytes = utf8ToBytes(value.toString())\n    var len = bytes.length\n    for (i = start; i < end; i++) {\n      this[i] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n/**\n * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.\n * Added in Node 0.12. Only available in browsers that support ArrayBuffer.\n */\nBuffer.prototype.toArrayBuffer = function toArrayBuffer () {\n  if (typeof Uint8Array !== 'undefined') {\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      return (new Buffer(this)).buffer\n    } else {\n      var buf = new Uint8Array(this.length)\n      for (var i = 0, len = buf.length; i < len; i += 1) {\n        buf[i] = this[i]\n      }\n      return buf.buffer\n    }\n  } else {\n    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')\n  }\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar BP = Buffer.prototype\n\n/**\n * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods\n */\nBuffer._augment = function _augment (arr) {\n  arr.constructor = Buffer\n  arr._isBuffer = true\n\n  // save reference to original Uint8Array set method before overwriting\n  arr._set = arr.set\n\n  // deprecated\n  arr.get = BP.get\n  arr.set = BP.set\n\n  arr.write = BP.write\n  arr.toString = BP.toString\n  arr.toLocaleString = BP.toString\n  arr.toJSON = BP.toJSON\n  arr.equals = BP.equals\n  arr.compare = BP.compare\n  arr.indexOf = BP.indexOf\n  arr.copy = BP.copy\n  arr.slice = BP.slice\n  arr.readUIntLE = BP.readUIntLE\n  arr.readUIntBE = BP.readUIntBE\n  arr.readUInt8 = BP.readUInt8\n  arr.readUInt16LE = BP.readUInt16LE\n  arr.readUInt16BE = BP.readUInt16BE\n  arr.readUInt32LE = BP.readUInt32LE\n  arr.readUInt32BE = BP.readUInt32BE\n  arr.readIntLE = BP.readIntLE\n  arr.readIntBE = BP.readIntBE\n  arr.readInt8 = BP.readInt8\n  arr.readInt16LE = BP.readInt16LE\n  arr.readInt16BE = BP.readInt16BE\n  arr.readInt32LE = BP.readInt32LE\n  arr.readInt32BE = BP.readInt32BE\n  arr.readFloatLE = BP.readFloatLE\n  arr.readFloatBE = BP.readFloatBE\n  arr.readDoubleLE = BP.readDoubleLE\n  arr.readDoubleBE = BP.readDoubleBE\n  arr.writeUInt8 = BP.writeUInt8\n  arr.writeUIntLE = BP.writeUIntLE\n  arr.writeUIntBE = BP.writeUIntBE\n  arr.writeUInt16LE = BP.writeUInt16LE\n  arr.writeUInt16BE = BP.writeUInt16BE\n  arr.writeUInt32LE = BP.writeUInt32LE\n  arr.writeUInt32BE = BP.writeUInt32BE\n  arr.writeIntLE = BP.writeIntLE\n  arr.writeIntBE = BP.writeIntBE\n  arr.writeInt8 = BP.writeInt8\n  arr.writeInt16LE = BP.writeInt16LE\n  arr.writeInt16BE = BP.writeInt16BE\n  arr.writeInt32LE = BP.writeInt32LE\n  arr.writeInt32BE = BP.writeInt32BE\n  arr.writeFloatLE = BP.writeFloatLE\n  arr.writeFloatBE = BP.writeFloatBE\n  arr.writeDoubleLE = BP.writeDoubleLE\n  arr.writeDoubleBE = BP.writeDoubleBE\n  arr.fill = BP.fill\n  arr.inspect = BP.inspect\n  arr.toArrayBuffer = BP.toArrayBuffer\n\n  return arr\n}\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; i++) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; i++) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/buffer/index.js\n ** module id = 19\n ** module chunks = 0\n **/","var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n;(function (exports) {\n\t'use strict';\n\n  var Arr = (typeof Uint8Array !== 'undefined')\n    ? Uint8Array\n    : Array\n\n\tvar PLUS   = '+'.charCodeAt(0)\n\tvar SLASH  = '/'.charCodeAt(0)\n\tvar NUMBER = '0'.charCodeAt(0)\n\tvar LOWER  = 'a'.charCodeAt(0)\n\tvar UPPER  = 'A'.charCodeAt(0)\n\tvar PLUS_URL_SAFE = '-'.charCodeAt(0)\n\tvar SLASH_URL_SAFE = '_'.charCodeAt(0)\n\n\tfunction decode (elt) {\n\t\tvar code = elt.charCodeAt(0)\n\t\tif (code === PLUS ||\n\t\t    code === PLUS_URL_SAFE)\n\t\t\treturn 62 // '+'\n\t\tif (code === SLASH ||\n\t\t    code === SLASH_URL_SAFE)\n\t\t\treturn 63 // '/'\n\t\tif (code < NUMBER)\n\t\t\treturn -1 //no match\n\t\tif (code < NUMBER + 10)\n\t\t\treturn code - NUMBER + 26 + 26\n\t\tif (code < UPPER + 26)\n\t\t\treturn code - UPPER\n\t\tif (code < LOWER + 26)\n\t\t\treturn code - LOWER + 26\n\t}\n\n\tfunction b64ToByteArray (b64) {\n\t\tvar i, j, l, tmp, placeHolders, arr\n\n\t\tif (b64.length % 4 > 0) {\n\t\t\tthrow new Error('Invalid string. Length must be a multiple of 4')\n\t\t}\n\n\t\t// the number of equal signs (place holders)\n\t\t// if there are two placeholders, than the two characters before it\n\t\t// represent one byte\n\t\t// if there is only one, then the three characters before it represent 2 bytes\n\t\t// this is just a cheap hack to not do indexOf twice\n\t\tvar len = b64.length\n\t\tplaceHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0\n\n\t\t// base64 is 4/3 + up to two characters of the original data\n\t\tarr = new Arr(b64.length * 3 / 4 - placeHolders)\n\n\t\t// if there are placeholders, only get up to the last complete 4 chars\n\t\tl = placeHolders > 0 ? b64.length - 4 : b64.length\n\n\t\tvar L = 0\n\n\t\tfunction push (v) {\n\t\t\tarr[L++] = v\n\t\t}\n\n\t\tfor (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))\n\t\t\tpush((tmp & 0xFF0000) >> 16)\n\t\t\tpush((tmp & 0xFF00) >> 8)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\tif (placeHolders === 2) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)\n\t\t\tpush(tmp & 0xFF)\n\t\t} else if (placeHolders === 1) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)\n\t\t\tpush((tmp >> 8) & 0xFF)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\treturn arr\n\t}\n\n\tfunction uint8ToBase64 (uint8) {\n\t\tvar i,\n\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\toutput = \"\",\n\t\t\ttemp, length\n\n\t\tfunction encode (num) {\n\t\t\treturn lookup.charAt(num)\n\t\t}\n\n\t\tfunction tripletToBase64 (num) {\n\t\t\treturn encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)\n\t\t}\n\n\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t\t\toutput += tripletToBase64(temp)\n\t\t}\n\n\t\t// pad the end with zeros, but make sure to not forget the extra bytes\n\t\tswitch (extraBytes) {\n\t\t\tcase 1:\n\t\t\t\ttemp = uint8[uint8.length - 1]\n\t\t\t\toutput += encode(temp >> 2)\n\t\t\t\toutput += encode((temp << 4) & 0x3F)\n\t\t\t\toutput += '=='\n\t\t\t\tbreak\n\t\t\tcase 2:\n\t\t\t\ttemp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])\n\t\t\t\toutput += encode(temp >> 10)\n\t\t\t\toutput += encode((temp >> 4) & 0x3F)\n\t\t\t\toutput += encode((temp << 2) & 0x3F)\n\t\t\t\toutput += '='\n\t\t\t\tbreak\n\t\t}\n\n\t\treturn output\n\t}\n\n\texports.toByteArray = b64ToByteArray\n\texports.fromByteArray = uint8ToBase64\n}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/buffer/~/base64-js/lib/b64.js\n ** module id = 20\n ** module chunks = 0\n **/","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/buffer/~/ieee754/index.js\n ** module id = 21\n ** module chunks = 0\n **/","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/buffer/~/isarray/index.js\n ** module id = 22\n ** module chunks = 0\n **/","var rng = require('./rng')\n\nfunction error () {\n  var m = [].slice.call(arguments).join(' ')\n  throw new Error([\n    m,\n    'we accept pull requests',\n    'http://github.com/dominictarr/crypto-browserify'\n    ].join('\\n'))\n}\n\nexports.createHash = require('./create-hash')\n\nexports.createHmac = require('./create-hmac')\n\nexports.randomBytes = function(size, callback) {\n  if (callback && callback.call) {\n    try {\n      callback.call(this, undefined, new Buffer(rng(size)))\n    } catch (err) { callback(err) }\n  } else {\n    return new Buffer(rng(size))\n  }\n}\n\nfunction each(a, f) {\n  for(var i in a)\n    f(a[i], i)\n}\n\nexports.getHashes = function () {\n  return ['sha1', 'sha256', 'sha512', 'md5', 'rmd160']\n}\n\nvar p = require('./pbkdf2')(exports)\nexports.pbkdf2 = p.pbkdf2\nexports.pbkdf2Sync = p.pbkdf2Sync\n\n\n// the least I can do is make error messages for the rest of the node.js/crypto api.\neach(['createCredentials'\n, 'createCipher'\n, 'createCipheriv'\n, 'createDecipher'\n, 'createDecipheriv'\n, 'createSign'\n, 'createVerify'\n, 'createDiffieHellman'\n], function (name) {\n  exports[name] = function () {\n    error('sorry,', name, 'is not implemented yet')\n  }\n})\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/crypto-browserify/index.js\n ** module id = 23\n ** module chunks = 0\n **/","(function() {\n  var g = ('undefined' === typeof window ? global : window) || {}\n  _crypto = (\n    g.crypto || g.msCrypto || require('crypto')\n  )\n  module.exports = function(size) {\n    // Modern Browsers\n    if(_crypto.getRandomValues) {\n      var bytes = new Buffer(size); //in browserify, this is an extended Uint8Array\n      /* This will not work in older browsers.\n       * See https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n       */\n    \n      _crypto.getRandomValues(bytes);\n      return bytes;\n    }\n    else if (_crypto.randomBytes) {\n      return _crypto.randomBytes(size)\n    }\n    else\n      throw new Error(\n        'secure random number generation not supported by this browser\\n'+\n        'use chrome, FireFox or Internet Explorer 11'\n      )\n  }\n}())\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/crypto-browserify/rng.js\n ** module id = 24\n ** module chunks = 0\n **/","/* (ignored) */\n\n\n/*****************\n ** WEBPACK FOOTER\n ** crypto (ignored)\n ** module id = 25\n ** module chunks = 0\n **/","var createHash = require('sha.js')\n\nvar md5 = toConstructor(require('./md5'))\nvar rmd160 = toConstructor(require('ripemd160'))\n\nfunction toConstructor (fn) {\n  return function () {\n    var buffers = []\n    var m= {\n      update: function (data, enc) {\n        if(!Buffer.isBuffer(data)) data = new Buffer(data, enc)\n        buffers.push(data)\n        return this\n      },\n      digest: function (enc) {\n        var buf = Buffer.concat(buffers)\n        var r = fn(buf)\n        buffers = null\n        return enc ? r.toString(enc) : r\n      }\n    }\n    return m\n  }\n}\n\nmodule.exports = function (alg) {\n  if('md5' === alg) return new md5()\n  if('rmd160' === alg) return new rmd160()\n  return createHash(alg)\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/crypto-browserify/create-hash.js\n ** module id = 26\n ** module chunks = 0\n **/","var exports = module.exports = function (alg) {\n  var Alg = exports[alg]\n  if(!Alg) throw new Error(alg + ' is not supported (we accept pull requests)')\n  return new Alg()\n}\n\nvar Buffer = require('buffer').Buffer\nvar Hash   = require('./hash')(Buffer)\n\nexports.sha1 = require('./sha1')(Buffer, Hash)\nexports.sha256 = require('./sha256')(Buffer, Hash)\nexports.sha512 = require('./sha512')(Buffer, Hash)\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/crypto-browserify/~/sha.js/index.js\n ** module id = 27\n ** module chunks = 0\n **/","module.exports = function (Buffer) {\n\n  //prototype class for hash functions\n  function Hash (blockSize, finalSize) {\n    this._block = new Buffer(blockSize) //new Uint32Array(blockSize/4)\n    this._finalSize = finalSize\n    this._blockSize = blockSize\n    this._len = 0\n    this._s = 0\n  }\n\n  Hash.prototype.init = function () {\n    this._s = 0\n    this._len = 0\n  }\n\n  Hash.prototype.update = function (data, enc) {\n    if (\"string\" === typeof data) {\n      enc = enc || \"utf8\"\n      data = new Buffer(data, enc)\n    }\n\n    var l = this._len += data.length\n    var s = this._s = (this._s || 0)\n    var f = 0\n    var buffer = this._block\n\n    while (s < l) {\n      var t = Math.min(data.length, f + this._blockSize - (s % this._blockSize))\n      var ch = (t - f)\n\n      for (var i = 0; i < ch; i++) {\n        buffer[(s % this._blockSize) + i] = data[i + f]\n      }\n\n      s += ch\n      f += ch\n\n      if ((s % this._blockSize) === 0) {\n        this._update(buffer)\n      }\n    }\n    this._s = s\n\n    return this\n  }\n\n  Hash.prototype.digest = function (enc) {\n    // Suppose the length of the message M, in bits, is l\n    var l = this._len * 8\n\n    // Append the bit 1 to the end of the message\n    this._block[this._len % this._blockSize] = 0x80\n\n    // and then k zero bits, where k is the smallest non-negative solution to the equation (l + 1 + k) === finalSize mod blockSize\n    this._block.fill(0, this._len % this._blockSize + 1)\n\n    if (l % (this._blockSize * 8) >= this._finalSize * 8) {\n      this._update(this._block)\n      this._block.fill(0)\n    }\n\n    // to this append the block which is equal to the number l written in binary\n    // TODO: handle case where l is > Math.pow(2, 29)\n    this._block.writeInt32BE(l, this._blockSize - 4)\n\n    var hash = this._update(this._block) || this._hash()\n\n    return enc ? hash.toString(enc) : hash\n  }\n\n  Hash.prototype._update = function () {\n    throw new Error('_update must be implemented by subclass')\n  }\n\n  return Hash\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/crypto-browserify/~/sha.js/hash.js\n ** module id = 28\n ** module chunks = 0\n **/","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS PUB 180-1\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\nvar inherits = require('util').inherits\n\nmodule.exports = function (Buffer, Hash) {\n\n  var A = 0|0\n  var B = 4|0\n  var C = 8|0\n  var D = 12|0\n  var E = 16|0\n\n  var W = new (typeof Int32Array === 'undefined' ? Array : Int32Array)(80)\n\n  var POOL = []\n\n  function Sha1 () {\n    if(POOL.length)\n      return POOL.pop().init()\n\n    if(!(this instanceof Sha1)) return new Sha1()\n    this._w = W\n    Hash.call(this, 16*4, 14*4)\n\n    this._h = null\n    this.init()\n  }\n\n  inherits(Sha1, Hash)\n\n  Sha1.prototype.init = function () {\n    this._a = 0x67452301\n    this._b = 0xefcdab89\n    this._c = 0x98badcfe\n    this._d = 0x10325476\n    this._e = 0xc3d2e1f0\n\n    Hash.prototype.init.call(this)\n    return this\n  }\n\n  Sha1.prototype._POOL = POOL\n  Sha1.prototype._update = function (X) {\n\n    var a, b, c, d, e, _a, _b, _c, _d, _e\n\n    a = _a = this._a\n    b = _b = this._b\n    c = _c = this._c\n    d = _d = this._d\n    e = _e = this._e\n\n    var w = this._w\n\n    for(var j = 0; j < 80; j++) {\n      var W = w[j] = j < 16 ? X.readInt32BE(j*4)\n        : rol(w[j - 3] ^ w[j -  8] ^ w[j - 14] ^ w[j - 16], 1)\n\n      var t = add(\n        add(rol(a, 5), sha1_ft(j, b, c, d)),\n        add(add(e, W), sha1_kt(j))\n      )\n\n      e = d\n      d = c\n      c = rol(b, 30)\n      b = a\n      a = t\n    }\n\n    this._a = add(a, _a)\n    this._b = add(b, _b)\n    this._c = add(c, _c)\n    this._d = add(d, _d)\n    this._e = add(e, _e)\n  }\n\n  Sha1.prototype._hash = function () {\n    if(POOL.length < 100) POOL.push(this)\n    var H = new Buffer(20)\n    //console.log(this._a|0, this._b|0, this._c|0, this._d|0, this._e|0)\n    H.writeInt32BE(this._a|0, A)\n    H.writeInt32BE(this._b|0, B)\n    H.writeInt32BE(this._c|0, C)\n    H.writeInt32BE(this._d|0, D)\n    H.writeInt32BE(this._e|0, E)\n    return H\n  }\n\n  /*\n   * Perform the appropriate triplet combination function for the current\n   * iteration\n   */\n  function sha1_ft(t, b, c, d) {\n    if(t < 20) return (b & c) | ((~b) & d);\n    if(t < 40) return b ^ c ^ d;\n    if(t < 60) return (b & c) | (b & d) | (c & d);\n    return b ^ c ^ d;\n  }\n\n  /*\n   * Determine the appropriate additive constant for the current iteration\n   */\n  function sha1_kt(t) {\n    return (t < 20) ?  1518500249 : (t < 40) ?  1859775393 :\n           (t < 60) ? -1894007588 : -899497514;\n  }\n\n  /*\n   * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n   * to work around bugs in some JS interpreters.\n   * //dominictarr: this is 10 years old, so maybe this can be dropped?)\n   *\n   */\n  function add(x, y) {\n    return (x + y ) | 0\n  //lets see how this goes on testling.\n  //  var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n  //  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  //  return (msw << 16) | (lsw & 0xFFFF);\n  }\n\n  /*\n   * Bitwise rotate a 32-bit number to the left.\n   */\n  function rol(num, cnt) {\n    return (num << cnt) | (num >>> (32 - cnt));\n  }\n\n  return Sha1\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/crypto-browserify/~/sha.js/sha1.js\n ** module id = 29\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/util/util.js\n ** module id = 30\n ** module chunks = 0\n **/","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/util/support/isBufferBrowser.js\n ** module id = 31\n ** module chunks = 0\n **/","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/util/~/inherits/inherits_browser.js\n ** module id = 32\n ** module chunks = 0\n **/","\n/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('util').inherits\n\nmodule.exports = function (Buffer, Hash) {\n\n  var K = [\n      0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,\n      0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,\n      0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n      0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,\n      0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,\n      0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n      0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,\n      0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,\n      0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n      0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,\n      0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,\n      0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n      0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,\n      0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,\n      0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n      0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2\n    ]\n\n  var W = new Array(64)\n\n  function Sha256() {\n    this.init()\n\n    this._w = W //new Array(64)\n\n    Hash.call(this, 16*4, 14*4)\n  }\n\n  inherits(Sha256, Hash)\n\n  Sha256.prototype.init = function () {\n\n    this._a = 0x6a09e667|0\n    this._b = 0xbb67ae85|0\n    this._c = 0x3c6ef372|0\n    this._d = 0xa54ff53a|0\n    this._e = 0x510e527f|0\n    this._f = 0x9b05688c|0\n    this._g = 0x1f83d9ab|0\n    this._h = 0x5be0cd19|0\n\n    this._len = this._s = 0\n\n    return this\n  }\n\n  function S (X, n) {\n    return (X >>> n) | (X << (32 - n));\n  }\n\n  function R (X, n) {\n    return (X >>> n);\n  }\n\n  function Ch (x, y, z) {\n    return ((x & y) ^ ((~x) & z));\n  }\n\n  function Maj (x, y, z) {\n    return ((x & y) ^ (x & z) ^ (y & z));\n  }\n\n  function Sigma0256 (x) {\n    return (S(x, 2) ^ S(x, 13) ^ S(x, 22));\n  }\n\n  function Sigma1256 (x) {\n    return (S(x, 6) ^ S(x, 11) ^ S(x, 25));\n  }\n\n  function Gamma0256 (x) {\n    return (S(x, 7) ^ S(x, 18) ^ R(x, 3));\n  }\n\n  function Gamma1256 (x) {\n    return (S(x, 17) ^ S(x, 19) ^ R(x, 10));\n  }\n\n  Sha256.prototype._update = function(M) {\n\n    var W = this._w\n    var a, b, c, d, e, f, g, h\n    var T1, T2\n\n    a = this._a | 0\n    b = this._b | 0\n    c = this._c | 0\n    d = this._d | 0\n    e = this._e | 0\n    f = this._f | 0\n    g = this._g | 0\n    h = this._h | 0\n\n    for (var j = 0; j < 64; j++) {\n      var w = W[j] = j < 16\n        ? M.readInt32BE(j * 4)\n        : Gamma1256(W[j - 2]) + W[j - 7] + Gamma0256(W[j - 15]) + W[j - 16]\n\n      T1 = h + Sigma1256(e) + Ch(e, f, g) + K[j] + w\n\n      T2 = Sigma0256(a) + Maj(a, b, c);\n      h = g; g = f; f = e; e = d + T1; d = c; c = b; b = a; a = T1 + T2;\n    }\n\n    this._a = (a + this._a) | 0\n    this._b = (b + this._b) | 0\n    this._c = (c + this._c) | 0\n    this._d = (d + this._d) | 0\n    this._e = (e + this._e) | 0\n    this._f = (f + this._f) | 0\n    this._g = (g + this._g) | 0\n    this._h = (h + this._h) | 0\n\n  };\n\n  Sha256.prototype._hash = function () {\n    var H = new Buffer(32)\n\n    H.writeInt32BE(this._a,  0)\n    H.writeInt32BE(this._b,  4)\n    H.writeInt32BE(this._c,  8)\n    H.writeInt32BE(this._d, 12)\n    H.writeInt32BE(this._e, 16)\n    H.writeInt32BE(this._f, 20)\n    H.writeInt32BE(this._g, 24)\n    H.writeInt32BE(this._h, 28)\n\n    return H\n  }\n\n  return Sha256\n\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/crypto-browserify/~/sha.js/sha256.js\n ** module id = 33\n ** module chunks = 0\n **/","var inherits = require('util').inherits\n\nmodule.exports = function (Buffer, Hash) {\n  var K = [\n    0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n    0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n    0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n    0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n    0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n    0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n    0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n    0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n    0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n    0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n    0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n    0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n    0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n    0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n    0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n    0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n    0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n    0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n    0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n    0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n    0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n    0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n    0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n    0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n    0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n    0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n    0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n    0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n    0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n    0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n    0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n    0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n    0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n    0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n    0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n    0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n    0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n    0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n    0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n    0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n  ]\n\n  var W = new Array(160)\n\n  function Sha512() {\n    this.init()\n    this._w = W\n\n    Hash.call(this, 128, 112)\n  }\n\n  inherits(Sha512, Hash)\n\n  Sha512.prototype.init = function () {\n\n    this._a = 0x6a09e667|0\n    this._b = 0xbb67ae85|0\n    this._c = 0x3c6ef372|0\n    this._d = 0xa54ff53a|0\n    this._e = 0x510e527f|0\n    this._f = 0x9b05688c|0\n    this._g = 0x1f83d9ab|0\n    this._h = 0x5be0cd19|0\n\n    this._al = 0xf3bcc908|0\n    this._bl = 0x84caa73b|0\n    this._cl = 0xfe94f82b|0\n    this._dl = 0x5f1d36f1|0\n    this._el = 0xade682d1|0\n    this._fl = 0x2b3e6c1f|0\n    this._gl = 0xfb41bd6b|0\n    this._hl = 0x137e2179|0\n\n    this._len = this._s = 0\n\n    return this\n  }\n\n  function S (X, Xl, n) {\n    return (X >>> n) | (Xl << (32 - n))\n  }\n\n  function Ch (x, y, z) {\n    return ((x & y) ^ ((~x) & z));\n  }\n\n  function Maj (x, y, z) {\n    return ((x & y) ^ (x & z) ^ (y & z));\n  }\n\n  Sha512.prototype._update = function(M) {\n\n    var W = this._w\n    var a, b, c, d, e, f, g, h\n    var al, bl, cl, dl, el, fl, gl, hl\n\n    a = this._a | 0\n    b = this._b | 0\n    c = this._c | 0\n    d = this._d | 0\n    e = this._e | 0\n    f = this._f | 0\n    g = this._g | 0\n    h = this._h | 0\n\n    al = this._al | 0\n    bl = this._bl | 0\n    cl = this._cl | 0\n    dl = this._dl | 0\n    el = this._el | 0\n    fl = this._fl | 0\n    gl = this._gl | 0\n    hl = this._hl | 0\n\n    for (var i = 0; i < 80; i++) {\n      var j = i * 2\n\n      var Wi, Wil\n\n      if (i < 16) {\n        Wi = W[j] = M.readInt32BE(j * 4)\n        Wil = W[j + 1] = M.readInt32BE(j * 4 + 4)\n\n      } else {\n        var x  = W[j - 15*2]\n        var xl = W[j - 15*2 + 1]\n        var gamma0  = S(x, xl, 1) ^ S(x, xl, 8) ^ (x >>> 7)\n        var gamma0l = S(xl, x, 1) ^ S(xl, x, 8) ^ S(xl, x, 7)\n\n        x  = W[j - 2*2]\n        xl = W[j - 2*2 + 1]\n        var gamma1  = S(x, xl, 19) ^ S(xl, x, 29) ^ (x >>> 6)\n        var gamma1l = S(xl, x, 19) ^ S(x, xl, 29) ^ S(xl, x, 6)\n\n        // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n        var Wi7  = W[j - 7*2]\n        var Wi7l = W[j - 7*2 + 1]\n\n        var Wi16  = W[j - 16*2]\n        var Wi16l = W[j - 16*2 + 1]\n\n        Wil = gamma0l + Wi7l\n        Wi  = gamma0  + Wi7 + ((Wil >>> 0) < (gamma0l >>> 0) ? 1 : 0)\n        Wil = Wil + gamma1l\n        Wi  = Wi  + gamma1  + ((Wil >>> 0) < (gamma1l >>> 0) ? 1 : 0)\n        Wil = Wil + Wi16l\n        Wi  = Wi  + Wi16 + ((Wil >>> 0) < (Wi16l >>> 0) ? 1 : 0)\n\n        W[j] = Wi\n        W[j + 1] = Wil\n      }\n\n      var maj = Maj(a, b, c)\n      var majl = Maj(al, bl, cl)\n\n      var sigma0h = S(a, al, 28) ^ S(al, a, 2) ^ S(al, a, 7)\n      var sigma0l = S(al, a, 28) ^ S(a, al, 2) ^ S(a, al, 7)\n      var sigma1h = S(e, el, 14) ^ S(e, el, 18) ^ S(el, e, 9)\n      var sigma1l = S(el, e, 14) ^ S(el, e, 18) ^ S(e, el, 9)\n\n      // t1 = h + sigma1 + ch + K[i] + W[i]\n      var Ki = K[j]\n      var Kil = K[j + 1]\n\n      var ch = Ch(e, f, g)\n      var chl = Ch(el, fl, gl)\n\n      var t1l = hl + sigma1l\n      var t1 = h + sigma1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0)\n      t1l = t1l + chl\n      t1 = t1 + ch + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0)\n      t1l = t1l + Kil\n      t1 = t1 + Ki + ((t1l >>> 0) < (Kil >>> 0) ? 1 : 0)\n      t1l = t1l + Wil\n      t1 = t1 + Wi + ((t1l >>> 0) < (Wil >>> 0) ? 1 : 0)\n\n      // t2 = sigma0 + maj\n      var t2l = sigma0l + majl\n      var t2 = sigma0h + maj + ((t2l >>> 0) < (sigma0l >>> 0) ? 1 : 0)\n\n      h  = g\n      hl = gl\n      g  = f\n      gl = fl\n      f  = e\n      fl = el\n      el = (dl + t1l) | 0\n      e  = (d + t1 + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0\n      d  = c\n      dl = cl\n      c  = b\n      cl = bl\n      b  = a\n      bl = al\n      al = (t1l + t2l) | 0\n      a  = (t1 + t2 + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0\n    }\n\n    this._al = (this._al + al) | 0\n    this._bl = (this._bl + bl) | 0\n    this._cl = (this._cl + cl) | 0\n    this._dl = (this._dl + dl) | 0\n    this._el = (this._el + el) | 0\n    this._fl = (this._fl + fl) | 0\n    this._gl = (this._gl + gl) | 0\n    this._hl = (this._hl + hl) | 0\n\n    this._a = (this._a + a + ((this._al >>> 0) < (al >>> 0) ? 1 : 0)) | 0\n    this._b = (this._b + b + ((this._bl >>> 0) < (bl >>> 0) ? 1 : 0)) | 0\n    this._c = (this._c + c + ((this._cl >>> 0) < (cl >>> 0) ? 1 : 0)) | 0\n    this._d = (this._d + d + ((this._dl >>> 0) < (dl >>> 0) ? 1 : 0)) | 0\n    this._e = (this._e + e + ((this._el >>> 0) < (el >>> 0) ? 1 : 0)) | 0\n    this._f = (this._f + f + ((this._fl >>> 0) < (fl >>> 0) ? 1 : 0)) | 0\n    this._g = (this._g + g + ((this._gl >>> 0) < (gl >>> 0) ? 1 : 0)) | 0\n    this._h = (this._h + h + ((this._hl >>> 0) < (hl >>> 0) ? 1 : 0)) | 0\n  }\n\n  Sha512.prototype._hash = function () {\n    var H = new Buffer(64)\n\n    function writeInt64BE(h, l, offset) {\n      H.writeInt32BE(h, offset)\n      H.writeInt32BE(l, offset + 4)\n    }\n\n    writeInt64BE(this._a, this._al, 0)\n    writeInt64BE(this._b, this._bl, 8)\n    writeInt64BE(this._c, this._cl, 16)\n    writeInt64BE(this._d, this._dl, 24)\n    writeInt64BE(this._e, this._el, 32)\n    writeInt64BE(this._f, this._fl, 40)\n    writeInt64BE(this._g, this._gl, 48)\n    writeInt64BE(this._h, this._hl, 56)\n\n    return H\n  }\n\n  return Sha512\n\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/crypto-browserify/~/sha.js/sha512.js\n ** module id = 34\n ** module chunks = 0\n **/","/*\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\n\nvar helpers = require('./helpers');\n\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length\n */\nfunction core_md5(x, len)\n{\n  /* append padding */\n  x[len >> 5] |= 0x80 << ((len) % 32);\n  x[(((len + 64) >>> 9) << 4) + 14] = len;\n\n  var a =  1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d =  271733878;\n\n  for(var i = 0; i < x.length; i += 16)\n  {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n\n    a = md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);\n    d = md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);\n    c = md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);\n    b = md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);\n    a = md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);\n    d = md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);\n    c = md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);\n    b = md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);\n    a = md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);\n    d = md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);\n    c = md5_ff(c, d, a, b, x[i+10], 17, -42063);\n    b = md5_ff(b, c, d, a, x[i+11], 22, -1990404162);\n    a = md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);\n    d = md5_ff(d, a, b, c, x[i+13], 12, -40341101);\n    c = md5_ff(c, d, a, b, x[i+14], 17, -1502002290);\n    b = md5_ff(b, c, d, a, x[i+15], 22,  1236535329);\n\n    a = md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);\n    d = md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);\n    c = md5_gg(c, d, a, b, x[i+11], 14,  643717713);\n    b = md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);\n    a = md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);\n    d = md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);\n    c = md5_gg(c, d, a, b, x[i+15], 14, -660478335);\n    b = md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);\n    a = md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);\n    d = md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);\n    c = md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);\n    b = md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);\n    a = md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);\n    d = md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);\n    c = md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);\n    b = md5_gg(b, c, d, a, x[i+12], 20, -1926607734);\n\n    a = md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);\n    d = md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);\n    c = md5_hh(c, d, a, b, x[i+11], 16,  1839030562);\n    b = md5_hh(b, c, d, a, x[i+14], 23, -35309556);\n    a = md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);\n    d = md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);\n    c = md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);\n    b = md5_hh(b, c, d, a, x[i+10], 23, -1094730640);\n    a = md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);\n    d = md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);\n    c = md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);\n    b = md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);\n    a = md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);\n    d = md5_hh(d, a, b, c, x[i+12], 11, -421815835);\n    c = md5_hh(c, d, a, b, x[i+15], 16,  530742520);\n    b = md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);\n\n    a = md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);\n    d = md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);\n    c = md5_ii(c, d, a, b, x[i+14], 15, -1416354905);\n    b = md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);\n    a = md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);\n    d = md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);\n    c = md5_ii(c, d, a, b, x[i+10], 15, -1051523);\n    b = md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);\n    a = md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);\n    d = md5_ii(d, a, b, c, x[i+15], 10, -30611744);\n    c = md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);\n    b = md5_ii(b, c, d, a, x[i+13], 21,  1309151649);\n    a = md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);\n    d = md5_ii(d, a, b, c, x[i+11], 10, -1120210379);\n    c = md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);\n    b = md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);\n\n    a = safe_add(a, olda);\n    b = safe_add(b, oldb);\n    c = safe_add(c, oldc);\n    d = safe_add(d, oldd);\n  }\n  return Array(a, b, c, d);\n\n}\n\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\nfunction md5_cmn(q, a, b, x, s, t)\n{\n  return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s),b);\n}\nfunction md5_ff(a, b, c, d, x, s, t)\n{\n  return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);\n}\nfunction md5_gg(a, b, c, d, x, s, t)\n{\n  return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);\n}\nfunction md5_hh(a, b, c, d, x, s, t)\n{\n  return md5_cmn(b ^ c ^ d, a, b, x, s, t);\n}\nfunction md5_ii(a, b, c, d, x, s, t)\n{\n  return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);\n}\n\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\nfunction safe_add(x, y)\n{\n  var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return (msw << 16) | (lsw & 0xFFFF);\n}\n\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\nfunction bit_rol(num, cnt)\n{\n  return (num << cnt) | (num >>> (32 - cnt));\n}\n\nmodule.exports = function md5(buf) {\n  return helpers.hash(buf, core_md5, 16);\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/crypto-browserify/md5.js\n ** module id = 35\n ** module chunks = 0\n **/","var intSize = 4;\nvar zeroBuffer = new Buffer(intSize); zeroBuffer.fill(0);\nvar chrsz = 8;\n\nfunction toArray(buf, bigEndian) {\n  if ((buf.length % intSize) !== 0) {\n    var len = buf.length + (intSize - (buf.length % intSize));\n    buf = Buffer.concat([buf, zeroBuffer], len);\n  }\n\n  var arr = [];\n  var fn = bigEndian ? buf.readInt32BE : buf.readInt32LE;\n  for (var i = 0; i < buf.length; i += intSize) {\n    arr.push(fn.call(buf, i));\n  }\n  return arr;\n}\n\nfunction toBuffer(arr, size, bigEndian) {\n  var buf = new Buffer(size);\n  var fn = bigEndian ? buf.writeInt32BE : buf.writeInt32LE;\n  for (var i = 0; i < arr.length; i++) {\n    fn.call(buf, arr[i], i * 4, true);\n  }\n  return buf;\n}\n\nfunction hash(buf, fn, hashSize, bigEndian) {\n  if (!Buffer.isBuffer(buf)) buf = new Buffer(buf);\n  var arr = fn(toArray(buf, bigEndian), buf.length * chrsz);\n  return toBuffer(arr, hashSize, bigEndian);\n}\n\nmodule.exports = { hash: hash };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/crypto-browserify/helpers.js\n ** module id = 36\n ** module chunks = 0\n **/","\nmodule.exports = ripemd160\n\n\n\n/*\nCryptoJS v3.1.2\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\n/** @preserve\n(c) 2012 by Cédric Mesnil. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n// Constants table\nvar zl = [\n    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,\n    7,  4, 13,  1, 10,  6, 15,  3, 12,  0,  9,  5,  2, 14, 11,  8,\n    3, 10, 14,  4,  9, 15,  8,  1,  2,  7,  0,  6, 13, 11,  5, 12,\n    1,  9, 11, 10,  0,  8, 12,  4, 13,  3,  7, 15, 14,  5,  6,  2,\n    4,  0,  5,  9,  7, 12,  2, 10, 14,  1,  3,  8, 11,  6, 15, 13];\nvar zr = [\n    5, 14,  7,  0,  9,  2, 11,  4, 13,  6, 15,  8,  1, 10,  3, 12,\n    6, 11,  3,  7,  0, 13,  5, 10, 14, 15,  8, 12,  4,  9,  1,  2,\n    15,  5,  1,  3,  7, 14,  6,  9, 11,  8, 12,  2, 10,  0,  4, 13,\n    8,  6,  4,  1,  3, 11, 15,  0,  5, 12,  2, 13,  9,  7, 10, 14,\n    12, 15, 10,  4,  1,  5,  8,  7,  6,  2, 13, 14,  0,  3,  9, 11];\nvar sl = [\n     11, 14, 15, 12,  5,  8,  7,  9, 11, 13, 14, 15,  6,  7,  9,  8,\n    7, 6,   8, 13, 11,  9,  7, 15,  7, 12, 15,  9, 11,  7, 13, 12,\n    11, 13,  6,  7, 14,  9, 13, 15, 14,  8, 13,  6,  5, 12,  7,  5,\n      11, 12, 14, 15, 14, 15,  9,  8,  9, 14,  5,  6,  8,  6,  5, 12,\n    9, 15,  5, 11,  6,  8, 13, 12,  5, 12, 13, 14, 11,  8,  5,  6 ];\nvar sr = [\n    8,  9,  9, 11, 13, 15, 15,  5,  7,  7,  8, 11, 14, 14, 12,  6,\n    9, 13, 15,  7, 12,  8,  9, 11,  7,  7, 12,  7,  6, 15, 13, 11,\n    9,  7, 15, 11,  8,  6,  6, 14, 12, 13,  5, 14, 13, 13,  7,  5,\n    15,  5,  8, 11, 14, 14,  6, 14,  6,  9, 12,  9, 12,  5, 15,  8,\n    8,  5, 12,  9, 12,  5, 14,  6,  8, 13,  6,  5, 15, 13, 11, 11 ];\n\nvar hl =  [ 0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E];\nvar hr =  [ 0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000];\n\nvar bytesToWords = function (bytes) {\n  var words = [];\n  for (var i = 0, b = 0; i < bytes.length; i++, b += 8) {\n    words[b >>> 5] |= bytes[i] << (24 - b % 32);\n  }\n  return words;\n};\n\nvar wordsToBytes = function (words) {\n  var bytes = [];\n  for (var b = 0; b < words.length * 32; b += 8) {\n    bytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF);\n  }\n  return bytes;\n};\n\nvar processBlock = function (H, M, offset) {\n\n  // Swap endian\n  for (var i = 0; i < 16; i++) {\n    var offset_i = offset + i;\n    var M_offset_i = M[offset_i];\n\n    // Swap\n    M[offset_i] = (\n        (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n        (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n    );\n  }\n\n  // Working variables\n  var al, bl, cl, dl, el;\n  var ar, br, cr, dr, er;\n\n  ar = al = H[0];\n  br = bl = H[1];\n  cr = cl = H[2];\n  dr = dl = H[3];\n  er = el = H[4];\n  // Computation\n  var t;\n  for (var i = 0; i < 80; i += 1) {\n    t = (al +  M[offset+zl[i]])|0;\n    if (i<16){\n        t +=  f1(bl,cl,dl) + hl[0];\n    } else if (i<32) {\n        t +=  f2(bl,cl,dl) + hl[1];\n    } else if (i<48) {\n        t +=  f3(bl,cl,dl) + hl[2];\n    } else if (i<64) {\n        t +=  f4(bl,cl,dl) + hl[3];\n    } else {// if (i<80) {\n        t +=  f5(bl,cl,dl) + hl[4];\n    }\n    t = t|0;\n    t =  rotl(t,sl[i]);\n    t = (t+el)|0;\n    al = el;\n    el = dl;\n    dl = rotl(cl, 10);\n    cl = bl;\n    bl = t;\n\n    t = (ar + M[offset+zr[i]])|0;\n    if (i<16){\n        t +=  f5(br,cr,dr) + hr[0];\n    } else if (i<32) {\n        t +=  f4(br,cr,dr) + hr[1];\n    } else if (i<48) {\n        t +=  f3(br,cr,dr) + hr[2];\n    } else if (i<64) {\n        t +=  f2(br,cr,dr) + hr[3];\n    } else {// if (i<80) {\n        t +=  f1(br,cr,dr) + hr[4];\n    }\n    t = t|0;\n    t =  rotl(t,sr[i]) ;\n    t = (t+er)|0;\n    ar = er;\n    er = dr;\n    dr = rotl(cr, 10);\n    cr = br;\n    br = t;\n  }\n  // Intermediate hash value\n  t    = (H[1] + cl + dr)|0;\n  H[1] = (H[2] + dl + er)|0;\n  H[2] = (H[3] + el + ar)|0;\n  H[3] = (H[4] + al + br)|0;\n  H[4] = (H[0] + bl + cr)|0;\n  H[0] =  t;\n};\n\nfunction f1(x, y, z) {\n  return ((x) ^ (y) ^ (z));\n}\n\nfunction f2(x, y, z) {\n  return (((x)&(y)) | ((~x)&(z)));\n}\n\nfunction f3(x, y, z) {\n  return (((x) | (~(y))) ^ (z));\n}\n\nfunction f4(x, y, z) {\n  return (((x) & (z)) | ((y)&(~(z))));\n}\n\nfunction f5(x, y, z) {\n  return ((x) ^ ((y) |(~(z))));\n}\n\nfunction rotl(x,n) {\n  return (x<<n) | (x>>>(32-n));\n}\n\nfunction ripemd160(message) {\n  var H = [0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0];\n\n  if (typeof message == 'string')\n    message = new Buffer(message, 'utf8');\n\n  var m = bytesToWords(message);\n\n  var nBitsLeft = message.length * 8;\n  var nBitsTotal = message.length * 8;\n\n  // Add padding\n  m[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n  m[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n      (((nBitsTotal << 8)  | (nBitsTotal >>> 24)) & 0x00ff00ff) |\n      (((nBitsTotal << 24) | (nBitsTotal >>> 8))  & 0xff00ff00)\n  );\n\n  for (var i=0 ; i<m.length; i += 16) {\n    processBlock(H, m, i);\n  }\n\n  // Swap endian\n  for (var i = 0; i < 5; i++) {\n      // Shortcut\n    var H_i = H[i];\n\n    // Swap\n    H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n          (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n  }\n\n  var digestbytes = wordsToBytes(H);\n  return new Buffer(digestbytes);\n}\n\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/crypto-browserify/~/ripemd160/lib/ripemd160.js\n ** module id = 37\n ** module chunks = 0\n **/","var createHash = require('./create-hash')\n\nvar zeroBuffer = new Buffer(128)\nzeroBuffer.fill(0)\n\nmodule.exports = Hmac\n\nfunction Hmac (alg, key) {\n  if(!(this instanceof Hmac)) return new Hmac(alg, key)\n  this._opad = opad\n  this._alg = alg\n\n  var blocksize = (alg === 'sha512') ? 128 : 64\n\n  key = this._key = !Buffer.isBuffer(key) ? new Buffer(key) : key\n\n  if(key.length > blocksize) {\n    key = createHash(alg).update(key).digest()\n  } else if(key.length < blocksize) {\n    key = Buffer.concat([key, zeroBuffer], blocksize)\n  }\n\n  var ipad = this._ipad = new Buffer(blocksize)\n  var opad = this._opad = new Buffer(blocksize)\n\n  for(var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n\n  this._hash = createHash(alg).update(ipad)\n}\n\nHmac.prototype.update = function (data, enc) {\n  this._hash.update(data, enc)\n  return this\n}\n\nHmac.prototype.digest = function (enc) {\n  var h = this._hash.digest()\n  return createHash(this._alg).update(this._opad).update(h).digest(enc)\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/crypto-browserify/create-hmac.js\n ** module id = 38\n ** module chunks = 0\n **/","var pbkdf2Export = require('pbkdf2-compat/pbkdf2')\n\nmodule.exports = function (crypto, exports) {\n  exports = exports || {}\n\n  var exported = pbkdf2Export(crypto)\n\n  exports.pbkdf2 = exported.pbkdf2\n  exports.pbkdf2Sync = exported.pbkdf2Sync\n\n  return exports\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/crypto-browserify/pbkdf2.js\n ** module id = 39\n ** module chunks = 0\n **/","module.exports = function(crypto) {\n  function pbkdf2(password, salt, iterations, keylen, digest, callback) {\n    if ('function' === typeof digest) {\n      callback = digest\n      digest = undefined\n    }\n\n    if ('function' !== typeof callback)\n      throw new Error('No callback provided to pbkdf2')\n\n    setTimeout(function() {\n      var result\n\n      try {\n        result = pbkdf2Sync(password, salt, iterations, keylen, digest)\n      } catch (e) {\n        return callback(e)\n      }\n\n      callback(undefined, result)\n    })\n  }\n\n  function pbkdf2Sync(password, salt, iterations, keylen, digest) {\n    if ('number' !== typeof iterations)\n      throw new TypeError('Iterations not a number')\n\n    if (iterations < 0)\n      throw new TypeError('Bad iterations')\n\n    if ('number' !== typeof keylen)\n      throw new TypeError('Key length not a number')\n\n    if (keylen < 0)\n      throw new TypeError('Bad key length')\n\n    digest = digest || 'sha1'\n\n    if (!Buffer.isBuffer(password)) password = new Buffer(password)\n    if (!Buffer.isBuffer(salt)) salt = new Buffer(salt)\n\n    var hLen, l = 1, r, T\n    var DK = new Buffer(keylen)\n    var block1 = new Buffer(salt.length + 4)\n    salt.copy(block1, 0, 0, salt.length)\n\n    for (var i = 1; i <= l; i++) {\n      block1.writeUInt32BE(i, salt.length)\n\n      var U = crypto.createHmac(digest, password).update(block1).digest()\n\n      if (!hLen) {\n        hLen = U.length\n        T = new Buffer(hLen)\n        l = Math.ceil(keylen / hLen)\n        r = keylen - (l - 1) * hLen\n\n        if (keylen > (Math.pow(2, 32) - 1) * hLen)\n          throw new TypeError('keylen exceeds maximum length')\n      }\n\n      U.copy(T, 0, 0, hLen)\n\n      for (var j = 1; j < iterations; j++) {\n        U = crypto.createHmac(digest, password).update(U).digest()\n\n        for (var k = 0; k < hLen; k++) {\n          T[k] ^= U[k]\n        }\n      }\n\n      var destPos = (i - 1) * hLen\n      var len = (i == l ? r : hLen)\n      T.copy(DK, destPos, 0, len)\n    }\n\n    return DK\n  }\n\n  return {\n    pbkdf2: pbkdf2,\n    pbkdf2Sync: pbkdf2Sync\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/crypto-browserify/~/pbkdf2-compat/pbkdf2.js\n ** module id = 40\n ** module chunks = 0\n **/","import _ from 'lodash';\nconst extend = _.extend;\nconst clone = _.clone;\n\nexport const defaultSettings = {\n  Connector : [ 'Flowchart', {gap: 6, stub: [10, 15], alwaysRespectStubs: true} ],\n  ConnectionsDetachable: true\n};\nexport const connectorStyle = {\n  strokeStyle: '#666e82',\n  fillStyle: '#666e82',\n  radius: 5,\n  lineWidth: 2\n};\nexport const connectorOverlays = {\n  connectorOverlays: [\n    [ 'Arrow', { location: 1, length: 12, width: 12, height: 10, foldback: 1 } ]\n  ]\n};\nexport const disabledConnectorOverlays = {\n  connectorOverlays: [\n    [ 'Arrow', { location: 1, length: 12, width: 12, height: 10, foldback: 1 } ]\n  ]\n};\n\nexport const commonSettings = {\n  endpoint:'Dot',\n  maxConnections: -1, // -1 means unlimited connections\n  paintStyle: {\n    strokeStyle: '#666e82',\n    fillStyle: '#666e82',\n    radius: 5,\n    lineWidth: 3\n  },\n  anchors: [ 'Static']\n};\nexport const sourceSettings = extend({\n  isSource: true,\n  connectorStyle: connectorStyle,\n  anchor: [ 0.5, 1, 1, 0, 26, -43, 'sourceAnchor']\n}, commonSettings);\nexport const sinkSettings = extend({\n  isTarget: true,\n  anchor: [ 0.5, 1, -1, 0, -26, -43, 'sinkAnchor'],\n  connectorStyle: connectorStyle\n}, commonSettings);\n\nexport function getSettings(isDisabled) {\n  var settings = {};\n  if (isDisabled) {\n    settings = {\n      default: defaultSettings,\n      commonSettings: extend(commonSettings, disabledConnectorOverlays),\n      source: extend(sourceSettings, disabledConnectorOverlays),\n      sink: extend(sinkSettings, disabledConnectorOverlays)\n    };\n  } else {\n    settings = {\n      default: defaultSettings,\n      commonSettings: extend(commonSettings, connectorOverlays),\n      source: extend(sourceSettings, connectorOverlays),\n      sink: extend(sinkSettings, connectorOverlays)\n    };\n  }\n\n  settings.transformSource = clone(settings.source);\n  settings.transformSink = clone(settings.sink);\n  settings.transformSource.anchor = [ 0.5, 1, 1, 0, 26, -43, 'transformAnchor'];\n  settings.transformSink.anchor = [ 0.5, 1, -1, 0, -26, -43, 'transformAnchor'];\n\n  return settings;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./dag-settings.js\n **/","var baseClone = require('./_baseClone');\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, false, true);\n}\n\nmodule.exports = clone;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/clone.js\n ** module id = 42\n ** module chunks = 0\n **/","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    getAllKeys = require('./_getAllKeys'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isHostObject = require('./_isHostObject'),\n    isObject = require('./isObject'),\n    keys = require('./keys');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {boolean} [isFull] Specify a clone including symbols.\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      if (isHostObject(value)) {\n        return object ? value : {};\n      }\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, baseClone, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (!isArr) {\n    var props = isFull ? getAllKeys(value) : keys(value);\n  }\n  // Recursively populate clone (susceptible to call stack limits).\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_baseClone.js\n ** module id = 43\n ** module chunks = 0\n **/","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_Stack.js\n ** module id = 44\n ** module chunks = 0\n **/","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\nmodule.exports = listCacheClear;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_listCacheClear.js\n ** module id = 45\n ** module chunks = 0\n **/","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_listCacheDelete.js\n ** module id = 46\n ** module chunks = 0\n **/","var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_assocIndexOf.js\n ** module id = 47\n ** module chunks = 0\n **/","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'user': 'fred' };\n * var other = { 'user': 'fred' };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/eq.js\n ** module id = 48\n ** module chunks = 0\n **/","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_listCacheGet.js\n ** module id = 49\n ** module chunks = 0\n **/","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_listCacheHas.js\n ** module id = 50\n ** module chunks = 0\n **/","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_listCacheSet.js\n ** module id = 51\n ** module chunks = 0\n **/","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_arrayEach.js\n ** module id = 52\n ** module chunks = 0\n **/","var eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\nmodule.exports = assignValue;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_assignValue.js\n ** module id = 53\n ** module chunks = 0\n **/","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_baseAssign.js\n ** module id = 54\n ** module chunks = 0\n **/","var assignValue = require('./_assignValue');\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : source[key];\n\n    assignValue(object, key, newValue);\n  }\n  return object;\n}\n\nmodule.exports = copyObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_copyObject.js\n ** module id = 55\n ** module chunks = 0\n **/","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = Object.keys;\n\n/**\n * The base implementation of `_.keys` which doesn't skip the constructor\n * property of prototypes or treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  return nativeKeys(Object(object));\n}\n\nmodule.exports = baseKeys;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/keys.js\n ** module id = 56\n ** module chunks = 0\n **/","/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var result = new buffer.constructor(buffer.length);\n  buffer.copy(result);\n  return result;\n}\n\nmodule.exports = cloneBuffer;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_cloneBuffer.js\n ** module id = 57\n ** module chunks = 0\n **/","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = copyArray;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_copyArray.js\n ** module id = 58\n ** module chunks = 0\n **/","var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbol properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_copySymbols.js\n ** module id = 59\n ** module chunks = 0\n **/","/**\n * A method that returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_getSymbols.js\n ** module id = 60\n ** module chunks = 0\n **/","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_getAllKeys.js\n ** module id = 61\n ** module chunks = 0\n **/","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_baseGetAllKeys.js\n ** module id = 62\n ** module chunks = 0\n **/","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_arrayPush.js\n ** module id = 63\n ** module chunks = 0\n **/","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @type {Function}\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n *  else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/isArray.js\n ** module id = 64\n ** module chunks = 0\n **/","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction getTag(value) {\n  return objectToString.call(value);\n}\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_getTag.js\n ** module id = 65\n ** module chunks = 0\n **/","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_DataView.js\n ** module id = 66\n ** module chunks = 0\n **/","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_getNative.js\n ** module id = 67\n ** module chunks = 0\n **/","var checkGlobal = require('./_checkGlobal');\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = checkGlobal(typeof global == 'object' && global);\n\n/** Detect free variable `self`. */\nvar freeSelf = checkGlobal(typeof self == 'object' && self);\n\n/** Detect `this` as the global object. */\nvar thisGlobal = checkGlobal(typeof this == 'object' && this);\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || thisGlobal || Function('return this')();\n\nmodule.exports = root;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_root.js\n ** module id = 68\n ** module chunks = 0\n **/","/**\n * Checks if `value` is a global object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {null|Object} Returns `value` if it's a global object, else `null`.\n */\nfunction checkGlobal(value) {\n  return (value && value.Object === Object) ? value : null;\n}\n\nmodule.exports = checkGlobal;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_checkGlobal.js\n ** module id = 69\n ** module chunks = 0\n **/","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_Map.js\n ** module id = 70\n ** module chunks = 0\n **/","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_Promise.js\n ** module id = 71\n ** module chunks = 0\n **/","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_Set.js\n ** module id = 72\n ** module chunks = 0\n **/","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_WeakMap.js\n ** module id = 73\n ** module chunks = 0\n **/","/** Used to resolve the decompiled source of functions. */\nvar funcToString = Function.prototype.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_toSource.js\n ** module id = 74\n ** module chunks = 0\n **/","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_initCloneArray.js\n ** module id = 75\n ** module chunks = 0\n **/","/**\n * This method returns the first argument given to it.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'user': 'fred' };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_initCloneByTag.js\n ** module id = 76\n ** module chunks = 0\n **/","var baseCreate = require('./_baseCreate'),\n    getPrototype = require('./_getPrototype'),\n    isPrototype = require('./_isPrototype');\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nmodule.exports = initCloneObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_initCloneObject.js\n ** module id = 77\n ** module chunks = 0\n **/","var isObject = require('./isObject');\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} prototype The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nfunction baseCreate(proto) {\n  return isObject(proto) ? objectCreate(proto) : {};\n}\n\nmodule.exports = baseCreate;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_baseCreate.js\n ** module id = 78\n ** module chunks = 0\n **/","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/isObject.js\n ** module id = 79\n ** module chunks = 0\n **/","/**\n * A method that returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_isPrototype.js\n ** module id = 80\n ** module chunks = 0\n **/","/**\n * A method that returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/isBuffer.js\n ** module id = 81\n ** module chunks = 0\n **/","module.exports = require('./assignIn');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/extend.js\n ** module id = 82\n ** module chunks = 0\n **/","var assignValue = require('./_assignValue'),\n    copyObject = require('./_copyObject'),\n    createAssigner = require('./_createAssigner'),\n    isArrayLike = require('./isArrayLike'),\n    isPrototype = require('./_isPrototype'),\n    keysIn = require('./keysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */\nvar nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');\n\n/**\n * This method is like `_.assign` except that it iterates over own and\n * inherited source properties.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias extend\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assign\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * function Bar() {\n *   this.d = 4;\n * }\n *\n * Foo.prototype.c = 3;\n * Bar.prototype.e = 5;\n *\n * _.assignIn({ 'a': 1 }, new Foo, new Bar);\n * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5 }\n */\nvar assignIn = createAssigner(function(object, source) {\n  if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keysIn(source), object);\n    return;\n  }\n  for (var key in source) {\n    assignValue(object, key, source[key]);\n  }\n});\n\nmodule.exports = assignIn;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/assignIn.js\n ** module id = 83\n ** module chunks = 0\n **/","var isIterateeCall = require('./_isIterateeCall'),\n    rest = require('./rest');\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return rest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nmodule.exports = createAssigner;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_createAssigner.js\n ** module id = 84\n ** module chunks = 0\n **/","/**\n * A method that returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_isIterateeCall.js\n ** module id = 85\n ** module chunks = 0\n **/","var apply = require('./_apply'),\n    toInteger = require('./toInteger');\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates a function that invokes `func` with the `this` binding of the\n * created function and arguments from `start` and beyond provided as\n * an array.\n *\n * **Note:** This method is based on the\n * [rest parameter](https://mdn.io/rest_parameters).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Function\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var say = _.rest(function(what, names) {\n *   return what + ' ' + _.initial(names).join(', ') +\n *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n * });\n *\n * say('hello', 'fred', 'barney', 'pebbles');\n * // => 'hello fred, barney, & pebbles'\n */\nfunction rest(func, start) {\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  start = nativeMax(start === undefined ? (func.length - 1) : toInteger(start), 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    switch (start) {\n      case 0: return func.call(this, array);\n      case 1: return func.call(this, args[0], array);\n      case 2: return func.call(this, args[0], args[1], array);\n    }\n    var otherArgs = Array(start + 1);\n    index = -1;\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = array;\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = rest;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/rest.js\n ** module id = 86\n ** module chunks = 0\n **/","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  var length = args.length;\n  switch (length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_apply.js\n ** module id = 87\n ** module chunks = 0\n **/","/**\n * This method returns the first argument given to it.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'user': 'fred' };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/toInteger.js\n ** module id = 88\n ** module chunks = 0\n **/","var getLength = require('./_getLength'),\n    isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(getLength(value)) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/isArrayLike.js\n ** module id = 89\n ** module chunks = 0\n **/","var baseProperty = require('./_baseProperty');\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a\n * [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792) that affects\n * Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\nmodule.exports = getLength;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_getLength.js\n ** module id = 90\n ** module chunks = 0\n **/","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_baseProperty.js\n ** module id = 91\n ** module chunks = 0\n **/","var isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n *  else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8 which returns 'object' for typed array and weak map constructors,\n  // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\nmodule.exports = isFunction;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/isFunction.js\n ** module id = 92\n ** module chunks = 0\n **/","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length,\n *  else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/isLength.js\n ** module id = 93\n ** module chunks = 0\n **/","var Reflect = require('./_Reflect'),\n    iteratorToArray = require('./_iteratorToArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar enumerate = Reflect ? Reflect.enumerate : undefined,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * The base implementation of `_.keysIn` which doesn't skip the constructor\n * property of prototypes or treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  object = object == null ? object : Object(object);\n\n  var result = [];\n  for (var key in object) {\n    result.push(key);\n  }\n  return result;\n}\n\n// Fallback for IE < 9 with es6-shim.\nif (enumerate && !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf')) {\n  baseKeysIn = function(object) {\n    return iteratorToArray(enumerate(object));\n  };\n}\n\nmodule.exports = baseKeysIn;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/keysIn.js\n ** module id = 94\n ** module chunks = 0\n **/","var root = require('./_root');\n\n/** Built-in value references. */\nvar Reflect = root.Reflect;\n\nmodule.exports = Reflect;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_Reflect.js\n ** module id = 95\n ** module chunks = 0\n **/","/**\n * Converts `iterator` to an array.\n *\n * @private\n * @param {Object} iterator The iterator to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction iteratorToArray(iterator) {\n  var data,\n      result = [];\n\n  while (!(data = iterator.next()).done) {\n    result.push(data.value);\n  }\n  return result;\n}\n\nmodule.exports = iteratorToArray;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_iteratorToArray.js\n ** module id = 96\n ** module chunks = 0\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../node_modules/css-loader/index.js!./../node_modules/less-loader/index.js!./dag.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./../node_modules/less-loader/index.js!./dag.less\", function() {\n\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./../node_modules/less-loader/index.js!./dag.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./styles/dag.less\n ** module id = 97\n ** module chunks = 0\n **/","exports = module.exports = require(\"./../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"my-dag {\\n  display: block;\\n}\\nmy-dag .jsplumb-endpoint svg {\\n  overflow: visible;\\n}\\nmy-dag .jsplumb-endpoint circle {\\n  fill: white;\\n  r: 2px;\\n  stroke-width: 8px;\\n}\\nmy-dag .jsplumb-endpoint-anchor-sourceAnchor circle {\\n  stroke: green;\\n}\\nmy-dag .jsplumb-endpoint-anchor-transformAnchor circle {\\n  stroke: purple;\\n}\\nmy-dag .jsplumb-endpoint-anchor-sinkAnchor circle {\\n  stroke: orange;\\n}\\nmy-dag .diagram-container {\\n  position: relative;\\n  width: 100%;\\n  height: 80vh;\\n  background: #eee;\\n  overflow: hidden;\\n}\\nmy-dag .diagram-container #dag-container {\\n  height: inherit;\\n  width: inherit;\\n  position: absolute;\\n  transform-origin: left center;\\n}\\nmy-dag .diagram-container #dag-container .box {\\n  position: absolute;\\n  height: 66px;\\n  width: 105px;\\n  cursor: pointer;\\n}\\nmy-dag .diagram-container #dag-container .box .dag-node {\\n  margin: 0 auto;\\n  backgroun-clip: border-box;\\n  height: 46px;\\n  width: 56px;\\n  border-radius: 5px;\\n}\\nmy-dag .diagram-container #dag-container .box .dag-node.source {\\n  border: 2px solid green;\\n}\\nmy-dag .diagram-container #dag-container .box .dag-node.source ~ .label {\\n  color: green;\\n}\\nmy-dag .diagram-container #dag-container .box .dag-node.transform {\\n  border: 2px solid purple;\\n}\\nmy-dag .diagram-container #dag-container .box .dag-node.transform ~ .label {\\n  color: purple;\\n}\\nmy-dag .diagram-container #dag-container .box .dag-node.sink {\\n  border: 2px solid orange;\\n}\\nmy-dag .diagram-container #dag-container .box .dag-node.sink ~ .label {\\n  color: orange;\\n}\\nmy-dag .diagram-container #dag-container .box .label {\\n  font-size: 12px;\\n}\\nmy-dag .fa.fa-spin.fa-refresh {\\n  position: absolute;\\n  left: 50%;\\n  top: 50%;\\n  transform: translate(-50%, -50%);\\n}\\n\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/less-loader!./styles/dag.less\n ** module id = 98\n ** module chunks = 0\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader/lib/css-base.js\n ** module id = 99\n ** module chunks = 0\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar stylesInDom = {},\r\n\tmemoize = function(fn) {\r\n\t\tvar memo;\r\n\t\treturn function () {\r\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\treturn memo;\r\n\t\t};\r\n\t},\r\n\tisOldIE = memoize(function() {\r\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t}),\r\n\tgetHeadElement = memoize(function () {\r\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t}),\r\n\tsingletonElement = null,\r\n\tsingletonCounter = 0,\r\n\tstyleElementsInsertedAtTop = [];\r\n\r\nmodule.exports = function(list, options) {\r\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\r\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t}\r\n\r\n\toptions = options || {};\r\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t// tags it will allow on a page\r\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\r\n\t// By default, add <style> tags to the bottom of <head>.\r\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\r\n\r\n\tvar styles = listToStyles(list);\r\n\taddStylesToDom(styles, options);\r\n\r\n\treturn function update(newList) {\r\n\t\tvar mayRemove = [];\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tdomStyle.refs--;\r\n\t\t\tmayRemove.push(domStyle);\r\n\t\t}\r\n\t\tif(newList) {\r\n\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\taddStylesToDom(newStyles, options);\r\n\t\t}\r\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction addStylesToDom(styles, options) {\r\n\tfor(var i = 0; i < styles.length; i++) {\r\n\t\tvar item = styles[i];\r\n\t\tvar domStyle = stylesInDom[item.id];\r\n\t\tif(domStyle) {\r\n\t\t\tdomStyle.refs++;\r\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t}\r\n\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar parts = [];\r\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction listToStyles(list) {\r\n\tvar styles = [];\r\n\tvar newStyles = {};\r\n\tfor(var i = 0; i < list.length; i++) {\r\n\t\tvar item = list[i];\r\n\t\tvar id = item[0];\r\n\t\tvar css = item[1];\r\n\t\tvar media = item[2];\r\n\t\tvar sourceMap = item[3];\r\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\tif(!newStyles[id])\r\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\telse\r\n\t\t\tnewStyles[id].parts.push(part);\r\n\t}\r\n\treturn styles;\r\n}\r\n\r\nfunction insertStyleElement(options, styleElement) {\r\n\tvar head = getHeadElement();\r\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\tif (options.insertAt === \"top\") {\r\n\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t} else {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t}\r\n\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t} else if (options.insertAt === \"bottom\") {\r\n\t\thead.appendChild(styleElement);\r\n\t} else {\r\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\r\n\t}\r\n}\r\n\r\nfunction removeStyleElement(styleElement) {\r\n\tstyleElement.parentNode.removeChild(styleElement);\r\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\tif(idx >= 0) {\r\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t}\r\n}\r\n\r\nfunction createStyleElement(options) {\r\n\tvar styleElement = document.createElement(\"style\");\r\n\tstyleElement.type = \"text/css\";\r\n\tinsertStyleElement(options, styleElement);\r\n\treturn styleElement;\r\n}\r\n\r\nfunction createLinkElement(options) {\r\n\tvar linkElement = document.createElement(\"link\");\r\n\tlinkElement.rel = \"stylesheet\";\r\n\tinsertStyleElement(options, linkElement);\r\n\treturn linkElement;\r\n}\r\n\r\nfunction addStyle(obj, options) {\r\n\tvar styleElement, update, remove;\r\n\r\n\tif (options.singleton) {\r\n\t\tvar styleIndex = singletonCounter++;\r\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t} else if(obj.sourceMap &&\r\n\t\ttypeof URL === \"function\" &&\r\n\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\ttypeof Blob === \"function\" &&\r\n\t\ttypeof btoa === \"function\") {\r\n\t\tstyleElement = createLinkElement(options);\r\n\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t\tif(styleElement.href)\r\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t};\r\n\t} else {\r\n\t\tstyleElement = createStyleElement(options);\r\n\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t};\r\n\t}\r\n\r\n\tupdate(obj);\r\n\r\n\treturn function updateStyle(newObj) {\r\n\t\tif(newObj) {\r\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\treturn;\r\n\t\t\tupdate(obj = newObj);\r\n\t\t} else {\r\n\t\t\tremove();\r\n\t\t}\r\n\t};\r\n}\r\n\r\nvar replaceText = (function () {\r\n\tvar textStore = [];\r\n\r\n\treturn function (index, replacement) {\r\n\t\ttextStore[index] = replacement;\r\n\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t};\r\n})();\r\n\r\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\tvar css = remove ? \"\" : obj.css;\r\n\r\n\tif (styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t} else {\r\n\t\tvar cssNode = document.createTextNode(css);\r\n\t\tvar childNodes = styleElement.childNodes;\r\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\tif (childNodes.length) {\r\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t} else {\r\n\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction applyToTag(styleElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\r\n\tif(media) {\r\n\t\tstyleElement.setAttribute(\"media\", media)\r\n\t}\r\n\r\n\tif(styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = css;\r\n\t} else {\r\n\t\twhile(styleElement.firstChild) {\r\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t}\r\n\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t}\r\n}\r\n\r\nfunction updateLink(linkElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(sourceMap) {\r\n\t\t// http://stackoverflow.com/a/26603875\r\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t}\r\n\r\n\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\r\n\tvar oldSrc = linkElement.href;\r\n\r\n\tlinkElement.href = URL.createObjectURL(blob);\r\n\r\n\tif(oldSrc)\r\n\t\tURL.revokeObjectURL(oldSrc);\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/style-loader/addStyles.js\n ** module id = 100\n ** module chunks = 0\n **/","/*** IMPORTS FROM imports-loader ***/\n(function() {\n\nrequire(\"!!/Users/ajainarayanan/Projects/dag/node_modules/script-loader/addScript.js\")(require(\"!!/Users/ajainarayanan/Projects/dag/node_modules/script-loader/node_modules/raw-loader/index.js!/Users/ajainarayanan/Projects/dag/node_modules/jsPlumb/dist/js/jsPlumb-2.0.7.js\")+\"\\n\\n// SCRIPT-LOADER FOOTER\\n//# sourceURL=script:///Users/ajainarayanan/Projects/dag/node_modules/jsPlumb/dist/js/jsPlumb-2.0.7.js\")\n}.call(window));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/jsPlumb/dist/js/jsPlumb-2.0.7.js\n ** module id = 101\n ** module chunks = 0\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nmodule.exports = function(src) {\r\n\tif (typeof execScript !== \"undefined\")\r\n\t\texecScript(src);\r\n\telse\r\n\t\teval.call(null, src);\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/script-loader/addScript.js\n ** module id = 102\n ** module chunks = 0\n **/","module.exports = \"/**\\n * jsBezier-0.7\\n *\\n * Copyright (c) 2010 - 2015 jsPlumb (hello@jsplumbtoolkit.com)\\n *\\n * licensed under the MIT license.\\n *\\n * a set of Bezier curve functions that deal with Beziers, used by jsPlumb, and perhaps useful for other people.  These functions work with Bezier\\n * curves of arbitrary degree.\\n *\\n * - functions are all in the 'jsBezier' namespace.\\n *\\n * - all input points should be in the format {x:.., y:..}. all output points are in this format too.\\n *\\n * - all input curves should be in the format [ {x:.., y:..}, {x:.., y:..}, {x:.., y:..}, {x:.., y:..} ]\\n *\\n * - 'location' as used as an input here refers to a decimal in the range 0-1 inclusive, which indicates a point some proportion along the length\\n * of the curve.  location as output has the same format and meaning.\\n *\\n *\\n * Function List:\\n * --------------\\n *\\n * distanceFromCurve(point, curve)\\n *\\n * \\tCalculates the distance that the given point lies from the given Bezier.  Note that it is computed relative to the center of the Bezier,\\n * so if you have stroked the curve with a wide pen you may wish to take that into account!  The distance returned is relative to the values\\n * of the curve and the point - it will most likely be pixels.\\n *\\n * gradientAtPoint(curve, location)\\n *\\n * \\tCalculates the gradient to the curve at the given location, as a decimal between 0 and 1 inclusive.\\n *\\n * gradientAtPointAlongCurveFrom (curve, location)\\n *\\n *\\tCalculates the gradient at the point on the given curve that is 'distance' units from location.\\n *\\n * nearestPointOnCurve(point, curve)\\n *\\n *\\tCalculates the nearest point to the given point on the given curve.  The return value of this is a JS object literal, containing both the\\n *point's coordinates and also the 'location' of the point (see above), for example:  { point:{x:551,y:150}, location:0.263365 }.\\n *\\n * pointOnCurve(curve, location)\\n *\\n * \\tCalculates the coordinates of the point on the given Bezier curve at the given location.\\n *\\n * pointAlongCurveFrom(curve, location, distance)\\n *\\n * \\tCalculates the coordinates of the point on the given curve that is 'distance' units from location.  'distance' should be in the same coordinate\\n * space as that used to construct the Bezier curve.  For an HTML Canvas usage, for example, distance would be a measure of pixels.\\n *\\n * locationAlongCurveFrom(curve, location, distance)\\n *\\n * \\tCalculates the location on the given curve that is 'distance' units from location.  'distance' should be in the same coordinate\\n * space as that used to construct the Bezier curve.  For an HTML Canvas usage, for example, distance would be a measure of pixels.\\n *\\n * perpendicularToCurveAt(curve, location, length, distance)\\n *\\n * \\tCalculates the perpendicular to the given curve at the given location.  length is the length of the line you wish for (it will be centered\\n * on the point at 'location'). distance is optional, and allows you to specify a point along the path from the given location as the center of\\n * the perpendicular returned.  The return value of this is an array of two points: [ {x:...,y:...}, {x:...,y:...} ].\\n *\\n *\\n */\\n\\n(function() {\\n\\n    var root = this;\\n\\n    if(typeof Math.sgn == \\\"undefined\\\") {\\n        Math.sgn = function(x) { return x == 0 ? 0 : x > 0 ? 1 :-1; };\\n    }\\n\\n    var Vectors = {\\n            subtract \\t: \\tfunction(v1, v2) { return {x:v1.x - v2.x, y:v1.y - v2.y }; },\\n            dotProduct\\t: \\tfunction(v1, v2) { return (v1.x * v2.x)  + (v1.y * v2.y); },\\n            square\\t\\t:\\tfunction(v) { return Math.sqrt((v.x * v.x) + (v.y * v.y)); },\\n            scale\\t\\t:\\tfunction(v, s) { return {x:v.x * s, y:v.y * s }; }\\n        },\\n\\n        maxRecursion = 64,\\n        flatnessTolerance = Math.pow(2.0,-maxRecursion-1);\\n\\n    /**\\n     * Calculates the distance that the point lies from the curve.\\n     *\\n     * @param point a point in the form {x:567, y:3342}\\n     * @param curve a Bezier curve in the form [{x:..., y:...}, {x:..., y:...}, {x:..., y:...}, {x:..., y:...}].  note that this is currently\\n     * hardcoded to assume cubiz beziers, but would be better off supporting any degree.\\n     * @return a JS object literal containing location and distance, for example: {location:0.35, distance:10}.  Location is analogous to the location\\n     * argument you pass to the pointOnPath function: it is a ratio of distance travelled along the curve.  Distance is the distance in pixels from\\n     * the point to the curve.\\n     */\\n    var _distanceFromCurve = function(point, curve) {\\n        var candidates = [],\\n            w = _convertToBezier(point, curve),\\n            degree = curve.length - 1, higherDegree = (2 * degree) - 1,\\n            numSolutions = _findRoots(w, higherDegree, candidates, 0),\\n            v = Vectors.subtract(point, curve[0]), dist = Vectors.square(v), t = 0.0;\\n\\n        for (var i = 0; i < numSolutions; i++) {\\n            v = Vectors.subtract(point, _bezier(curve, degree, candidates[i], null, null));\\n            var newDist = Vectors.square(v);\\n            if (newDist < dist) {\\n                dist = newDist;\\n                t = candidates[i];\\n            }\\n        }\\n        v = Vectors.subtract(point, curve[degree]);\\n        newDist = Vectors.square(v);\\n        if (newDist < dist) {\\n            dist = newDist;\\n            t = 1.0;\\n        }\\n        return {location:t, distance:dist};\\n    };\\n    /**\\n     * finds the nearest point on the curve to the given point.\\n     */\\n    var _nearestPointOnCurve = function(point, curve) {\\n        var td = _distanceFromCurve(point, curve);\\n        return {point:_bezier(curve, curve.length - 1, td.location, null, null), location:td.location};\\n    };\\n    var _convertToBezier = function(point, curve) {\\n        var degree = curve.length - 1, higherDegree = (2 * degree) - 1,\\n            c = [], d = [], cdTable = [], w = [],\\n            z = [ [1.0, 0.6, 0.3, 0.1], [0.4, 0.6, 0.6, 0.4], [0.1, 0.3, 0.6, 1.0] ];\\n\\n        for (var i = 0; i <= degree; i++) c[i] = Vectors.subtract(curve[i], point);\\n        for (var i = 0; i <= degree - 1; i++) {\\n            d[i] = Vectors.subtract(curve[i+1], curve[i]);\\n            d[i] = Vectors.scale(d[i], 3.0);\\n        }\\n        for (var row = 0; row <= degree - 1; row++) {\\n            for (var column = 0; column <= degree; column++) {\\n                if (!cdTable[row]) cdTable[row] = [];\\n                cdTable[row][column] = Vectors.dotProduct(d[row], c[column]);\\n            }\\n        }\\n        for (i = 0; i <= higherDegree; i++) {\\n            if (!w[i]) w[i] = [];\\n            w[i].y = 0.0;\\n            w[i].x = parseFloat(i) / higherDegree;\\n        }\\n        var n = degree, m = degree-1;\\n        for (var k = 0; k <= n + m; k++) {\\n            var lb = Math.max(0, k - m),\\n                ub = Math.min(k, n);\\n            for (i = lb; i <= ub; i++) {\\n                j = k - i;\\n                w[i+j].y += cdTable[j][i] * z[j][i];\\n            }\\n        }\\n        return w;\\n    };\\n    /**\\n     * counts how many roots there are.\\n     */\\n    var _findRoots = function(w, degree, t, depth) {\\n        var left = [], right = [],\\n            left_count, right_count,\\n            left_t = [], right_t = [];\\n\\n        switch (_getCrossingCount(w, degree)) {\\n            case 0 : {\\n                return 0;\\n            }\\n            case 1 : {\\n                if (depth >= maxRecursion) {\\n                    t[0] = (w[0].x + w[degree].x) / 2.0;\\n                    return 1;\\n                }\\n                if (_isFlatEnough(w, degree)) {\\n                    t[0] = _computeXIntercept(w, degree);\\n                    return 1;\\n                }\\n                break;\\n            }\\n        }\\n        _bezier(w, degree, 0.5, left, right);\\n        left_count  = _findRoots(left,  degree, left_t, depth+1);\\n        right_count = _findRoots(right, degree, right_t, depth+1);\\n        for (var i = 0; i < left_count; i++) t[i] = left_t[i];\\n        for (var i = 0; i < right_count; i++) t[i+left_count] = right_t[i];\\n        return (left_count+right_count);\\n    };\\n    var _getCrossingCount = function(curve, degree) {\\n        var n_crossings = 0, sign, old_sign;\\n        sign = old_sign = Math.sgn(curve[0].y);\\n        for (var i = 1; i <= degree; i++) {\\n            sign = Math.sgn(curve[i].y);\\n            if (sign != old_sign) n_crossings++;\\n            old_sign = sign;\\n        }\\n        return n_crossings;\\n    };\\n    var _isFlatEnough = function(curve, degree) {\\n        var  error,\\n            intercept_1, intercept_2, left_intercept, right_intercept,\\n            a, b, c, det, dInv, a1, b1, c1, a2, b2, c2;\\n        a = curve[0].y - curve[degree].y;\\n        b = curve[degree].x - curve[0].x;\\n        c = curve[0].x * curve[degree].y - curve[degree].x * curve[0].y;\\n\\n        var max_distance_above = max_distance_below = 0.0;\\n\\n        for (var i = 1; i < degree; i++) {\\n            var value = a * curve[i].x + b * curve[i].y + c;\\n            if (value > max_distance_above)\\n                max_distance_above = value;\\n            else if (value < max_distance_below)\\n                max_distance_below = value;\\n        }\\n\\n        a1 = 0.0; b1 = 1.0; c1 = 0.0; a2 = a; b2 = b;\\n        c2 = c - max_distance_above;\\n        det = a1 * b2 - a2 * b1;\\n        dInv = 1.0/det;\\n        intercept_1 = (b1 * c2 - b2 * c1) * dInv;\\n        a2 = a; b2 = b; c2 = c - max_distance_below;\\n        det = a1 * b2 - a2 * b1;\\n        dInv = 1.0/det;\\n        intercept_2 = (b1 * c2 - b2 * c1) * dInv;\\n        left_intercept = Math.min(intercept_1, intercept_2);\\n        right_intercept = Math.max(intercept_1, intercept_2);\\n        error = right_intercept - left_intercept;\\n        return (error < flatnessTolerance)? 1 : 0;\\n    };\\n    var _computeXIntercept = function(curve, degree) {\\n        var XLK = 1.0, YLK = 0.0,\\n            XNM = curve[degree].x - curve[0].x, YNM = curve[degree].y - curve[0].y,\\n            XMK = curve[0].x - 0.0, YMK = curve[0].y - 0.0,\\n            det = XNM*YLK - YNM*XLK, detInv = 1.0/det,\\n            S = (XNM*YMK - YNM*XMK) * detInv;\\n        return 0.0 + XLK * S;\\n    };\\n    var _bezier = function(curve, degree, t, left, right) {\\n        var temp = [[]];\\n        for (var j =0; j <= degree; j++) temp[0][j] = curve[j];\\n        for (var i = 1; i <= degree; i++) {\\n            for (var j =0 ; j <= degree - i; j++) {\\n                if (!temp[i]) temp[i] = [];\\n                if (!temp[i][j]) temp[i][j] = {};\\n                temp[i][j].x = (1.0 - t) * temp[i-1][j].x + t * temp[i-1][j+1].x;\\n                temp[i][j].y = (1.0 - t) * temp[i-1][j].y + t * temp[i-1][j+1].y;\\n            }\\n        }\\n        if (left != null)\\n            for (j = 0; j <= degree; j++) left[j]  = temp[j][0];\\n        if (right != null)\\n            for (j = 0; j <= degree; j++) right[j] = temp[degree-j][j];\\n\\n        return (temp[degree][0]);\\n    };\\n\\n    var _curveFunctionCache = {};\\n    var _getCurveFunctions = function(order) {\\n        var fns = _curveFunctionCache[order];\\n        if (!fns) {\\n            fns = [];\\n            var f_term = function() { return function(t) { return Math.pow(t, order); }; },\\n                l_term = function() { return function(t) { return Math.pow((1-t), order); }; },\\n                c_term = function(c) { return function(t) { return c; }; },\\n                t_term = function() { return function(t) { return t; }; },\\n                one_minus_t_term = function() { return function(t) { return 1-t; }; },\\n                _termFunc = function(terms) {\\n                    return function(t) {\\n                        var p = 1;\\n                        for (var i = 0; i < terms.length; i++) p = p * terms[i](t);\\n                        return p;\\n                    };\\n                };\\n\\n            fns.push(new f_term());  // first is t to the power of the curve order\\n            for (var i = 1; i < order; i++) {\\n                var terms = [new c_term(order)];\\n                for (var j = 0 ; j < (order - i); j++) terms.push(new t_term());\\n                for (var j = 0 ; j < i; j++) terms.push(new one_minus_t_term());\\n                fns.push(new _termFunc(terms));\\n            }\\n            fns.push(new l_term());  // last is (1-t) to the power of the curve order\\n\\n            _curveFunctionCache[order] = fns;\\n        }\\n\\n        return fns;\\n    };\\n\\n\\n    /**\\n     * calculates a point on the curve, for a Bezier of arbitrary order.\\n     * @param curve an array of control points, eg [{x:10,y:20}, {x:50,y:50}, {x:100,y:100}, {x:120,y:100}].  For a cubic bezier this should have four points.\\n     * @param location a decimal indicating the distance along the curve the point should be located at.  this is the distance along the curve as it travels, taking the way it bends into account.  should be a number from 0 to 1, inclusive.\\n     */\\n    var _pointOnPath = function(curve, location) {\\n        var cc = _getCurveFunctions(curve.length - 1),\\n            _x = 0, _y = 0;\\n        for (var i = 0; i < curve.length ; i++) {\\n            _x = _x + (curve[i].x * cc[i](location));\\n            _y = _y + (curve[i].y * cc[i](location));\\n        }\\n\\n        return {x:_x, y:_y};\\n    };\\n\\n    var _dist = function(p1,p2) {\\n        return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\\n    };\\n\\n    var _isPoint = function(curve) {\\n        return curve[0].x == curve[1].x && curve[0].y == curve[1].y;\\n    };\\n\\n    /**\\n     * finds the point that is 'distance' along the path from 'location'.  this method returns both the x,y location of the point and also\\n     * its 'location' (proportion of travel along the path); the method below - _pointAlongPathFrom - calls this method and just returns the\\n     * point.\\n     */\\n    var _pointAlongPath = function(curve, location, distance) {\\n\\n        if (_isPoint(curve)) {\\n            return {\\n                point:curve[0],\\n                location:location\\n            };\\n        }\\n\\n        var prev = _pointOnPath(curve, location),\\n            tally = 0,\\n            curLoc = location,\\n            direction = distance > 0 ? 1 : -1,\\n            cur = null;\\n\\n        while (tally < Math.abs(distance)) {\\n            curLoc += (0.005 * direction);\\n            cur = _pointOnPath(curve, curLoc);\\n            tally += _dist(cur, prev);\\n            prev = cur;\\n        }\\n        return {point:cur, location:curLoc};\\n    };\\n\\n    var _length = function(curve) {\\n        if (_isPoint(curve)) return 0;\\n\\n        var prev = _pointOnPath(curve, 0),\\n            tally = 0,\\n            curLoc = 0,\\n            direction = 1,\\n            cur = null;\\n\\n        while (curLoc < 1) {\\n            curLoc += (0.005 * direction);\\n            cur = _pointOnPath(curve, curLoc);\\n            tally += _dist(cur, prev);\\n            prev = cur;\\n        }\\n        return tally;\\n    };\\n\\n    /**\\n     * finds the point that is 'distance' along the path from 'location'.\\n     */\\n    var _pointAlongPathFrom = function(curve, location, distance) {\\n        return _pointAlongPath(curve, location, distance).point;\\n    };\\n\\n    /**\\n     * finds the location that is 'distance' along the path from 'location'.\\n     */\\n    var _locationAlongPathFrom = function(curve, location, distance) {\\n        return _pointAlongPath(curve, location, distance).location;\\n    };\\n\\n    /**\\n     * returns the gradient of the curve at the given location, which is a decimal between 0 and 1 inclusive.\\n     *\\n     * thanks // http://bimixual.org/AnimationLibrary/beziertangents.html\\n     */\\n    var _gradientAtPoint = function(curve, location) {\\n        var p1 = _pointOnPath(curve, location),\\n            p2 = _pointOnPath(curve.slice(0, curve.length - 1), location),\\n            dy = p2.y - p1.y, dx = p2.x - p1.x;\\n        return dy == 0 ? Infinity : Math.atan(dy / dx);\\n    };\\n\\n    /**\\n     returns the gradient of the curve at the point which is 'distance' from the given location.\\n     if this point is greater than location 1, the gradient at location 1 is returned.\\n     if this point is less than location 0, the gradient at location 0 is returned.\\n     */\\n    var _gradientAtPointAlongPathFrom = function(curve, location, distance) {\\n        var p = _pointAlongPath(curve, location, distance);\\n        if (p.location > 1) p.location = 1;\\n        if (p.location < 0) p.location = 0;\\n        return _gradientAtPoint(curve, p.location);\\n    };\\n\\n    /**\\n     * calculates a line that is 'length' pixels long, perpendicular to, and centered on, the path at 'distance' pixels from the given location.\\n     * if distance is not supplied, the perpendicular for the given location is computed (ie. we set distance to zero).\\n     */\\n    var _perpendicularToPathAt = function(curve, location, length, distance) {\\n        distance = distance == null ? 0 : distance;\\n        var p = _pointAlongPath(curve, location, distance),\\n            m = _gradientAtPoint(curve, p.location),\\n            _theta2 = Math.atan(-1 / m),\\n            y =  length / 2 * Math.sin(_theta2),\\n            x =  length / 2 * Math.cos(_theta2);\\n        return [{x:p.point.x + x, y:p.point.y + y}, {x:p.point.x - x, y:p.point.y - y}];\\n    };\\n\\n    this.jsBezier = {\\n        distanceFromCurve : _distanceFromCurve,\\n        gradientAtPoint : _gradientAtPoint,\\n        gradientAtPointAlongCurveFrom : _gradientAtPointAlongPathFrom,\\n        nearestPointOnCurve : _nearestPointOnCurve,\\n        pointOnCurve : _pointOnPath,\\n        pointAlongCurveFrom : _pointAlongPathFrom,\\n        perpendicularToCurveAt : _perpendicularToPathAt,\\n        locationAlongCurveFrom:_locationAlongPathFrom,\\n        getLength:_length\\n    };\\n}).call(this);\\n\\n/**\\n * Biltong v0.2\\n *\\n * Various geometry functions written as part of jsPlumb and perhaps useful for others.\\n *\\n * Copyright (c) 2014 Simon Porritt\\n *\\n * Permission is hereby granted, free of charge, to any person\\n * obtaining a copy of this software and associated documentation\\n * files (the \\\"Software\\\"), to deal in the Software without\\n * restriction, including without limitation the rights to use,\\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\\n * copies of the Software, and to permit persons to whom the\\n * Software is furnished to do so, subject to the following\\n * conditions:\\n *\\n * The above copyright notice and this permission notice shall be\\n * included in all copies or substantial portions of the Software.\\n *\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND,\\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\\n * OTHER DEALINGS IN THE SOFTWARE.\\n */\\n;(function() {\\n\\n\\t\\n\\t\\\"use strict\\\";\\n\\n\\tvar Biltong = this.Biltong = {};\\n\\n\\tvar _isa = function(a) { return Object.prototype.toString.call(a) === \\\"[object Array]\\\"; },\\n\\t\\t_pointHelper = function(p1, p2, fn) {\\n\\t\\t    p1 = _isa(p1) ? p1 : [p1.x, p1.y];\\n\\t\\t    p2 = _isa(p2) ? p2 : [p2.x, p2.y];    \\n\\t\\t    return fn(p1, p2);\\n\\t\\t},\\n\\t\\t/**\\n\\t\\t* @name Biltong.gradient\\n\\t\\t* @function\\n\\t\\t* @desc Calculates the gradient of a line between the two points.\\n\\t\\t* @param {Point} p1 First point, either as a 2 entry array or object with `left` and `top` properties.\\n\\t\\t* @param {Point} p2 Second point, either as a 2 entry array or object with `left` and `top` properties.\\n\\t\\t* @return {Float} The gradient of a line between the two points.\\n\\t\\t*/\\n\\t\\t_gradient = Biltong.gradient = function(p1, p2) {\\n\\t\\t    return _pointHelper(p1, p2, function(_p1, _p2) { \\n\\t\\t        if (_p2[0] == _p1[0])\\n\\t\\t            return _p2[1] > _p1[1] ? Infinity : -Infinity;\\n\\t\\t        else if (_p2[1] == _p1[1]) \\n\\t\\t            return _p2[0] > _p1[0] ? 0 : -0;\\n\\t\\t        else \\n\\t\\t            return (_p2[1] - _p1[1]) / (_p2[0] - _p1[0]); \\n\\t\\t    });\\t\\t\\n\\t\\t},\\n\\t\\t/**\\n\\t\\t* @name Biltong.normal\\n\\t\\t* @function\\n\\t\\t* @desc Calculates the gradient of a normal to a line between the two points.\\n\\t\\t* @param {Point} p1 First point, either as a 2 entry array or object with `left` and `top` properties.\\n\\t\\t* @param {Point} p2 Second point, either as a 2 entry array or object with `left` and `top` properties.\\n\\t\\t* @return {Float} The gradient of a normal to a line between the two points.\\n\\t\\t*/\\n\\t\\t_normal = Biltong.normal = function(p1, p2) {\\n\\t\\t    return -1 / _gradient(p1, p2);\\n\\t\\t},\\n\\t\\t/**\\n\\t\\t* @name Biltong.lineLength\\n\\t\\t* @function\\n\\t\\t* @desc Calculates the length of a line between the two points.\\n\\t\\t* @param {Point} p1 First point, either as a 2 entry array or object with `left` and `top` properties.\\n\\t\\t* @param {Point} p2 Second point, either as a 2 entry array or object with `left` and `top` properties.\\n\\t\\t* @return {Float} The length of a line between the two points.\\n\\t\\t*/\\n\\t\\t_lineLength = Biltong.lineLength = function(p1, p2) {\\n\\t\\t    return _pointHelper(p1, p2, function(_p1, _p2) {\\n\\t\\t        return Math.sqrt(Math.pow(_p2[1] - _p1[1], 2) + Math.pow(_p2[0] - _p1[0], 2));\\t\\t\\t\\n\\t\\t    });\\n\\t\\t},\\n\\t\\t/**\\n\\t\\t* @name Biltong.quadrant\\n\\t\\t* @function\\n\\t\\t* @desc Calculates the quadrant in which the angle between the two points lies. \\n\\t\\t* @param {Point} p1 First point, either as a 2 entry array or object with `left` and `top` properties.\\n\\t\\t* @param {Point} p2 Second point, either as a 2 entry array or object with `left` and `top` properties.\\n\\t\\t* @return {Integer} The quadrant - 1 for upper right, 2 for lower right, 3 for lower left, 4 for upper left.\\n\\t\\t*/\\n\\t\\t_quadrant = Biltong.quadrant = function(p1, p2) {\\n\\t\\t    return _pointHelper(p1, p2, function(_p1, _p2) {\\n\\t\\t        if (_p2[0] > _p1[0]) {\\n\\t\\t            return (_p2[1] > _p1[1]) ? 2 : 1;\\n\\t\\t        }\\n\\t\\t        else if (_p2[0] == _p1[0]) {\\n\\t\\t            return _p2[1] > _p1[1] ? 2 : 1;    \\n\\t\\t        }\\n\\t\\t        else {\\n\\t\\t            return (_p2[1] > _p1[1]) ? 3 : 4;\\n\\t\\t        }\\n\\t\\t    });\\n\\t\\t},\\n\\t\\t/**\\n\\t\\t* @name Biltong.theta\\n\\t\\t* @function\\n\\t\\t* @desc Calculates the angle between the two points. \\n\\t\\t* @param {Point} p1 First point, either as a 2 entry array or object with `left` and `top` properties.\\n\\t\\t* @param {Point} p2 Second point, either as a 2 entry array or object with `left` and `top` properties.\\n\\t\\t* @return {Float} The angle between the two points.\\n\\t\\t*/\\n\\t\\t_theta = Biltong.theta = function(p1, p2) {\\n\\t\\t    return _pointHelper(p1, p2, function(_p1, _p2) {\\n\\t\\t        var m = _gradient(_p1, _p2),\\n\\t\\t            t = Math.atan(m),\\n\\t\\t            s = _quadrant(_p1, _p2);\\n\\t\\t        if ((s == 4 || s== 3)) t += Math.PI;\\n\\t\\t        if (t < 0) t += (2 * Math.PI);\\n\\t\\t    \\n\\t\\t        return t;\\n\\t\\t    });\\n\\t\\t},\\n\\t\\t/**\\n\\t\\t* @name Biltong.intersects\\n\\t\\t* @function\\n\\t\\t* @desc Calculates whether or not the two rectangles intersect.\\n\\t\\t* @param {Rectangle} r1 First rectangle, as a js object in the form `{x:.., y:.., w:.., h:..}`\\n\\t\\t* @param {Rectangle} r2 Second rectangle, as a js object in the form `{x:.., y:.., w:.., h:..}`\\n\\t\\t* @return {Boolean} True if the rectangles intersect, false otherwise.\\n\\t\\t*/\\n\\t\\t_intersects = Biltong.intersects = function(r1, r2) {\\n\\t\\t    var x1 = r1.x, x2 = r1.x + r1.w, y1 = r1.y, y2 = r1.y + r1.h,\\n\\t\\t        a1 = r2.x, a2 = r2.x + r2.w, b1 = r2.y, b2 = r2.y + r2.h;\\n\\t\\t\\n\\t\\t\\treturn  ( (x1 <= a1 && a1 <= x2) && (y1 <= b1 && b1 <= y2) ) ||\\n\\t\\t\\t        ( (x1 <= a2 && a2 <= x2) && (y1 <= b1 && b1 <= y2) ) ||\\n\\t\\t\\t        ( (x1 <= a1 && a1 <= x2) && (y1 <= b2 && b2 <= y2) ) ||\\n\\t\\t\\t        ( (x1 <= a2 && a1 <= x2) && (y1 <= b2 && b2 <= y2) ) ||\\t\\n\\t\\t\\t        ( (a1 <= x1 && x1 <= a2) && (b1 <= y1 && y1 <= b2) ) ||\\n\\t\\t\\t        ( (a1 <= x2 && x2 <= a2) && (b1 <= y1 && y1 <= b2) ) ||\\n\\t\\t\\t        ( (a1 <= x1 && x1 <= a2) && (b1 <= y2 && y2 <= b2) ) ||\\n\\t\\t\\t        ( (a1 <= x2 && x1 <= a2) && (b1 <= y2 && y2 <= b2) );\\n\\t\\t},\\n\\t\\t/**\\n\\t\\t* @name Biltong.encloses\\n\\t\\t* @function\\n\\t\\t* @desc Calculates whether or not r2 is completely enclosed by r1.\\n\\t\\t* @param {Rectangle} r1 First rectangle, as a js object in the form `{x:.., y:.., w:.., h:..}`\\n\\t\\t* @param {Rectangle} r2 Second rectangle, as a js object in the form `{x:.., y:.., w:.., h:..}`\\n\\t\\t* @param {Boolean} [allowSharedEdges=false] If true, the concept of enclosure allows for one or more edges to be shared by the two rectangles.\\n\\t\\t* @return {Boolean} True if r1 encloses r2, false otherwise.\\n\\t\\t*/\\n\\t\\t_encloses = Biltong.encloses = function(r1, r2, allowSharedEdges) {\\n\\t\\t\\tvar x1 = r1.x, x2 = r1.x + r1.w, y1 = r1.y, y2 = r1.y + r1.h,\\n\\t\\t        a1 = r2.x, a2 = r2.x + r2.w, b1 = r2.y, b2 = r2.y + r2.h,\\n\\t\\t\\t\\tc = function(v1, v2, v3, v4) { return allowSharedEdges ? v1 <= v2 && v3>= v4 : v1 < v2 && v3 > v4; };\\n\\t\\t\\t\\t\\n\\t\\t\\treturn c(x1,a1,x2,a2) && c(y1,b1,y2,b2);\\n\\t\\t},\\n\\t\\t_segmentMultipliers = [null, [1, -1], [1, 1], [-1, 1], [-1, -1] ],\\n\\t\\t_inverseSegmentMultipliers = [null, [-1, -1], [-1, 1], [1, 1], [1, -1] ],\\n\\t\\t/**\\n\\t\\t* @name Biltong.pointOnLine\\n\\t\\t* @function\\n\\t\\t* @desc Calculates a point on the line from `fromPoint` to `toPoint` that is `distance` units along the length of the line.\\n\\t\\t* @param {Point} p1 First point, either as a 2 entry array or object with `left` and `top` properties.\\n\\t\\t* @param {Point} p2 Second point, either as a 2 entry array or object with `left` and `top` properties.\\n\\t\\t* @return {Point} Point on the line, in the form `{ x:..., y:... }`.\\n\\t\\t*/\\n\\t\\t_pointOnLine = Biltong.pointOnLine = function(fromPoint, toPoint, distance) {\\n\\t\\t    var m = _gradient(fromPoint, toPoint),\\n\\t\\t        s = _quadrant(fromPoint, toPoint),\\n\\t\\t        segmentMultiplier = distance > 0 ? _segmentMultipliers[s] : _inverseSegmentMultipliers[s],\\n\\t\\t        theta = Math.atan(m),\\n\\t\\t        y = Math.abs(distance * Math.sin(theta)) * segmentMultiplier[1],\\n\\t\\t        x =  Math.abs(distance * Math.cos(theta)) * segmentMultiplier[0];\\n\\t\\t    return { x:fromPoint.x + x, y:fromPoint.y + y };\\n\\t\\t},\\n\\t\\t/**\\n\\t\\t* @name Biltong.perpendicularLineTo\\n\\t\\t* @function\\n\\t\\t* @desc Calculates a line of length `length` that is perpendicular to the line from `fromPoint` to `toPoint` and passes through `toPoint`.\\n\\t\\t* @param {Point} p1 First point, either as a 2 entry array or object with `left` and `top` properties.\\n\\t\\t* @param {Point} p2 Second point, either as a 2 entry array or object with `left` and `top` properties.\\n\\t\\t* @return {Line} Perpendicular line, in the form `[ { x:..., y:... }, { x:..., y:... } ]`.\\n\\t\\t*/        \\n\\t\\t_perpendicularLineTo = Biltong.perpendicularLineTo = function(fromPoint, toPoint, length) {\\n\\t\\t    var m = _gradient(fromPoint, toPoint),\\n\\t\\t        theta2 = Math.atan(-1 / m),\\n\\t\\t        y =  length / 2 * Math.sin(theta2),\\n\\t\\t        x =  length / 2 * Math.cos(theta2);\\n\\t\\t    return [{x:toPoint.x + x, y:toPoint.y + y}, {x:toPoint.x - x, y:toPoint.y - y}];\\n\\t\\t};\\t\\n}).call(this);\\n;\\n(function () {\\n\\n    \\\"use strict\\\";\\n\\n    var root = this,\\n        Sniff = {\\n            android: navigator.userAgent.toLowerCase().indexOf(\\\"android\\\") > -1\\n        },\\n        matchesSelector = function (el, selector, ctx) {\\n            ctx = ctx || el.parentNode;\\n            var possibles = ctx.querySelectorAll(selector);\\n            for (var i = 0; i < possibles.length; i++) {\\n                if (possibles[i] === el) {\\n                    return true;\\n                }\\n            }\\n            return false;\\n        },\\n        _gel = function (el) {\\n            return (typeof el == \\\"string\\\" || el.constructor === String) ? document.getElementById(el) : el;\\n        },\\n        _t = function (e) {\\n            return e.srcElement || e.target;\\n        },\\n        _d = function (l, fn) {\\n            for (var i = 0, j = l.length; i < j; i++) {\\n                if (l[i] == fn) break;\\n            }\\n            if (i < l.length) l.splice(i, 1);\\n        },\\n        guid = 1,\\n    //\\n    // this function generates a guid for every handler, sets it on the handler, then adds\\n    // it to the associated object's map of handlers for the given event. this is what enables us\\n    // to unbind all events of some type, or all events (the second of which can be requested by the user,\\n    // but it also used by Mottle when an element is removed.)\\n        _store = function (obj, event, fn) {\\n            var g = guid++;\\n            obj.__ta = obj.__ta || {};\\n            obj.__ta[event] = obj.__ta[event] || {};\\n            // store each handler with a unique guid.\\n            obj.__ta[event][g] = fn;\\n            // set the guid on the handler.\\n            fn.__tauid = g;\\n            return g;\\n        },\\n        _unstore = function (obj, event, fn) {\\n            obj.__ta && obj.__ta[event] && delete obj.__ta[event][fn.__tauid];\\n            // a handler might have attached extra functions, so we unbind those too.\\n            if (fn.__taExtra) {\\n                for (var i = 0; i < fn.__taExtra.length; i++) {\\n                    _unbind(obj, fn.__taExtra[i][0], fn.__taExtra[i][1]);\\n                }\\n                fn.__taExtra.length = 0;\\n            }\\n            // a handler might have attached an unstore callback\\n            fn.__taUnstore && fn.__taUnstore();\\n        },\\n        _curryChildFilter = function (children, obj, fn, evt) {\\n            if (children == null) return fn;\\n            else {\\n                var c = children.split(\\\",\\\"),\\n                    _fn = function (e) {\\n                        _fn.__tauid = fn.__tauid;\\n                        var t = _t(e);\\n                        for (var i = 0; i < c.length; i++) {\\n                            if (matchesSelector(t, c[i], obj)) {\\n                                fn.apply(t, arguments);\\n                            }\\n                        }\\n                    };\\n                registerExtraFunction(fn, evt, _fn);\\n                return _fn;\\n            }\\n        },\\n    //\\n    // registers an 'extra' function on some event listener function we were given - a function that we\\n    // created and bound to the element as part of our housekeeping, and which we want to unbind and remove\\n    // whenever the given function is unbound.\\n        registerExtraFunction = function (fn, evt, newFn) {\\n            fn.__taExtra = fn.__taExtra || [];\\n            fn.__taExtra.push([evt, newFn]);\\n        },\\n        DefaultHandler = function (obj, evt, fn, children) {\\n            if (isTouchDevice && touchMap[evt]) {\\n                var tfn = _curryChildFilter(children, obj, fn, touchMap[evt]);\\n                _bind(obj, touchMap[evt], tfn , fn);\\n            }\\n            if (evt === \\\"focus\\\" && obj.getAttribute(\\\"tabindex\\\") == null) {\\n                obj.setAttribute(\\\"tabindex\\\", \\\"1\\\");\\n            }\\n            _bind(obj, evt, _curryChildFilter(children, obj, fn, evt), fn);\\n        },\\n        SmartClickHandler = function (obj, evt, fn, children) {\\n            if (obj.__taSmartClicks == null) {\\n                var down = function (e) {\\n                        obj.__tad = _pageLocation(e);\\n                    },\\n                    up = function (e) {\\n                        obj.__tau = _pageLocation(e);\\n                    },\\n                    click = function (e) {\\n                        if (obj.__tad && obj.__tau && obj.__tad[0] === obj.__tau[0] && obj.__tad[1] === obj.__tau[1]) {\\n                            for (var i = 0; i < obj.__taSmartClicks.length; i++)\\n                                obj.__taSmartClicks[i].apply(_t(e), [ e ]);\\n                        }\\n                    };\\n                DefaultHandler(obj, \\\"mousedown\\\", down, children);\\n                DefaultHandler(obj, \\\"mouseup\\\", up, children);\\n                DefaultHandler(obj, \\\"click\\\", click, children);\\n                obj.__taSmartClicks = [];\\n            }\\n\\n            // store in the list of callbacks\\n            obj.__taSmartClicks.push(fn);\\n            // the unstore function removes this function from the object's listener list for this type.\\n            fn.__taUnstore = function () {\\n                _d(obj.__taSmartClicks, fn);\\n            };\\n        },\\n        _tapProfiles = {\\n            \\\"tap\\\": {touches: 1, taps: 1},\\n            \\\"dbltap\\\": {touches: 1, taps: 2},\\n            \\\"contextmenu\\\": {touches: 2, taps: 1}\\n        },\\n        TapHandler = function (clickThreshold, dblClickThreshold) {\\n            return function (obj, evt, fn, children) {\\n                // if event is contextmenu, for devices which are mouse only, we want to\\n                // use the default bind.\\n                if (evt == \\\"contextmenu\\\" && isMouseDevice)\\n                    DefaultHandler(obj, evt, fn, children);\\n                else {\\n                    // the issue here is that this down handler gets registered only for the\\n                    // child nodes in the first registration. in fact it should be registered with\\n                    // no child selector and then on down we should cycle through the regustered\\n                    // functions to see if one of them matches. on mouseup we should execute ALL of\\n                    // the functions whose children are either null or match the element.\\n                    if (obj.__taTapHandler == null) {\\n                        var tt = obj.__taTapHandler = {\\n                            tap: [],\\n                            dbltap: [],\\n                            contextmenu: [],\\n                            down: false,\\n                            taps: 0,\\n                            downSelectors: []\\n                        };\\n                        var down = function (e) {\\n                                var target = e.srcElement || e.target;\\n                                for (var i = 0; i < tt.downSelectors.length; i++) {\\n                                    if (tt.downSelectors[i] == null || matchesSelector(target, tt.downSelectors[i], obj)) {\\n                                        tt.down = true;\\n                                        setTimeout(clearSingle, clickThreshold);\\n                                        setTimeout(clearDouble, dblClickThreshold);\\n                                        break; // we only need one match on mousedown\\n                                    }\\n                                }\\n                            },\\n                            up = function (e) {\\n                                if (tt.down) {\\n                                    var target = e.srcElement || e.target;\\n                                    tt.taps++;\\n                                    var tc = _touchCount(e);\\n                                    for (var eventId in _tapProfiles) {\\n                                        if (_tapProfiles.hasOwnProperty(eventId)) {\\n                                            var p = _tapProfiles[eventId];\\n                                            if (p.touches === tc && (p.taps === 1 || p.taps === tt.taps)) {\\n                                                for (var i = 0; i < tt[eventId].length; i++) {\\n                                                    if (tt[eventId][i][1] == null || matchesSelector(target, tt[eventId][i][1], obj))\\n                                                        tt[eventId][i][0].apply(_t(e), [ e ]);\\n                                                }\\n                                            }\\n                                        }\\n                                    }\\n                                }\\n                            },\\n                            clearSingle = function () {\\n                                tt.down = false;\\n                            },\\n                            clearDouble = function () {\\n                                tt.taps = 0;\\n                            };\\n\\n                        DefaultHandler(obj, \\\"mousedown\\\", down/*, children*/);\\n                        DefaultHandler(obj, \\\"mouseup\\\", up/*, children*/);\\n                    }\\n                    // add this child selector (it can be null, that's fine).\\n                    obj.__taTapHandler.downSelectors.push(children);\\n\\n                    obj.__taTapHandler[evt].push([fn, children]);\\n                    // the unstore function removes this function from the object's listener list for this type.\\n                    fn.__taUnstore = function () {\\n                        _d(obj.__taTapHandler[evt], fn);\\n                    };\\n                }\\n            };\\n        },\\n        meeHelper = function (type, evt, obj, target) {\\n            for (var i in obj.__tamee[type]) {\\n                if (obj.__tamee[type].hasOwnProperty(i)) {\\n                    obj.__tamee[type][i].apply(target, [ evt ]);\\n                }\\n            }\\n        },\\n        MouseEnterExitHandler = function () {\\n            var activeElements = [];\\n            return function (obj, evt, fn, children) {\\n                if (!obj.__tamee) {\\n                    // __tamee holds a flag saying whether the mouse is currently \\\"in\\\" the element, and a list of\\n                    // both mouseenter and mouseexit functions.\\n                    obj.__tamee = { over: false, mouseenter: [], mouseexit: [] };\\n                    // register over and out functions\\n                    var over = function (e) {\\n                            var t = _t(e);\\n                            if ((children == null && (t == obj && !obj.__tamee.over)) || (matchesSelector(t, children, obj) && (t.__tamee == null || !t.__tamee.over))) {\\n                                meeHelper(\\\"mouseenter\\\", e, obj, t);\\n                                t.__tamee = t.__tamee || {};\\n                                t.__tamee.over = true;\\n                                activeElements.push(t);\\n                            }\\n                        },\\n                        out = function (e) {\\n                            var t = _t(e);\\n                            // is the current target one of the activeElements? and is the\\n                            // related target NOT a descendant of it?\\n                            for (var i = 0; i < activeElements.length; i++) {\\n                                if (t == activeElements[i] && !matchesSelector((e.relatedTarget || e.toElement), \\\"*\\\", t)) {\\n                                    t.__tamee.over = false;\\n                                    activeElements.splice(i, 1);\\n                                    meeHelper(\\\"mouseexit\\\", e, obj, t);\\n                                }\\n                            }\\n                        };\\n\\n                    _bind(obj, \\\"mouseover\\\", _curryChildFilter(children, obj, over, \\\"mouseover\\\"), over);\\n                    _bind(obj, \\\"mouseout\\\", _curryChildFilter(children, obj, out, \\\"mouseout\\\"), out);\\n                }\\n\\n                fn.__taUnstore = function () {\\n                    delete obj.__tamee[evt][fn.__tauid];\\n                };\\n\\n                _store(obj, evt, fn);\\n                obj.__tamee[evt][fn.__tauid] = fn;\\n            };\\n        },\\n        isTouchDevice = \\\"ontouchstart\\\" in document.documentElement,\\n        isMouseDevice = \\\"onmousedown\\\" in document.documentElement,\\n        touchMap = { \\\"mousedown\\\": \\\"touchstart\\\", \\\"mouseup\\\": \\\"touchend\\\", \\\"mousemove\\\": \\\"touchmove\\\" },\\n        touchstart = \\\"touchstart\\\", touchend = \\\"touchend\\\", touchmove = \\\"touchmove\\\",\\n        iev = (function () {\\n            var rv = -1;\\n            if (navigator.appName == 'Microsoft Internet Explorer') {\\n                var ua = navigator.userAgent,\\n                    re = new RegExp(\\\"MSIE ([0-9]{1,}[\\\\.0-9]{0,})\\\");\\n                if (re.exec(ua) != null)\\n                    rv = parseFloat(RegExp.$1);\\n            }\\n            return rv;\\n        })(),\\n        isIELT9 = iev > -1 && iev < 9,\\n        _genLoc = function (e, prefix) {\\n            if (e == null) return [ 0, 0 ];\\n            var ts = _touches(e), t = _getTouch(ts, 0);\\n            return [t[prefix + \\\"X\\\"], t[prefix + \\\"Y\\\"]];\\n        },\\n        _pageLocation = function (e) {\\n            if (e == null) return [ 0, 0 ];\\n            if (isIELT9) {\\n                return [ e.clientX + document.documentElement.scrollLeft, e.clientY + document.documentElement.scrollTop ];\\n            }\\n            else {\\n                return _genLoc(e, \\\"page\\\");\\n            }\\n        },\\n        _screenLocation = function (e) {\\n            return _genLoc(e, \\\"screen\\\");\\n        },\\n        _clientLocation = function (e) {\\n            return _genLoc(e, \\\"client\\\");\\n        },\\n        _getTouch = function (touches, idx) {\\n            return touches.item ? touches.item(idx) : touches[idx];\\n        },\\n        _touches = function (e) {\\n            return e.touches && e.touches.length > 0 ? e.touches :\\n                    e.changedTouches && e.changedTouches.length > 0 ? e.changedTouches :\\n                    e.targetTouches && e.targetTouches.length > 0 ? e.targetTouches :\\n                [ e ];\\n        },\\n        _touchCount = function (e) {\\n            return _touches(e).length;\\n        },\\n    //http://www.quirksmode.org/blog/archives/2005/10/_and_the_winner_1.html\\n        _bind = function (obj, type, fn, originalFn) {\\n            _store(obj, type, fn);\\n            originalFn.__tauid = fn.__tauid;\\n            if (obj.addEventListener)\\n                obj.addEventListener(type, fn, false);\\n            else if (obj.attachEvent) {\\n                var key = type + fn.__tauid;\\n                obj[\\\"e\\\" + key] = fn;\\n                // TODO look at replacing with .call(..)\\n                obj[key] = function () {\\n                    obj[\\\"e\\\" + key] && obj[\\\"e\\\" + key](window.event);\\n                };\\n                obj.attachEvent(\\\"on\\\" + type, obj[key]);\\n            }\\n        },\\n        _unbind = function (obj, type, fn) {\\n            if (fn == null) return;\\n            _each(obj, function () {\\n                var _el = _gel(this);\\n                _unstore(_el, type, fn);\\n                // it has been bound if there is a tauid. otherwise it was not bound and we can ignore it.\\n                if (fn.__tauid != null) {\\n                    if (_el.removeEventListener) {\\n                        _el.removeEventListener(type, fn, false);\\n                        if (isTouchDevice && touchMap[type]) _el.removeEventListener(touchMap[type], fn, false);\\n                    }\\n                    else if (this.detachEvent) {\\n                        var key = type + fn.__tauid;\\n                        _el[key] && _el.detachEvent(\\\"on\\\" + type, _el[key]);\\n                        _el[key] = null;\\n                        _el[\\\"e\\\" + key] = null;\\n                    }\\n                }\\n\\n                // if a touch event was also registered, deregister now.\\n                if (fn.__taTouchProxy) {\\n                    _unbind(obj, fn.__taTouchProxy[1], fn.__taTouchProxy[0]);\\n                }\\n            });\\n        },\\n        _each = function (obj, fn) {\\n            if (obj == null) return;\\n            // if a list (or list-like), use it. if a string, get a list\\n            // by running the string through querySelectorAll. else, assume\\n            // it's an Element.\\n            // obj.top is \\\"unknown\\\" in IE8.\\n            obj = (typeof Window !== \\\"undefined\\\" && (typeof obj.top !== \\\"unknown\\\" && obj == obj.top)) ? [ obj ] :\\n                    (typeof obj !== \\\"string\\\") && (obj.tagName == null && obj.length != null) ? obj :\\n                    typeof obj === \\\"string\\\" ? document.querySelectorAll(obj)\\n                : [ obj ];\\n\\n            for (var i = 0; i < obj.length; i++)\\n                fn.apply(obj[i]);\\n        };\\n\\n    /**\\n     * Mottle offers support for abstracting out the differences\\n     * between touch and mouse devices, plus \\\"smart click\\\" functionality\\n     * (don't fire click if the mouse has moved between mousedown and mouseup),\\n     * and synthesized click/tap events.\\n     * @class Mottle\\n     * @constructor\\n     * @param {Object} params Constructor params\\n     * @param {Number} [params.clickThreshold=150] Threshold, in milliseconds beyond which a touchstart followed by a touchend is not considered to be a click.\\n     * @param {Number} [params.dblClickThreshold=350] Threshold, in milliseconds beyond which two successive tap events are not considered to be a click.\\n     * @param {Boolean} [params.smartClicks=false] If true, won't fire click events if the mouse has moved between mousedown and mouseup. Note that this functionality\\n     * requires that Mottle consume the mousedown event, and so may not be viable in all use cases.\\n     */\\n    root.Mottle = function (params) {\\n        params = params || {};\\n        var clickThreshold = params.clickThreshold || 150,\\n            dblClickThreshold = params.dblClickThreshold || 350,\\n            mouseEnterExitHandler = new MouseEnterExitHandler(),\\n            tapHandler = new TapHandler(clickThreshold, dblClickThreshold),\\n            _smartClicks = params.smartClicks,\\n            _doBind = function (obj, evt, fn, children) {\\n                if (fn == null) return;\\n                _each(obj, function () {\\n                    var _el = _gel(this);\\n                    if (_smartClicks && evt === \\\"click\\\")\\n                        SmartClickHandler(_el, evt, fn, children);\\n                    else if (evt === \\\"tap\\\" || evt === \\\"dbltap\\\" || evt === \\\"contextmenu\\\") {\\n                        tapHandler(_el, evt, fn, children);\\n                    }\\n                    else if (evt === \\\"mouseenter\\\" || evt == \\\"mouseexit\\\")\\n                        mouseEnterExitHandler(_el, evt, fn, children);\\n                    else\\n                        DefaultHandler(_el, evt, fn, children);\\n                });\\n            };\\n\\n        /**\\n         * Removes an element from the DOM, and deregisters all event handlers for it. You should use this\\n         * to ensure you don't leak memory.\\n         * @method remove\\n         * @param {String|Element} el Element, or id of the element, to remove.\\n         * @return {Mottle} The current Mottle instance; you can chain this method.\\n         */\\n        this.remove = function (el) {\\n            _each(el, function () {\\n                var _el = _gel(this);\\n                if (_el.__ta) {\\n                    for (var evt in _el.__ta) {\\n                        if (_el.__ta.hasOwnProperty(evt)) {\\n                            for (var h in _el.__ta[evt]) {\\n                                if (_el.__ta[evt].hasOwnProperty(h))\\n                                    _unbind(_el, evt, _el.__ta[evt][h]);\\n                            }\\n                        }\\n                    }\\n                }\\n                _el.parentNode && _el.parentNode.removeChild(_el);\\n            });\\n            return this;\\n        };\\n\\n        /**\\n         * Register an event handler, optionally as a delegate for some set of descendant elements. Note\\n         * that this method takes either 3 or 4 arguments - if you supply 3 arguments it is assumed you have\\n         * omitted the `children` parameter, and that the event handler should be bound directly to the given element.\\n         * @method on\\n         * @param {Element[]|Element|String} el Either an Element, or a CSS spec for a list of elements, or an array of Elements.\\n         * @param {String} [children] Comma-delimited list of selectors identifying allowed children.\\n         * @param {String} event Event ID.\\n         * @param {Function} fn Event handler function.\\n         * @return {Mottle} The current Mottle instance; you can chain this method.\\n         */\\n        this.on = function (el, event, children, fn) {\\n            var _el = arguments[0],\\n                _c = arguments.length == 4 ? arguments[2] : null,\\n                _e = arguments[1],\\n                _f = arguments[arguments.length - 1];\\n\\n            _doBind(_el, _e, _f, _c);\\n            return this;\\n        };\\n\\n        /**\\n         * Cancel delegate event handling for the given function. Note that unlike with 'on' you do not supply\\n         * a list of child selectors here: it removes event delegation from all of the child selectors for which the\\n         * given function was registered (if any).\\n         * @method off\\n         * @param {Element[]|Element|String} el Element - or ID of element - from which to remove event listener.\\n         * @param {String} event Event ID.\\n         * @param {Function} fn Event handler function.\\n         * @return {Mottle} The current Mottle instance; you can chain this method.\\n         */\\n        this.off = function (el, event, fn) {\\n            _unbind(el, event, fn);\\n            return this;\\n        };\\n\\n        /**\\n         * Triggers some event for a given element.\\n         * @method trigger\\n         * @param {Element} el Element for which to trigger the event.\\n         * @param {String} event Event ID.\\n         * @param {Event} originalEvent The original event. Should be optional of course, but currently is not, due\\n         * to the jsPlumb use case that caused this method to be added.\\n         * @param {Object} [payload] Optional object to set as `payload` on the generated event; useful for message passing.\\n         * @return {Mottle} The current Mottle instance; you can chain this method.\\n         */\\n        this.trigger = function (el, event, originalEvent, payload) {\\n            // MouseEvent undefined in old IE; that's how we know it's a mouse event.  A fine Microsoft paradox.\\n            var originalIsMouse = isMouseDevice && (typeof MouseEvent === \\\"undefined\\\" || originalEvent == null || originalEvent.constructor === MouseEvent);\\n\\n            var eventToBind = (isTouchDevice && !isMouseDevice && touchMap[event]) ? touchMap[event] : event,\\n                bindingAMouseEvent = !(isTouchDevice && !isMouseDevice && touchMap[event]);\\n\\n            var pl = _pageLocation(originalEvent), sl = _screenLocation(originalEvent), cl = _clientLocation(originalEvent);\\n            _each(el, function () {\\n                var _el = _gel(this), evt;\\n                originalEvent = originalEvent || {\\n                    screenX: sl[0],\\n                    screenY: sl[1],\\n                    clientX: cl[0],\\n                    clientY: cl[1]\\n                };\\n\\n                var _decorate = function (_evt) {\\n                    if (payload) _evt.payload = payload;\\n                };\\n\\n                var eventGenerators = {\\n                    \\\"TouchEvent\\\": function (evt) {\\n                        var touch = document.createTouch(window, _el, 0, pl[0], pl[1],\\n                            sl[0], sl[1],\\n                            cl[0], cl[1],\\n                            0, 0, 0, 0);\\n\\n                        // https://gist.github.com/sstephenson/448808\\n                        var touches = document.createTouchList(touch);\\n                        var targetTouches = document.createTouchList(touch);\\n                        var changedTouches = document.createTouchList(touch);\\n                        evt.initTouchEvent(eventToBind, true, true, window, null, sl[0], sl[1],\\n                            cl[0], cl[1], false, false, false, false,\\n                            touches, targetTouches, changedTouches, 1, 0);\\n                    },\\n                    \\\"MouseEvents\\\": function (evt) {\\n                        evt.initMouseEvent(eventToBind, true, true, window, 0,\\n                            sl[0], sl[1],\\n                            cl[0], cl[1],\\n                            false, false, false, false, 1, _el);\\n\\n                        if (Sniff.android) {\\n                            // Android's touch events are not standard.\\n                            var t = document.createTouch(window, _el, 0, pl[0], pl[1],\\n                                sl[0], sl[1],\\n                                cl[0], cl[1],\\n                                0, 0, 0, 0);\\n\\n                            evt.touches = evt.targetTouches = evt.changedTouches = document.createTouchList(t);\\n                        }\\n                    }\\n                };\\n\\n                if (document.createEvent) {\\n\\n                    var ite = !bindingAMouseEvent && !originalIsMouse && (isTouchDevice && touchMap[event] && !Sniff.android),\\n                        evtName = ite ? \\\"TouchEvent\\\" : \\\"MouseEvents\\\";\\n\\n                    evt = document.createEvent(evtName);\\n                    eventGenerators[evtName](evt);\\n                    _decorate(evt);\\n                    _el.dispatchEvent(evt);\\n                }\\n                else if (document.createEventObject) {\\n                    evt = document.createEventObject();\\n                    evt.eventType = evt.eventName = eventToBind;\\n                    evt.screenX = sl[0];\\n                    evt.screenY = sl[1];\\n                    evt.clientX = cl[0];\\n                    evt.clientY = cl[1];\\n                    _decorate(evt);\\n                    _el.fireEvent('on' + eventToBind, evt);\\n                }\\n            });\\n            return this;\\n        }\\n    };\\n\\n    /**\\n     * Static method to assist in 'consuming' an element: uses `stopPropagation` where available, or sets\\n     * `e.returnValue=false` where it is not.\\n     * @method Mottle.consume\\n     * @param {Event} e Event to consume\\n     * @param {Boolean} [doNotPreventDefault=false] If true, does not call `preventDefault()` on the event.\\n     */\\n    root.Mottle.consume = function (e, doNotPreventDefault) {\\n        if (e.stopPropagation)\\n            e.stopPropagation();\\n        else\\n            e.returnValue = false;\\n\\n        if (!doNotPreventDefault && e.preventDefault)\\n            e.preventDefault();\\n    };\\n\\n    /**\\n     * Gets the page location corresponding to the given event. For touch events this means get the page location of the first touch.\\n     * @method Mottle.pageLocation\\n     * @param {Event} e Event to get page location for.\\n     * @return {Integer[]} [left, top] for the given event.\\n     */\\n    root.Mottle.pageLocation = _pageLocation;\\n\\n    /**\\n     * Forces touch events to be turned \\\"on\\\". Useful for testing: even if you don't have a touch device, you can still\\n     * trigger a touch event when this is switched on and it will be captured and acted on.\\n     * @method setForceTouchEvents\\n     * @param {Boolean} value If true, force touch events to be on.\\n     */\\n    root.Mottle.setForceTouchEvents = function (value) {\\n        isTouchDevice = value;\\n    };\\n\\n    /**\\n     * Forces mouse events to be turned \\\"on\\\". Useful for testing: even if you don't have a mouse, you can still\\n     * trigger a mouse event when this is switched on and it will be captured and acted on.\\n     * @method setForceMouseEvents\\n     * @param {Boolean} value If true, force mouse events to be on.\\n     */\\n    root.Mottle.setForceMouseEvents = function (value) {\\n        isMouseDevice = value;\\n    };\\n\\n}).call(this);\\n\\n/**\\n drag/drop functionality for use with jsPlumb but with\\n no knowledge of jsPlumb. supports multiple scopes (separated by whitespace), dragging\\n multiple elements, constrain to parent, drop filters, drag start filters, custom\\n css classes.\\n\\n a lot of the functionality of this script is expected to be plugged in:\\n\\n addClass\\n removeClass\\n\\n addEvent\\n removeEvent\\n\\n getPosition\\n setPosition\\n getSize\\n\\n indexOf\\n intersects\\n\\n the name came from here:\\n\\n http://mrsharpoblunto.github.io/foswig.js/\\n\\n copyright 2015 jsPlumb\\n */\\n\\n;(function() {\\n\\n    \\\"use strict\\\";\\n\\n    var _suggest = function(list, item, head) {\\n        if (list.indexOf(item) === -1) {\\n            head ? list.unshift(item) : list.push(item);\\n            return true;\\n        }\\n        return false;\\n    };\\n\\n    var _vanquish = function(list, item) {\\n        var idx = list.indexOf(item);\\n        if (idx != -1) list.splice(idx, 1);\\n    };\\n\\n    var _difference = function(l1, l2) {\\n        var d = [];\\n        for (var i = 0; i < l1.length; i++) {\\n            if (l2.indexOf(l1[i]) == -1)\\n                d.push(l1[i]);\\n        }\\n        return d;\\n    };\\n\\n    var _isString = function(f) {\\n        return f == null ? false : (typeof f === \\\"string\\\" || f.constructor == String);\\n    };\\n\\n    var getOffsetRect = function (elem) {\\n        // (1)\\n        var box = elem.getBoundingClientRect(),\\n            body = document.body,\\n            docElem = document.documentElement,\\n        // (2)\\n            scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop,\\n            scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft,\\n        // (3)\\n            clientTop = docElem.clientTop || body.clientTop || 0,\\n            clientLeft = docElem.clientLeft || body.clientLeft || 0,\\n        // (4)\\n            top  = box.top +  scrollTop - clientTop,\\n            left = box.left + scrollLeft - clientLeft;\\n\\n        return { top: Math.round(top), left: Math.round(left) };\\n    };\\n\\n    var matchesSelector = function(el, selector, ctx) {\\n        ctx = ctx || el.parentNode;\\n        var possibles = ctx.querySelectorAll(selector);\\n        for (var i = 0; i < possibles.length; i++) {\\n            if (possibles[i] === el)\\n                return true;\\n        }\\n        return false;\\n    };\\n\\n    var iev = (function() {\\n            var rv = -1;\\n            if (navigator.appName == 'Microsoft Internet Explorer') {\\n                var ua = navigator.userAgent,\\n                    re = new RegExp(\\\"MSIE ([0-9]{1,}[\\\\.0-9]{0,})\\\");\\n                if (re.exec(ua) != null)\\n                    rv = parseFloat(RegExp.$1);\\n            }\\n            return rv;\\n        })(),\\n        DEFAULT_GRID_X = 50,\\n        DEFAULT_GRID_Y = 50,\\n        isIELT9 = iev > -1 && iev < 9,\\n        isIE9 = iev == 9,\\n        _pl = function(e) {\\n            if (isIELT9) {\\n                return [ e.clientX + document.documentElement.scrollLeft, e.clientY + document.documentElement.scrollTop ];\\n            }\\n            else {\\n                var ts = _touches(e), t = _getTouch(ts, 0);\\n                // for IE9 pageX might be null if the event was synthesized. We try for pageX/pageY first,\\n                // falling back to clientX/clientY if necessary. In every other browser we want to use pageX/pageY.\\n                return isIE9 ? [t.pageX || t.clientX, t.pageY || t.clientY] : [t.pageX, t.pageY];\\n            }\\n        },\\n        _getTouch = function(touches, idx) { return touches.item ? touches.item(idx) : touches[idx]; },\\n        _touches = function(e) {\\n            return e.touches && e.touches.length > 0 ? e.touches :\\n                    e.changedTouches && e.changedTouches.length > 0 ? e.changedTouches :\\n                    e.targetTouches && e.targetTouches.length > 0 ? e.targetTouches :\\n                [ e ];\\n        },\\n        _classes = {\\n            draggable:\\\"katavorio-draggable\\\",    // draggable elements\\n            droppable:\\\"katavorio-droppable\\\",    // droppable elements\\n            drag : \\\"katavorio-drag\\\",            // elements currently being dragged\\n            selected:\\\"katavorio-drag-selected\\\", // elements in current drag selection\\n            active : \\\"katavorio-drag-active\\\",   // droppables that are targets of a currently dragged element\\n            hover : \\\"katavorio-drag-hover\\\",     // droppables over which a matching drag element is hovering\\n            noSelect : \\\"katavorio-drag-no-select\\\" // added to the body to provide a hook to suppress text selection\\n        },\\n        _defaultScope = \\\"katavorio-drag-scope\\\",\\n        _events = [ \\\"stop\\\", \\\"start\\\", \\\"drag\\\", \\\"drop\\\", \\\"over\\\", \\\"out\\\", \\\"beforeStart\\\" ],\\n        _devNull = function() {},\\n        _true = function() { return true; },\\n        _foreach = function(l, fn, from) {\\n            for (var i = 0; i < l.length; i++) {\\n                if (l[i] != from)\\n                    fn(l[i]);\\n            }\\n        },\\n        _setDroppablesActive = function(dd, val, andHover, drag) {\\n            _foreach(dd, function(e) {\\n                e.setActive(val);\\n                if (val) e.updatePosition();\\n                if (andHover) e.setHover(drag, val);\\n            });\\n        },\\n        _each = function(obj, fn) {\\n            if (obj == null) return;\\n            obj = !_isString(obj) && (obj.tagName == null && obj.length != null) ? obj : [ obj ];\\n            for (var i = 0; i < obj.length; i++)\\n                fn.apply(obj[i], [ obj[i] ]);\\n        },\\n        _consume = function(e) {\\n            if (e.stopPropagation) {\\n                e.stopPropagation();\\n                e.preventDefault();\\n            }\\n            else {\\n                e.returnValue = false;\\n            }\\n        },\\n        _defaultInputFilterSelector = \\\"input,textarea,select,button,option\\\",\\n    //\\n    // filters out events on all input elements, like textarea, checkbox, input, select.\\n        _inputFilter = function(e, el, _katavorio) {\\n            var t = e.srcElement || e.target;\\n            return !matchesSelector(t, _katavorio.getInputFilterSelector(), el);\\n        };\\n\\n    var Super = function(el, params, css, scope) {\\n        this.params = params || {};\\n        this.el = el;\\n        this.params.addClass(this.el, this._class);\\n        this.uuid = _uuid();\\n        var enabled = true;\\n        this.setEnabled = function(e) { enabled = e; };\\n        this.isEnabled = function() { return enabled; };\\n        this.toggleEnabled = function() { enabled = !enabled; };\\n        this.setScope = function(scopes) {\\n            this.scopes = scopes ? scopes.split(/\\\\s+/) : [ scope ];\\n        };\\n        this.addScope = function(scopes) {\\n            var m = {};\\n            _each(this.scopes, function(s) { m[s] = true;});\\n            _each(scopes ? scopes.split(/\\\\s+/) : [], function(s) { m[s] = true;});\\n            this.scopes = [];\\n            for (var i in m) this.scopes.push(i);\\n        };\\n        this.removeScope = function(scopes) {\\n            var m = {};\\n            _each(this.scopes, function(s) { m[s] = true;});\\n            _each(scopes ? scopes.split(/\\\\s+/) : [], function(s) { delete m[s];});\\n            this.scopes = [];\\n            for (var i in m) this.scopes.push(i);\\n        };\\n        this.toggleScope = function(scopes) {\\n            var m = {};\\n            _each(this.scopes, function(s) { m[s] = true;});\\n            _each(scopes ? scopes.split(/\\\\s+/) : [], function(s) {\\n                if (m[s]) delete m[s];\\n                else m[s] = true;\\n            });\\n            this.scopes = [];\\n            for (var i in m) this.scopes.push(i);\\n        };\\n        this.setScope(params.scope);\\n        this.k = params.katavorio;\\n        return params.katavorio;\\n    };\\n\\n    var Drag = function(el, params, css, scope) {\\n        this._class = css.draggable;\\n        var k = Super.apply(this, arguments);\\n        this.rightButtonCanDrag = this.params.rightButtonCanDrag;\\n        var downAt = [0,0], posAtDown = null, moving = false,\\n            consumeStartEvent = this.params.consumeStartEvent !== false,\\n            dragEl = this.el,\\n            clone = this.params.clone,\\n            scroll = this.params.scroll,\\n            _multipleDrop = params.multipleDrop !== false;\\n\\n        var snapThreshold = params.snapThreshold || 5,\\n            _snap = function(pos, x, y, thresholdX, thresholdY) {\\n                thresholdX = thresholdX || snapThreshold;\\n                thresholdY = thresholdY || snapThreshold;\\n                var _dx = Math.floor(pos[0] / x),\\n                    _dxl = x * _dx,\\n                    _dxt = _dxl + x,\\n                    _x = Math.abs(pos[0] - _dxl) <= thresholdX ? _dxl : Math.abs(_dxt - pos[0]) <= thresholdX ? _dxt : pos[0];\\n\\n                var _dy = Math.floor(pos[1] / y),\\n                    _dyl = y * _dy,\\n                    _dyt = _dyl + y,\\n                    _y = Math.abs(pos[1] - _dyl) <= thresholdY ? _dyl : Math.abs(_dyt - pos[1]) <= thresholdY ? _dyt : pos[1];\\n\\n                return [ _x, _y];\\n            };\\n\\n        this.posses = [];\\n        this.posseRoles = {};\\n\\n        this.toGrid = function(pos) {\\n            if (this.params.grid == null) {\\n                return pos;\\n            }\\n            else {\\n                return _snap(pos, this.params.grid[0], this.params.grid[1]);\\n            }\\n        };\\n\\n        this.snap = function(x, y) {\\n            if (dragEl == null) return;\\n            x = x || (this.params.grid ? this.params.grid[0] : DEFAULT_GRID_X);\\n            y = y || (this.params.grid ? this.params.grid[1] : DEFAULT_GRID_Y);\\n            var p = this.params.getPosition(dragEl);\\n            this.params.setPosition(dragEl, _snap(p, x, y, x, y));\\n        };\\n\\n        this.constrain = typeof this.params.constrain === \\\"function\\\" ? this.params.constrain  : (this.params.constrain || this.params.containment) ? function(pos) {\\n            return [\\n                Math.max(0, Math.min(constrainRect.w - this.size[0], pos[0])),\\n                Math.max(0, Math.min(constrainRect.h - this.size[1], pos[1]))\\n            ];\\n        } : function(pos) { return pos; };\\n\\n        var _assignId = function(obj) {\\n                if (typeof obj == \\\"function\\\") {\\n                    obj._katavorioId = _uuid();\\n                    return obj._katavorioId;\\n                } else {\\n                    return obj;\\n                }\\n            },\\n        // a map of { spec -> [ fn, exclusion ] } entries.\\n            _filters = {},\\n            _testFilter = function(e) {\\n                for (var key in _filters) {\\n                    var f = _filters[key];\\n                    var rv = f[0](e);\\n                    if (f[1]) rv = !rv;\\n                    if (!rv) return false;\\n                }\\n                return true;\\n            },\\n            _setFilter = this.setFilter = function(f, _exclude) {\\n                if (f) {\\n                    var key = _assignId(f);\\n                    _filters[key] = [\\n                        function(e) {\\n                            var t = e.srcElement || e.target, m;\\n                            if (_isString(f)) {\\n                                m = matchesSelector(t, f, el);\\n                            }\\n                            else if (typeof f === \\\"function\\\") {\\n                                m = f(e, el);\\n                            }\\n                            return m;\\n                        },\\n                            _exclude !== false\\n                    ];\\n\\n                }\\n            },\\n            _addFilter = this.addFilter = _setFilter,\\n            _removeFilter = this.removeFilter = function(f) {\\n                var key = typeof f == \\\"function\\\" ? f._katavorioId : f;\\n                delete _filters[key];\\n            };\\n\\n        this.clearAllFilters = function() {\\n            _filters = {};\\n        };\\n\\n        this.canDrag = this.params.canDrag || _true;\\n\\n        var constrainRect,\\n            matchingDroppables = [], intersectingDroppables = [];\\n\\n        this.downListener = function(e) {\\n            var isNotRightClick = this.rightButtonCanDrag || (e.which !== 3 && e.button !== 2);\\n            if (isNotRightClick && this.isEnabled() && this.canDrag()) {\\n                var _f =  _testFilter(e) && _inputFilter(e, this.el, this.k);\\n                if (_f) {\\n                    if (!clone)\\n                        dragEl = this.el;\\n                    else {\\n                        dragEl = this.el.cloneNode(true);\\n                        dragEl.setAttribute(\\\"id\\\", null);\\n                        dragEl.style.position = \\\"absolute\\\";\\n                        // the clone node is added to the body; getOffsetRect gives us a value\\n                        // relative to the body.\\n                        var b = getOffsetRect(this.el);\\n                        dragEl.style.left = b.left + \\\"px\\\";\\n                        dragEl.style.top = b.top + \\\"px\\\";\\n                        document.body.appendChild(dragEl);\\n                    }\\n                    consumeStartEvent && _consume(e);\\n                    downAt = _pl(e);\\n                    //\\n                    this.params.bind(document, \\\"mousemove\\\", this.moveListener);\\n                    this.params.bind(document, \\\"mouseup\\\", this.upListener);\\n                    k.markSelection(this);\\n                    k.markPosses(this);\\n                    this.params.addClass(document.body, css.noSelect);\\n                    _dispatch(\\\"beforeStart\\\", {el:this.el, pos:posAtDown, e:e, drag:this});\\n                }\\n                else if (this.params.consumeFilteredEvents) {\\n                    _consume(e);\\n                }\\n            }\\n        }.bind(this);\\n\\n        this.moveListener = function(e) {\\n            if (downAt) {\\n                if (!moving) {\\n                    var _continue = _dispatch(\\\"start\\\", {el:this.el, pos:posAtDown, e:e, drag:this});\\n                    if (_continue !== false) {\\n                        if (!downAt) return;\\n                        this.mark(true);\\n                        moving = true;\\n                    }\\n                }\\n\\n                // it is possible that the start event caused the drag to be aborted. So we check\\n                // again that we are currently dragging.\\n                if (downAt) {\\n                    intersectingDroppables.length = 0;\\n                    var pos = _pl(e), dx = pos[0] - downAt[0], dy = pos[1] - downAt[1],\\n                        z = this.params.ignoreZoom ? 1 : k.getZoom();\\n                    dx /= z;\\n                    dy /= z;\\n                    this.moveBy(dx, dy, e);\\n                    k.updateSelection(dx, dy, this);\\n                    k.updatePosses(dx, dy, this);\\n                }\\n            }\\n        }.bind(this);\\n\\n        this.upListener = function(e) {\\n            if (downAt) {\\n                downAt = null;\\n                this.params.unbind(document, \\\"mousemove\\\", this.moveListener);\\n                this.params.unbind(document, \\\"mouseup\\\", this.upListener);\\n                this.params.removeClass(document.body, css.noSelect);\\n                this.unmark(e);\\n                k.unmarkSelection(this, e);\\n                k.unmarkPosses(this, e);\\n                this.stop(e);\\n                k.notifySelectionDragStop(this, e);\\n                k.notifyPosseDragStop(this, e);\\n                moving = false;\\n                if (clone) {\\n                    dragEl && dragEl.parentNode && dragEl.parentNode.removeChild(dragEl);\\n                    dragEl = null;\\n                }\\n            }\\n        }.bind(this);\\n\\n        this.getFilters = function() { return _filters; };\\n\\n        this.abort = function() {\\n            if (downAt != null)\\n                this.upListener();\\n        };\\n\\n        this.getDragElement = function() {\\n            return dragEl || this.el;\\n        };\\n\\n        var listeners = {\\\"start\\\":[], \\\"drag\\\":[], \\\"stop\\\":[], \\\"over\\\":[], \\\"out\\\":[], \\\"beforeStart\\\":[] };\\n        if (params.events.start) listeners.start.push(params.events.start);\\n        if (params.events.beforeStart) listeners.beforeStart.push(params.events.beforeStart);\\n        if (params.events.stop) listeners.stop.push(params.events.stop);\\n        if (params.events.drag) listeners.drag.push(params.events.drag);\\n\\n        this.on = function(evt, fn) {\\n            if (listeners[evt]) listeners[evt].push(fn);\\n        };\\n\\n        var _dispatch = function(evt, value) {\\n            if (listeners[evt]) {\\n                for (var i = 0; i < listeners[evt].length; i++) {\\n                    try {\\n                        listeners[evt][i](value);\\n                    }\\n                    catch (e) { }\\n                }\\n            }\\n        };\\n\\n        this.notifyStart = function(e) {\\n            _dispatch(\\\"start\\\", {el:this.el, pos:this.params.getPosition(dragEl), e:e, drag:this});\\n        };\\n\\n        this.stop = function(e, force) {\\n            if (force || moving) {\\n                var positions = [],\\n                    sel = k.getSelection(),\\n                    dPos = this.params.getPosition(dragEl);\\n\\n                if (sel.length > 1) {\\n                    for (var i = 0; i < sel.length; i++) {\\n                        var p = this.params.getPosition(sel[i].el);\\n                        positions.push([ sel[i].el, { left: p[0], top: p[1] }, sel[i] ]);\\n                    }\\n                }\\n                else {\\n                    positions.push([ dragEl, {left:dPos[0], top:dPos[1]}, this ]);\\n                }\\n\\n                _dispatch(\\\"stop\\\", {\\n                    el: dragEl, pos: dPos, e: e, drag: this, selection:positions\\n                });\\n            }\\n        };\\n\\n        this.mark = function(andNotify) {\\n            posAtDown = this.params.getPosition(dragEl);\\n            this.size = this.params.getSize(dragEl);\\n            matchingDroppables = k.getMatchingDroppables(this);\\n            _setDroppablesActive(matchingDroppables, true, false, this);\\n            this.params.addClass(dragEl, this.params.dragClass || css.drag);\\n            if (this.params.constrain || this.params.containment) {\\n                var cs = this.params.getSize(dragEl.parentNode);\\n                constrainRect = { w:cs[0], h:cs[1] };\\n            }\\n            if (andNotify) {\\n                k.notifySelectionDragStart(this);\\n            }\\n        };\\n        this.unmark = function(e, doNotCheckDroppables) {\\n            _setDroppablesActive(matchingDroppables, false, true, this);\\n            this.params.removeClass(dragEl, this.params.dragClass || css.drag);\\n            matchingDroppables.length = 0;\\n            if (!doNotCheckDroppables) {\\n                for (var i = 0; i < intersectingDroppables.length; i++) {\\n                    var retVal = intersectingDroppables[i].drop(this, e);\\n                    if (retVal === true) break;\\n                }\\n            }\\n        };\\n        this.moveBy = function(dx, dy, e) {\\n            intersectingDroppables.length = 0;\\n            var cPos = this.constrain(this.toGrid(([posAtDown[0] + dx, posAtDown[1] + dy])), dragEl),\\n                rect = { x:cPos[0], y:cPos[1], w:this.size[0], h:this.size[1]},\\n                focusDropElement = null;\\n\\n            this.params.setPosition(dragEl, cPos);\\n            for (var i = 0; i < matchingDroppables.length; i++) {\\n                var r2 = { x:matchingDroppables[i].position[0], y:matchingDroppables[i].position[1], w:matchingDroppables[i].size[0], h:matchingDroppables[i].size[1]};\\n                if (this.params.intersects(rect, r2) && (_multipleDrop || focusDropElement == null || focusDropElement == matchingDroppables[i].el) && matchingDroppables[i].canDrop(this)) {\\n                    if (!focusDropElement) focusDropElement = matchingDroppables[i].el;\\n                    intersectingDroppables.push(matchingDroppables[i]);\\n                    matchingDroppables[i].setHover(this, true, e);\\n                }\\n                else if (matchingDroppables[i].isHover()) {\\n                    matchingDroppables[i].setHover(this, false, e);\\n                }\\n            }\\n\\n            _dispatch(\\\"drag\\\", {el:this.el, pos:cPos, e:e, drag:this});\\n\\n            /* test to see if the parent needs to be scrolled\\n             if (scroll) {\\n             var pnsl = dragEl.parentNode.scrollLeft, pnst = dragEl.parentNode.scrollTop;\\n             console.log(\\\"scroll!\\\", pnsl, pnst);\\n             }*/\\n        };\\n        this.destroy = function() {\\n            this.params.unbind(this.el, \\\"mousedown\\\", this.downListener);\\n            this.params.unbind(document, \\\"mousemove\\\", this.moveListener);\\n            this.params.unbind(document, \\\"mouseup\\\", this.upListener);\\n            this.downListener = null;\\n            this.upListener = null;\\n            this.moveListener = null;\\n            //this.params = null;\\n            //this.el = null;\\n            //dragEl = null;\\n        };\\n\\n        // init:register mousedown, and perhaps set a filter\\n        this.params.bind(this.el, \\\"mousedown\\\", this.downListener);\\n\\n        // if handle provded, use that.  otherwise, try to set a filter.\\n        // note that a `handle` selector always results in filterExclude being set to false, ie.\\n        // the selector defines the handle element(s).\\n        if (this.params.handle)\\n            _setFilter(this.params.handle, false);\\n        else\\n            _setFilter(this.params.filter, this.params.filterExclude);\\n    };\\n\\n    var Drop = function(el, params, css, scope) {\\n        this._class = css.droppable;\\n        this.params = params || {};\\n        this._activeClass = this.params.activeClass || css.active;\\n        this._hoverClass = this.params.hoverClass || css.hover;\\n        Super.apply(this, arguments);\\n        var hover = false;\\n        this.allowLoopback = this.params.allowLoopback !== false;\\n\\n        this.setActive = function(val) {\\n            this.params[val ? \\\"addClass\\\" : \\\"removeClass\\\"](this.el, this._activeClass);\\n        };\\n\\n        this.updatePosition = function() {\\n            this.position = this.params.getPosition(this.el);\\n            this.size = this.params.getSize(this.el);\\n        };\\n\\n        this.canDrop = this.params.canDrop || function(drag) {\\n            return true;\\n        };\\n\\n        this.isHover = function() { return hover; };\\n\\n        this.setHover = function(drag, val, e) {\\n            // if turning off hover but this was not the drag that caused the hover, ignore.\\n            if (val || this.el._katavorioDragHover == null || this.el._katavorioDragHover == drag.el._katavorio) {\\n                this.params[val ? \\\"addClass\\\" : \\\"removeClass\\\"](this.el, this._hoverClass);\\n                //this.el._katavorioDragHover = val ? drag.el._katavorio : null;\\n                this.el._katavorioDragHover = val ? drag.el._katavorio : null;\\n                if (hover !== val)\\n                    this.params.events[val ? \\\"over\\\" : \\\"out\\\"]({el:this.el, e:e, drag:drag, drop:this});\\n                hover = val;\\n            }\\n        };\\n\\n        this.drop = function(drag, event) {\\n            return this.params.events[\\\"drop\\\"]({ drag:drag, e:event, drop:this });\\n        };\\n\\n        this.destroy = function() {\\n            this._class = null;\\n            this._activeClass = null;\\n            this._hoverClass = null;\\n            //this.params = null;\\n            hover = null;\\n            //this.el = null;\\n        };\\n    };\\n\\n    var _uuid = function() {\\n        return ('xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\\n            var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\\n            return v.toString(16);\\n        }));\\n    };\\n\\n    var _gel = function(el) {\\n        if (el == null) return null;\\n        el = (typeof el === \\\"string\\\" || el.constructor == String)  ? document.getElementById(el) : el;\\n        if (el == null) return null;\\n        el._katavorio = el._katavorio || _uuid();\\n        return el;\\n    };\\n\\n    this.Katavorio = function(katavorioParams) {\\n\\n        var _selection = [],\\n            _selectionMap = {};\\n\\n        this._dragsByScope = {};\\n        this._dropsByScope = {};\\n        var _zoom = 1,\\n            _reg = function(obj, map) {\\n                _each(obj, function(_obj) {\\n                    for(var i = 0; i < _obj.scopes.length; i++) {\\n                        map[_obj.scopes[i]] = map[_obj.scopes[i]] || [];\\n                        map[_obj.scopes[i]].push(_obj);\\n                    }\\n                });\\n            },\\n            _unreg = function(obj, map) {\\n                var c = 0;\\n                _each(obj, function(_obj) {\\n                    for(var i = 0; i < _obj.scopes.length; i++) {\\n                        if (map[_obj.scopes[i]]) {\\n                            var idx = katavorioParams.indexOf(map[_obj.scopes[i]], _obj);\\n                            if (idx != -1) {\\n                                map[_obj.scopes[i]].splice(idx, 1);\\n                                c++;\\n                            }\\n                        }\\n                    }\\n                });\\n\\n                return c > 0 ;\\n            },\\n            _getMatchingDroppables = this.getMatchingDroppables = function(drag) {\\n                var dd = [], _m = {};\\n                for (var i = 0; i < drag.scopes.length; i++) {\\n                    var _dd = this._dropsByScope[drag.scopes[i]];\\n                    if (_dd) {\\n                        for (var j = 0; j < _dd.length; j++) {\\n                            if (_dd[j].canDrop(drag) &&  !_m[_dd[j].uuid] && (_dd[j].allowLoopback || _dd[j].el !== drag.el)) {\\n                                _m[_dd[j].uuid] = true;\\n                                dd.push(_dd[j]);\\n                            }\\n                        }\\n                    }\\n                }\\n                return dd;\\n            },\\n            _prepareParams = function(p) {\\n                p = p || {};\\n                var _p = {\\n                    events:{}\\n                }, i;\\n                for (i in katavorioParams) _p[i] = katavorioParams[i];\\n                for (i in p) _p[i] = p[i];\\n                // events\\n\\n                for (i = 0; i < _events.length; i++) {\\n                    _p.events[_events[i]] = p[_events[i]] || _devNull;\\n                }\\n                _p.katavorio = this;\\n                return _p;\\n            }.bind(this),\\n            _mistletoe = function(existingDrag, params) {\\n                for (var i = 0; i < _events.length; i++) {\\n                    if (params[_events[i]]) {\\n                        existingDrag.on(_events[i], params[_events[i]]);\\n                    }\\n                }\\n            }.bind(this),\\n            _css = {},\\n            overrideCss = katavorioParams.css || {},\\n            _scope = katavorioParams.scope || _defaultScope;\\n\\n        // prepare map of css classes based on defaults frst, then optional overrides\\n        for (var i in _classes) _css[i] = _classes[i];\\n        for (var i in overrideCss) _css[i] = overrideCss[i];\\n\\n        var inputFilterSelector = katavorioParams.inputFilterSelector || _defaultInputFilterSelector;\\n        /**\\n         * Gets the selector identifying which input elements to filter from drag events.\\n         * @method getInputFilterSelector\\n         * @return {String} Current input filter selector.\\n         */\\n        this.getInputFilterSelector = function() { return inputFilterSelector; };\\n\\n        /**\\n         * Sets the selector identifying which input elements to filter from drag events.\\n         * @method setInputFilterSelector\\n         * @param {String} selector Input filter selector to set.\\n         * @return {Katavorio} Current instance; method may be chained.\\n         */\\n        this.setInputFilterSelector = function(selector) {\\n            inputFilterSelector = selector;\\n            return this;\\n        };\\n\\n        this.draggable = function(el, params) {\\n            var o = [];\\n            _each(el, function(_el) {\\n                _el = _gel(_el);\\n                if (_el != null) {\\n                    if (_el._katavorioDrag == null) {\\n                        var p = _prepareParams(params);\\n                        _el._katavorioDrag = new Drag(_el, p, _css, _scope);\\n                        _reg(_el._katavorioDrag, this._dragsByScope);\\n                        o.push(_el._katavorioDrag);\\n                        katavorioParams.addClass(_el, _css.draggable);\\n                    }\\n                    else {\\n                        _mistletoe(_el._katavorioDrag, params);\\n                    }\\n                }\\n            }.bind(this));\\n            return o;\\n\\n        };\\n\\n        this.droppable = function(el, params) {\\n            var o = [];\\n            _each(el, function(_el) {\\n                _el = _gel(_el);\\n                if (_el != null) {\\n                    var drop = new Drop(_el, _prepareParams(params), _css, _scope);\\n                    _el._katavorioDrop = _el._katavorioDrop || [];\\n                    _el._katavorioDrop.push(drop);\\n                    _reg(drop, this._dropsByScope);\\n                    o.push(drop);\\n                    katavorioParams.addClass(_el, _css.droppable);\\n                }\\n            }.bind(this));\\n            return o;\\n        };\\n\\n        /**\\n         * @name Katavorio#select\\n         * @function\\n         * @desc Adds an element to the current selection (for multiple node drag)\\n         * @param {Element|String} DOM element - or id of the element - to add.\\n         */\\n        this.select = function(el) {\\n            _each(el, function() {\\n                var _el = _gel(this);\\n                if (_el && _el._katavorioDrag) {\\n                    if (!_selectionMap[_el._katavorio]) {\\n                        _selection.push(_el._katavorioDrag);\\n                        _selectionMap[_el._katavorio] = [ _el, _selection.length - 1 ];\\n                        katavorioParams.addClass(_el, _css.selected);\\n                    }\\n                }\\n            });\\n            return this;\\n        };\\n\\n        /**\\n         * @name Katavorio#deselect\\n         * @function\\n         * @desc Removes an element from the current selection (for multiple node drag)\\n         * @param {Element|String} DOM element - or id of the element - to remove.\\n         */\\n        this.deselect = function(el) {\\n            _each(el, function() {\\n                var _el = _gel(this);\\n                if (_el && _el._katavorio) {\\n                    var e = _selectionMap[_el._katavorio];\\n                    if (e) {\\n                        var _s = [];\\n                        for (var i = 0; i < _selection.length; i++)\\n                            if (_selection[i].el !== _el) _s.push(_selection[i]);\\n                        _selection = _s;\\n                        delete _selectionMap[_el._katavorio];\\n                        katavorioParams.removeClass(_el, _css.selected);\\n                    }\\n                }\\n            });\\n            return this;\\n        };\\n\\n        this.deselectAll = function() {\\n            for (var i in _selectionMap) {\\n                var d = _selectionMap[i];\\n                katavorioParams.removeClass(d[0], _css.selected);\\n            }\\n\\n            _selection.length = 0;\\n            _selectionMap = {};\\n        };\\n\\n        this.markSelection = function(drag) {\\n            _foreach(_selection, function(e) { e.mark(); }, drag);\\n        };\\n\\n        this.markPosses = function(drag) {\\n            if (drag.posses) {\\n                _each(drag.posses, function(p) {\\n                    if (drag.posseRoles[p] && _posses[p]) {\\n                        _foreach(_posses[p].members, function (d) {\\n                            d.mark();\\n                        }, drag);\\n                    }\\n                })\\n            }\\n        };\\n\\n        this.unmarkSelection = function(drag, event) {\\n            _foreach(_selection, function(e) { e.unmark(event); }, drag);\\n        };\\n\\n        this.unmarkPosses = function(drag, event) {\\n            if (drag.posses) {\\n                _each(drag.posses, function(p) {\\n                    if (drag.posseRoles[p] && _posses[p]) {\\n                        _foreach(_posses[p].members, function (d) {\\n                            d.unmark(event, true);\\n                        }, drag);\\n                    }\\n                });\\n            }\\n        };\\n\\n        this.getSelection = function() { return _selection.slice(0); };\\n\\n        this.updateSelection = function(dx, dy, drag) {\\n            _foreach(_selection, function(e) { e.moveBy(dx, dy); }, drag);\\n        };\\n\\n        var _posseAction = function(fn, drag) {\\n            if (drag.posses) {\\n                _each(drag.posses, function(p) {\\n                    if (drag.posseRoles[p] && _posses[p]) {\\n                        _foreach(_posses[p].members, function (e) {\\n                            fn(e);\\n                        }, drag);\\n                    }\\n                });\\n            }\\n        };\\n\\n        this.updatePosses = function(dx, dy, drag) {\\n            _posseAction(function(e) { e.moveBy(dx, dy); }, drag);\\n        };\\n\\n        this.notifyPosseDragStop = function(drag, evt) {\\n            _posseAction(function(e) { e.stop(evt, true); }, drag);\\n        };\\n\\n        this.notifySelectionDragStop = function(drag, evt) {\\n            _foreach(_selection, function(e) { e.stop(evt, true); }, drag);\\n        };\\n\\n        this.notifySelectionDragStart = function(drag, evt) {\\n            _foreach(_selection, function(e) { e.notifyStart(evt);}, drag);\\n        };\\n\\n        this.setZoom = function(z) { _zoom = z; };\\n        this.getZoom = function() { return _zoom; };\\n\\n        // does the work of changing scopes\\n        var _scopeManip = function(kObj, scopes, map, fn) {\\n            _each(kObj, function(_kObj) {\\n                _unreg(_kObj, map);  // deregister existing scopes\\n                _kObj[fn](scopes); // set scopes\\n                _reg(_kObj, map); // register new ones\\n            });\\n        };\\n\\n        _each([ \\\"set\\\", \\\"add\\\", \\\"remove\\\", \\\"toggle\\\"], function(v) {\\n            this[v + \\\"Scope\\\"] = function(el, scopes) {\\n                _scopeManip(el._katavorioDrag, scopes, this._dragsByScope, v + \\\"Scope\\\");\\n                _scopeManip(el._katavorioDrop, scopes, this._dropsByScope, v + \\\"Scope\\\");\\n            }.bind(this);\\n            this[v + \\\"DragScope\\\"] = function(el, scopes) {\\n                _scopeManip(el.constructor === Drag ? el : el._katavorioDrag, scopes, this._dragsByScope, v + \\\"Scope\\\");\\n            }.bind(this);\\n            this[v + \\\"DropScope\\\"] = function(el, scopes) {\\n                _scopeManip(el.constructor === Drop ? el : el._katavorioDrop, scopes, this._dropsByScope, v + \\\"Scope\\\");\\n            }.bind(this);\\n        }.bind(this));\\n\\n        this.snapToGrid = function(x, y) {\\n            for (var s in this._dragsByScope) {\\n                _foreach(this._dragsByScope[s], function(d) { d.snap(x, y); });\\n            }\\n        };\\n\\n        this.getDragsForScope = function(s) { return this._dragsByScope[s]; };\\n        this.getDropsForScope = function(s) { return this._dropsByScope[s]; };\\n\\n        var _destroy = function(el, type, map) {\\n            el = _gel(el);\\n            if (el[type]) {\\n                if (_unreg(el[type], map)) {\\n                    _each(el[type], function(kObj) { kObj.destroy() });\\n                }\\n\\n                el[type] = null;\\n            }\\n        };\\n\\n        this.elementRemoved = function(el) {\\n            this.destroyDraggable(el);\\n            this.destroyDroppable(el);\\n        };\\n\\n        this.destroyDraggable = function(el) {\\n            _destroy(el, \\\"_katavorioDrag\\\", this._dragsByScope);\\n        };\\n\\n        this.destroyDroppable = function(el) {\\n            _destroy(el, \\\"_katavorioDrop\\\", this._dropsByScope);\\n        };\\n\\n        this.reset = function() {\\n            this._dragsByScope = {};\\n            this._dropsByScope = {};\\n            _selection = [];\\n            _selectionMap = {};\\n            _posses = {};\\n        };\\n\\n        // ----- groups\\n        var _posses = {};\\n\\n        var _processOneSpec = function(el, _spec, dontAddExisting) {\\n            var posseId = _isString(_spec) ? _spec : _spec.id;\\n            var active = _isString(_spec) ? true : _spec.active !== false;\\n            var posse = _posses[posseId] || (function() {\\n                var g = {name:posseId, members:[]};\\n                _posses[posseId] = g;\\n                return g;\\n            })();\\n            _each(el, function(_el) {\\n                if (_el._katavorioDrag) {\\n\\n                    if (dontAddExisting && _el._katavorioDrag.posseRoles[posse.name] != null) return;\\n\\n                    _suggest(posse.members, _el._katavorioDrag);\\n                    _suggest(_el._katavorioDrag.posses, posse.name);\\n                    _el._katavorioDrag.posseRoles[posse.name] = active;\\n                }\\n            });\\n            return posse;\\n        };\\n\\n        /**\\n         * Add the given element to the posse with the given id, creating the group if it at first does not exist.\\n         * @method addToPosse\\n         * @param {Element} el Element to add.\\n         * @param {String...|Object...} spec Variable args parameters. Each argument can be a either a String, indicating\\n         * the ID of a Posse to which the element should be added as an active participant, or an Object containing\\n         * `{ id:\\\"posseId\\\", active:false/true}`. In the latter case, if `active` is not provided it is assumed to be\\n         * true.\\n         * @returns {Posse|Posse[]} The Posse(s) to which the element(s) was/were added.\\n         */\\n        this.addToPosse = function(el, spec) {\\n\\n            var posses = [];\\n\\n            for (var i = 1; i < arguments.length; i++) {\\n                posses.push(_processOneSpec(el, arguments[i]));\\n            }\\n\\n            return posses.length == 1 ? posses[0] : posses;\\n        };\\n\\n        /**\\n         * Sets the posse(s) for the element with the given id, creating those that do not yet exist, and removing from\\n         * the element any current Posses that are not specified by this method call. This method will not change the\\n         * active/passive state if it is given a posse in which the element is already a member.\\n         * @method setPosse\\n         * @param {Element} el Element to set posse(s) on.\\n         * @param {String...|Object...} spec Variable args parameters. Each argument can be a either a String, indicating\\n         * the ID of a Posse to which the element should be added as an active participant, or an Object containing\\n         * `{ id:\\\"posseId\\\", active:false/true}`. In the latter case, if `active` is not provided it is assumed to be\\n         * true.\\n         * @returns {Posse|Posse[]} The Posse(s) to which the element(s) now belongs.\\n         */\\n        this.setPosse = function(el, spec) {\\n\\n            var posses = [];\\n\\n            for (var i = 1; i < arguments.length; i++) {\\n                posses.push(_processOneSpec(el, arguments[i], true).name);\\n            }\\n\\n            _each(el, function(_el) {\\n                if (_el._katavorioDrag) {\\n                    var diff = _difference(_el._katavorioDrag.posses, posses);\\n                    var p = [];\\n                    Array.prototype.push.apply(p, _el._katavorioDrag.posses);\\n                    for (var i = 0; i < diff.length; i++) {\\n                        this.removeFromPosse(_el, diff[i]);\\n                    }\\n                }\\n            }.bind(this));\\n\\n            return posses.length == 1 ? posses[0] : posses;\\n        };\\n\\n        /**\\n         * Remove the given element from the given posse(s).\\n         * @method removeFromPosse\\n         * @param {Element} el Element to remove.\\n         * @param {String...} posseId Varargs parameter: one value for each posse to remove the element from.\\n         */\\n        this.removeFromPosse = function(el, posseId) {\\n            if (arguments.length < 2) throw new TypeError(\\\"No posse id provided for remove operation\\\");\\n            for(var i = 1; i < arguments.length; i++) {\\n                posseId = arguments[i];\\n                _each(el, function (_el) {\\n                    if (_el._katavorioDrag && _el._katavorioDrag.posses) {\\n                        var d = _el._katavorioDrag;\\n                        _each(posseId, function (p) {\\n                            _vanquish(_posses[p].members, d);\\n                            _vanquish(d.posses, p);\\n                            delete d.posseRoles[p];\\n                        });\\n                    }\\n                });\\n            }\\n        };\\n\\n        /**\\n         * Remove the given element from all Posses to which it belongs.\\n         * @method removeFromAllPosses\\n         * @param {Element|Element[]} el Element to remove from Posses.\\n         */\\n        this.removeFromAllPosses = function(el) {\\n            _each(el, function(_el) {\\n                if (_el._katavorioDrag && _el._katavorioDrag.posses) {\\n                    var d = _el._katavorioDrag;\\n                    _each(d.posses, function(p) {\\n                        _vanquish(_posses[p].members, d);\\n                    });\\n                    d.posses.length = 0;\\n                    d.posseRoles = {};\\n                }\\n            });\\n        };\\n\\n        /**\\n         * Changes the participation state for the element in the Posse with the given ID.\\n         * @param {Element|Element[]} el Element(s) to change state for.\\n         * @param {String} posseId ID of the Posse to change element state for.\\n         * @param {Boolean} state True to make active, false to make passive.\\n         */\\n        this.setPosseState = function(el, posseId, state) {\\n            var posse = _posses[posseId];\\n            if (posse) {\\n                _each(el, function(_el) {\\n                    if (_el._katavorioDrag && _el._katavorioDrag.posses) {\\n                        _el._katavorioDrag.posseRoles[posse.name] = state;\\n                    }\\n                });\\n            }\\n        };\\n    };\\n}).call(this);\\n\\n/*\\n * jsPlumb\\n *\\n * Title:jsPlumb 2.0.2\\n *\\n * Provides a way to visually connect elements on an HTML page, using SVG.\\n *\\n * This file contains utility functions that run in both browsers and headless.\\n *\\n * Copyright (c) 2010 - 2015 jsPlumb (hello@jsplumbtoolkit.com)\\n *\\n * http://jsplumbtoolkit.com\\n * http://github.com/sporritt/jsplumb\\n *\\n * Dual licensed under the MIT and GPL2 licenses.\\n */\\n\\n;\\n(function () {\\n\\n    var _isa = function (a) {\\n            return Object.prototype.toString.call(a) === \\\"[object Array]\\\";\\n        },\\n        _isnum = function (n) {\\n            return Object.prototype.toString.call(n) === \\\"[object Number]\\\";\\n        },\\n        _iss = function (s) {\\n            return typeof s === \\\"string\\\";\\n        },\\n        _isb = function (s) {\\n            return typeof s === \\\"boolean\\\";\\n        },\\n        _isnull = function (s) {\\n            return s == null;\\n        },\\n        _iso = function (o) {\\n            return o == null ? false : Object.prototype.toString.call(o) === \\\"[object Object]\\\";\\n        },\\n        _isd = function (o) {\\n            return Object.prototype.toString.call(o) === \\\"[object Date]\\\";\\n        },\\n        _isf = function (o) {\\n            return Object.prototype.toString.call(o) === \\\"[object Function]\\\";\\n        },\\n        _isNamedFunction = function(o) {\\n            return _isf(o) && o.name != null && o.name.length > 0;\\n        },\\n        _ise = function (o) {\\n            for (var i in o) {\\n                if (o.hasOwnProperty(i)) return false;\\n            }\\n            return true;\\n        };\\n\\n    var root = this;\\n    var exports = root.jsPlumbUtil = {\\n        isArray: _isa,\\n        isString: _iss,\\n        isBoolean: _isb,\\n        isNull: _isnull,\\n        isObject: _iso,\\n        isDate: _isd,\\n        isFunction: _isf,\\n        isEmpty: _ise,\\n        isNumber: _isnum,\\n        clone: function (a) {\\n            if (_iss(a)) return \\\"\\\" + a;\\n            else if (_isb(a)) return !!a;\\n            else if (_isd(a)) return new Date(a.getTime());\\n            else if (_isf(a)) return a;\\n            else if (_isa(a)) {\\n                var b = [];\\n                for (var i = 0; i < a.length; i++)\\n                    b.push(this.clone(a[i]));\\n                return b;\\n            }\\n            else if (_iso(a)) {\\n                var c = {};\\n                for (var j in a)\\n                    c[j] = this.clone(a[j]);\\n                return c;\\n            }\\n            else return a;\\n        },\\n        merge: function (a, b, collations) {\\n            // first change the collations array - if present - into a lookup table, because its faster.\\n            var cMap = {}, ar, i;\\n            collations = collations || [];\\n            for (i = 0; i < collations.length; i++)\\n                cMap[collations[i]] = true;\\n\\n            var c = this.clone(a);\\n            for (i in b) {\\n                if (c[i] == null) {\\n                    c[i] = b[i];\\n                }\\n                else if (_iss(b[i]) || _isb(b[i])) {\\n                    if (!cMap[i]) {\\n                        c[i] = b[i]; // if we dont want to collate, just copy it in.\\n                    }\\n                    else {\\n                        ar = [];\\n                        // if c's object is also an array we can keep its values.\\n                        ar.push.apply(ar, _isa(c[i]) ? c[i] : [ c[i] ]);\\n                        ar.push.apply(ar, _isa(b[i]) ? b[i] : [ b[i] ]);\\n                        c[i] = ar;\\n                    }\\n                }\\n                else {\\n                    if (_isa(b[i])) {\\n                        ar = [];\\n                        // if c's object is also an array we can keep its values.\\n                        if (_isa(c[i])) ar.push.apply(ar, c[i]);\\n                        ar.push.apply(ar, b[i]);\\n                        c[i] = ar;\\n                    }\\n                    else if (_iso(b[i])) {\\n                        // overwite c's value with an object if it is not already one.\\n                        if (!_iso(c[i]))\\n                            c[i] = {};\\n                        for (var j in b[i]) {\\n                            c[i][j] = b[i][j];\\n                        }\\n                    }\\n                }\\n\\n            }\\n            return c;\\n        },\\n        replace: function (inObj, path, value) {\\n            if (inObj == null) return;\\n            var q = inObj, t = q;\\n            path.replace(/([^\\\\.])+/g, function (term, lc, pos, str) {\\n                var array = term.match(/([^\\\\[0-9]+){1}(\\\\[)([0-9+])/),\\n                    last = pos + term.length >= str.length,\\n                    _getArray = function () {\\n                        return t[array[1]] || (function () {\\n                            t[array[1]] = [];\\n                            return t[array[1]];\\n                        })();\\n                    };\\n\\n                if (last) {\\n                    // set term = value on current t, creating term as array if necessary.\\n                    if (array)\\n                        _getArray()[array[3]] = value;\\n                    else\\n                        t[term] = value;\\n                }\\n                else {\\n                    // set to current t[term], creating t[term] if necessary.\\n                    if (array) {\\n                        var a = _getArray();\\n                        t = a[array[3]] || (function () {\\n                            a[array[3]] = {};\\n                            return a[array[3]];\\n                        })();\\n                    }\\n                    else\\n                        t = t[term] || (function () {\\n                            t[term] = {};\\n                            return t[term];\\n                        })();\\n                }\\n            });\\n\\n            return inObj;\\n        },\\n        //\\n        // chain a list of functions, supplied by [ object, method name, args ], and return on the first\\n        // one that returns the failValue. if none return the failValue, return the successValue.\\n        //\\n        functionChain: function (successValue, failValue, fns) {\\n            for (var i = 0; i < fns.length; i++) {\\n                var o = fns[i][0][fns[i][1]].apply(fns[i][0], fns[i][2]);\\n                if (o === failValue) {\\n                    return o;\\n                }\\n            }\\n            return successValue;\\n        },\\n        // take the given model and expand out any parameters.\\n        // 'functionPrefix' is optional, and if present, helps jsplumb figure out what to do if a value is a Function.\\n        // if you do not provide it, jsplumb will run the given values through any functions it finds, and use the function's\\n        // output as the value in the result. if you do provide the prefix, only functions that are named and have this prefix\\n        // will be executed; other functions will be passed as values to the output.\\n        populate: function (model, values, functionPrefix) {\\n            // for a string, see if it has parameter matches, and if so, try to make the substitutions.\\n            var getValue = function (fromString) {\\n                    var matches = fromString.match(/(\\\\${.*?})/g);\\n                    if (matches != null) {\\n                        for (var i = 0; i < matches.length; i++) {\\n                            var val = values[matches[i].substring(2, matches[i].length - 1)] || \\\"\\\";\\n                            if (val != null) {\\n                                fromString = fromString.replace(matches[i], val);\\n                            }\\n                        }\\n                    }\\n                    return fromString;\\n                },\\n            // process one entry.\\n                _one = function (d) {\\n                    if (d != null) {\\n                        if (_iss(d)) {\\n                            return getValue(d);\\n                        }\\n                        else if (_isf(d) && (functionPrefix == null || (d.name || \\\"\\\").indexOf(functionPrefix) === 0)) {\\n                            return d(values);\\n                        }\\n                        else if (_isa(d)) {\\n                            var r = [];\\n                            for (var i = 0; i < d.length; i++)\\n                                r.push(_one(d[i]));\\n                            return r;\\n                        }\\n                        else if (_iso(d)) {\\n                            var s = {};\\n                            for (var j in d) {\\n                                s[j] = _one(d[j]);\\n                            }\\n                            return s;\\n                        }\\n                        else {\\n                            return d;\\n                        }\\n                    }\\n                };\\n\\n            return _one(model);\\n        },\\n        findWithFunction: function (a, f) {\\n            if (a)\\n                for (var i = 0; i < a.length; i++) if (f(a[i])) return i;\\n            return -1;\\n        },\\n        removeWithFunction: function (a, f) {\\n            var idx = exports.findWithFunction(a, f);\\n            if (idx > -1) a.splice(idx, 1);\\n            return idx != -1;\\n        },\\n        remove: function (l, v) {\\n            var idx = l.indexOf(v);\\n            if (idx > -1) l.splice(idx, 1);\\n            return idx != -1;\\n        },\\n        // TODO support insert index\\n        addWithFunction: function (list, item, hashFunction) {\\n            if (exports.findWithFunction(list, hashFunction) == -1) list.push(item);\\n        },\\n        addToList: function (map, key, value, insertAtStart) {\\n            var l = map[key];\\n            if (l == null) {\\n                l = [];\\n                map[key] = l;\\n            }\\n            l[insertAtStart ? \\\"unshift\\\" : \\\"push\\\"](value);\\n            return l;\\n        },\\n        //\\n        // extends the given obj (which can be an array) with the given constructor function, prototype functions, and\\n        // class members, any of which may be null.\\n        //\\n        extend: function (child, parent, _protoFn) {\\n            var i;\\n            parent = _isa(parent) ? parent : [ parent ];\\n\\n            for (i = 0; i < parent.length; i++) {\\n                for (var j in parent[i].prototype) {\\n                    if (parent[i].prototype.hasOwnProperty(j)) {\\n                        child.prototype[j] = parent[i].prototype[j];\\n                    }\\n                }\\n            }\\n\\n            var _makeFn = function (name, protoFn) {\\n                return function () {\\n                    for (i = 0; i < parent.length; i++) {\\n                        if (parent[i].prototype[name])\\n                            parent[i].prototype[name].apply(this, arguments);\\n                    }\\n                    return protoFn.apply(this, arguments);\\n                };\\n            };\\n\\n            var _oneSet = function (fns) {\\n                for (var k in fns) {\\n                    child.prototype[k] = _makeFn(k, fns[k]);\\n                }\\n            };\\n\\n            if (arguments.length > 2) {\\n                for (i = 2; i < arguments.length; i++)\\n                    _oneSet(arguments[i]);\\n            }\\n\\n            return child;\\n        },\\n        uuid: function () {\\n            return ('xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\\n                var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\\n                return v.toString(16);\\n            }));\\n        },\\n        logEnabled: true,\\n        log: function () {\\n            if (exports.logEnabled && typeof console != \\\"undefined\\\") {\\n                try {\\n                    var msg = arguments[arguments.length - 1];\\n                    console.log(msg);\\n                }\\n                catch (e) {\\n                }\\n            }\\n        },\\n\\n        /**\\n         * Wraps one function with another, creating a placeholder for the\\n         * wrapped function if it was null. this is used to wrap the various\\n         * drag/drop event functions - to allow jsPlumb to be notified of\\n         * important lifecycle events without imposing itself on the user's\\n         * drag/drop functionality.\\n         * @method jsPlumbUtil.wrap\\n         * @param {Function} wrappedFunction original function to wrap; may be null.\\n         * @param {Function} newFunction function to wrap the original with.\\n         * @param {Object} [returnOnThisValue] Optional. Indicates that the wrappedFunction should\\n         * not be executed if the newFunction returns a value matching 'returnOnThisValue'.\\n         * note that this is a simple comparison and only works for primitives right now.\\n         */\\n        wrap: function (wrappedFunction, newFunction, returnOnThisValue) {\\n            wrappedFunction = wrappedFunction || function () {\\n            };\\n            newFunction = newFunction || function () {\\n            };\\n            return function () {\\n                var r = null;\\n                try {\\n                    r = newFunction.apply(this, arguments);\\n                } catch (e) {\\n                    exports.log(\\\"jsPlumb function failed : \\\" + e);\\n                }\\n                if (returnOnThisValue == null || (r !== returnOnThisValue)) {\\n                    try {\\n                        r = wrappedFunction.apply(this, arguments);\\n                    } catch (e) {\\n                        exports.log(\\\"wrapped function failed : \\\" + e);\\n                    }\\n                }\\n                return r;\\n            };\\n        }\\n    };\\n\\n    exports.EventGenerator = function () {\\n        var _listeners = {},\\n            eventsSuspended = false,\\n        // this is a list of events that should re-throw any errors that occur during their dispatch. it is current private.\\n            eventsToDieOn = { \\\"ready\\\": true };\\n\\n        this.bind = function (event, listener, insertAtStart) {\\n            var _one = function(evt) {\\n                exports.addToList(_listeners, evt, listener, insertAtStart);\\n                listener.__jsPlumb = listener.__jsPlumb || {};\\n                listener.__jsPlumb[jsPlumbUtil.uuid()] = evt;\\n            };\\n\\n            if (typeof event === \\\"string\\\") _one(event);\\n            else if (event.length != null) {\\n                for (var i = 0; i < event.length; i++) {\\n                    _one(event[i]);\\n                }\\n            }\\n\\n            return this;\\n        };\\n\\n        this.fire = function (event, value, originalEvent) {\\n            if (!eventsSuspended && _listeners[event]) {\\n                var l = _listeners[event].length, i = 0, _gone = false, ret = null;\\n                if (!this.shouldFireEvent || this.shouldFireEvent(event, value, originalEvent)) {\\n                    while (!_gone && i < l && ret !== false) {\\n                        // doing it this way rather than catching and then possibly re-throwing means that an error propagated by this\\n                        // method will have the whole call stack available in the debugger.\\n                        if (eventsToDieOn[event])\\n                            _listeners[event][i].apply(this, [ value, originalEvent]);\\n                        else {\\n                            try {\\n                                ret = _listeners[event][i].apply(this, [ value, originalEvent ]);\\n                            } catch (e) {\\n                                exports.log(\\\"jsPlumb: fire failed for event \\\" + event + \\\" : \\\" + e);\\n                            }\\n                        }\\n                        i++;\\n                        if (_listeners == null || _listeners[event] == null)\\n                            _gone = true;\\n                    }\\n                }\\n            }\\n            return this;\\n        };\\n\\n        this.unbind = function (eventOrListener, listener) {\\n\\n            if (arguments.length === 0) {\\n                _listeners = {};\\n            }\\n            else if (arguments.length === 1) {\\n                if (typeof eventOrListener === \\\"string\\\")\\n                    delete _listeners[eventOrListener];\\n                else if (eventOrListener.__jsPlumb) {\\n                    var evt;\\n                    for (var i in eventOrListener.__jsPlumb) {\\n                        evt = eventOrListener.__jsPlumb[i];\\n                        exports.remove(_listeners[evt] || [], eventOrListener);\\n                    }\\n                }\\n            }\\n            else if (arguments.length === 2) {\\n                exports.remove(_listeners[eventOrListener] || [], listener);\\n            }\\n\\n            return this;\\n        };\\n\\n        this.getListener = function (forEvent) {\\n            return _listeners[forEvent];\\n        };\\n        this.setSuspendEvents = function (val) {\\n            eventsSuspended = val;\\n        };\\n        this.isSuspendEvents = function () {\\n            return eventsSuspended;\\n        };\\n        this.silently = function(fn) {\\n            this.setSuspendEvents(true);\\n            try {\\n                fn();\\n            }\\n            catch (e) {\\n                jsPlumbUtil.log(\\\"Cannot execute silent function \\\" + e);\\n            }\\n            this.setSuspendEvents(false);\\n        };\\n        this.cleanupListeners = function () {\\n            for (var i in _listeners) {\\n                _listeners[i] = null;\\n            }\\n        };\\n    };\\n\\n    exports.EventGenerator.prototype = {\\n        cleanup: function () {\\n            this.cleanupListeners();\\n        }\\n    };\\n\\n}).call(this);\\n\\n/*\\n * jsPlumb\\n *\\n * Title:jsPlumb 2.0.2\\n *\\n * Provides a way to visually connect elements on an HTML page, using SVG.\\n *\\n * This file contains utility functions that run in browsers only.\\n *\\n * Copyright (c) 2010 - 2015 jsPlumb (hello@jsplumbtoolkit.com)\\n *\\n * http://jsplumbtoolkit.com\\n * http://github.com/sporritt/jsplumb\\n *\\n * Dual licensed under the MIT and GPL2 licenses.\\n */\\n ;(function() {\\n\\n  \\\"use strict\\\";\\n\\n   var root = this;\\n   var exports = root.jsPlumbUtil;\\n\\n   exports.matchesSelector = function(el, selector, ctx) {\\n       ctx = ctx || el.parentNode;\\n       var possibles = ctx.querySelectorAll(selector);\\n       for (var i = 0; i < possibles.length; i++) {\\n           if (possibles[i] === el)\\n               return true;\\n       }\\n       return false;\\n   };\\n\\n   exports.consume = function(e, doNotPreventDefault) {\\n       if (e.stopPropagation)\\n           e.stopPropagation();\\n       else\\n           e.returnValue = false;\\n\\n       if (!doNotPreventDefault && e.preventDefault)\\n            e.preventDefault();\\n   };\\n\\n   /*\\n    * Function: sizeElement\\n    * Helper to size and position an element. You would typically use\\n    * this when writing your own Connector or Endpoint implementation.\\n    *\\n    * Parameters:\\n    *  x - [int] x position for the element origin\\n    *  y - [int] y position for the element origin\\n    *  w - [int] width of the element\\n    *  h - [int] height of the element\\n    *\\n    */\\n   exports.sizeElement = function(el, x, y, w, h) {\\n       if (el) {\\n           el.style.height = h + \\\"px\\\";\\n           el.height = h;\\n           el.style.width = w + \\\"px\\\";\\n           el.width = w;\\n           el.style.left = x + \\\"px\\\";\\n           el.style.top = y + \\\"px\\\";\\n       }\\n   };\\n\\n\\n }).call(this);\\n\\n/*\\n * jsPlumb\\n * \\n * Title:jsPlumb 2.0.2\\n * \\n * Provides a way to visually connect elements on an HTML page, using SVG.\\n * \\n * This file contains the core code.\\n *\\n * Copyright (c) 2010 - 2015 jsPlumb (hello@jsplumbtoolkit.com)\\n * \\n * http://jsplumbtoolkit.com\\n * http://github.com/sporritt/jsplumb\\n * \\n * Dual licensed under the MIT and GPL2 licenses.\\n */\\n(function () {\\n\\n    \\\"use strict\\\";\\n\\n    var root = this;\\n    var connectorTypes = [], rendererTypes;\\n\\n    var _ju = root.jsPlumbUtil,\\n        _getOffset = function (el, _instance, relativeToRoot) {\\n            return _instance.getOffset(el, relativeToRoot);\\n        },\\n\\n        /**\\n         * creates a timestamp, using milliseconds since 1970, but as a string.\\n         */\\n        _timestamp = function () {\\n            return \\\"\\\" + (new Date()).getTime();\\n        },\\n\\n    // helper method to update the hover style whenever it, or paintStyle, changes.\\n    // we use paintStyle as the foundation and merge hoverPaintStyle over the\\n    // top.\\n        _updateHoverStyle = function (component) {\\n            if (component._jsPlumb.paintStyle && component._jsPlumb.hoverPaintStyle) {\\n                var mergedHoverStyle = {};\\n                jsPlumb.extend(mergedHoverStyle, component._jsPlumb.paintStyle);\\n                jsPlumb.extend(mergedHoverStyle, component._jsPlumb.hoverPaintStyle);\\n                delete component._jsPlumb.hoverPaintStyle;\\n                // we want the fillStyle of paintStyle to override a gradient, if possible.\\n                if (mergedHoverStyle.gradient && component._jsPlumb.paintStyle.fillStyle)\\n                    delete mergedHoverStyle.gradient;\\n                component._jsPlumb.hoverPaintStyle = mergedHoverStyle;\\n            }\\n        },\\n        events = [\\\"tap\\\", \\\"dbltap\\\", \\\"click\\\", \\\"dblclick\\\", \\\"mouseover\\\", \\\"mouseout\\\", \\\"mousemove\\\", \\\"mousedown\\\", \\\"mouseup\\\", \\\"contextmenu\\\" ],\\n        eventFilters = { \\\"mouseout\\\": \\\"mouseleave\\\", \\\"mouseexit\\\": \\\"mouseleave\\\" },\\n        _updateAttachedElements = function (component, state, timestamp, sourceElement) {\\n            var affectedElements = component.getAttachedElements();\\n            if (affectedElements) {\\n                for (var i = 0, j = affectedElements.length; i < j; i++) {\\n                    if (!sourceElement || sourceElement != affectedElements[i])\\n                        affectedElements[i].setHover(state, true, timestamp);\\t\\t\\t// tell the attached elements not to inform their own attached elements.\\n                }\\n            }\\n        },\\n        _splitType = function (t) {\\n            return t == null ? null : t.split(\\\" \\\");\\n        },\\n        _mapType = function(map, obj, typeId) {\\n            for (var i in obj)\\n                map[i] = typeId;\\n        },\\n        _each = function(fn, obj) {\\n            obj = _ju.isArray(obj) || (obj.length != null && !_ju.isString(obj)) ? obj : [ obj ];\\n            for (var i = 0; i < obj.length; i++) {\\n                try {\\n                    fn.apply(obj[i], [ obj[i] ]);\\n                }\\n                catch (e) {\\n                    _ju.log(\\\".each iteration failed : \\\" + e);\\n                }\\n            }\\n        },\\n        _applyTypes = function (component, params, doNotRepaint) {\\n            if (component.getDefaultType) {\\n                var td = component.getTypeDescriptor(), map = {};\\n                var defType = component.getDefaultType();\\n                var o = _ju.merge({}, defType);\\n                _mapType(map, defType, \\\"__default\\\");\\n                for (var i = 0, j = component._jsPlumb.types.length; i < j; i++) {\\n                    var tid = component._jsPlumb.types[i];\\n                    if (tid !== \\\"__default\\\") {\\n                        var _t = component._jsPlumb.instance.getType(tid, td);\\n                        if (_t != null) {\\n                            o = _ju.merge(o, _t, [ \\\"cssClass\\\" ]);\\n                            _mapType(map, _t, tid);\\n                        }\\n                    }\\n                }\\n\\n                if (params) {\\n                    o = _ju.populate(o, params, \\\"_\\\");\\n                }\\n\\n                component.applyType(o, doNotRepaint, map);\\n                if (!doNotRepaint) component.repaint();\\n            }\\n        },\\n\\n// ------------------------------ BEGIN jsPlumbUIComponent --------------------------------------------\\n\\n        jsPlumbUIComponent = root.jsPlumbUIComponent = function (params) {\\n\\n            _ju.EventGenerator.apply(this, arguments);\\n\\n            var self = this,\\n                a = arguments,\\n                idPrefix = self.idPrefix,\\n                id = idPrefix + (new Date()).getTime();\\n\\n            this._jsPlumb = {\\n                instance: params._jsPlumb,\\n                parameters: params.parameters || {},\\n                paintStyle: null,\\n                hoverPaintStyle: null,\\n                paintStyleInUse: null,\\n                hover: false,\\n                beforeDetach: params.beforeDetach,\\n                beforeDrop: params.beforeDrop,\\n                overlayPlacements: [],\\n                hoverClass: params.hoverClass || params._jsPlumb.Defaults.HoverClass,\\n                types: [],\\n                typeCache:{}\\n            };\\n\\n            this.cacheTypeItem = function(key, item, typeId) {\\n                this._jsPlumb.typeCache[typeId] = this._jsPlumb.typeCache[typeId] || {};\\n                this._jsPlumb.typeCache[typeId][key] = item;\\n            };\\n            this.getCachedTypeItem = function(key, typeId) {\\n                return this._jsPlumb.typeCache[typeId] ? this._jsPlumb.typeCache[typeId][key] : null;\\n            };\\n\\n            this.getId = function () {\\n                return id;\\n            };\\n\\n// ----------------------------- default type --------------------------------------------\\n\\n\\n            var o = params.overlays || [], oo = {};\\n            if (this.defaultOverlayKeys) {\\n                for (var i = 0; i < this.defaultOverlayKeys.length; i++)\\n                    Array.prototype.push.apply(o, this._jsPlumb.instance.Defaults[this.defaultOverlayKeys[i]] || []);\\n\\n                for (i = 0; i < o.length; i++) {\\n                    // if a string, convert to object representation so that we can store the typeid on it.\\n                    // also assign an id.\\n                    var fo = jsPlumb.convertToFullOverlaySpec(o[i]);\\n                    oo[fo[1].id] = fo;\\n                }\\n            }\\n\\n            var _defaultType = {\\n                overlays:oo,\\n                parameters: params.parameters || {},\\n                scope: params.scope || this._jsPlumb.instance.getDefaultScope()\\n            };\\n            this.getDefaultType = function() {\\n                return _defaultType;\\n            };\\n            this.appendToDefaultType = function(obj) {\\n                for (var i in obj) _defaultType[i] = obj[i];\\n            };\\n\\n// ----------------------------- end default type --------------------------------------------\\n\\n            // all components can generate events\\n\\n            if (params.events) {\\n                for (i in params.events)\\n                    self.bind(i, params.events[i]);\\n            }\\n\\n            // all components get this clone function.\\n            // TODO issue 116 showed a problem with this - it seems 'a' that is in\\n            // the clone function's scope is shared by all invocations of it, the classic\\n            // JS closure problem.  for now, jsPlumb does a version of this inline where\\n            // it used to call clone.  but it would be nice to find some time to look\\n            // further at this.\\n            this.clone = function () {\\n                var o = {};//new Object();\\n                this.constructor.apply(o, a);\\n                return o;\\n            }.bind(this);\\n\\n            // user can supply a beforeDetach callback, which will be executed before a detach\\n            // is performed; returning false prevents the detach.\\n            this.isDetachAllowed = function (connection) {\\n                var r = true;\\n                if (this._jsPlumb.beforeDetach) {\\n                    try {\\n                        r = this._jsPlumb.beforeDetach(connection);\\n                    }\\n                    catch (e) {\\n                        _ju.log(\\\"jsPlumb: beforeDetach callback failed\\\", e);\\n                    }\\n                }\\n                return r;\\n            };\\n\\n            // user can supply a beforeDrop callback, which will be executed before a dropped\\n            // connection is confirmed. user can return false to reject connection.\\n            this.isDropAllowed = function (sourceId, targetId, scope, connection, dropEndpoint, source, target) {\\n                var r = this._jsPlumb.instance.checkCondition(\\\"beforeDrop\\\", {\\n                    sourceId: sourceId,\\n                    targetId: targetId,\\n                    scope: scope,\\n                    connection: connection,\\n                    dropEndpoint: dropEndpoint,\\n                    source: source, target: target\\n                });\\n                if (this._jsPlumb.beforeDrop) {\\n                    try {\\n                        r = this._jsPlumb.beforeDrop({\\n                            sourceId: sourceId,\\n                            targetId: targetId,\\n                            scope: scope,\\n                            connection: connection,\\n                            dropEndpoint: dropEndpoint,\\n                            source: source, target: target\\n                        });\\n                    }\\n                    catch (e) {\\n                        _ju.log(\\\"jsPlumb: beforeDrop callback failed\\\", e);\\n                    }\\n                }\\n                return r;\\n            };\\n\\n            var boundListeners = [],\\n                bindAListener = function (obj, type, fn) {\\n                    boundListeners.push([obj, type, fn]);\\n                    obj.bind(type, fn);\\n                },\\n                domListeners = [];\\n\\n            // sets the component associated with listener events. for instance, an overlay delegates\\n            // its events back to a connector. but if the connector is swapped on the underlying connection,\\n            // then this component must be changed. This is called by setConnector in the Connection class.\\n            this.setListenerComponent = function (c) {\\n                for (var i = 0; i < domListeners.length; i++)\\n                    domListeners[i][3] = c;\\n            };\\n\\n\\n        };\\n\\n    var _removeTypeCssHelper = function (component, typeIndex) {\\n        var typeId = component._jsPlumb.types[typeIndex],\\n            type = component._jsPlumb.instance.getType(typeId, component.getTypeDescriptor());\\n\\n        if (type != null) {\\n\\n            if (type.cssClass && component.canvas)\\n                component._jsPlumb.instance.removeClass(component.canvas, type.cssClass);\\n        }\\n    };\\n\\n    _ju.extend(root.jsPlumbUIComponent, _ju.EventGenerator, {\\n\\n        getParameter: function (name) {\\n            return this._jsPlumb.parameters[name];\\n        },\\n\\n        setParameter: function (name, value) {\\n            this._jsPlumb.parameters[name] = value;\\n        },\\n\\n        getParameters: function () {\\n            return this._jsPlumb.parameters;\\n        },\\n\\n        setParameters: function (p) {\\n            this._jsPlumb.parameters = p;\\n        },\\n\\n        getClass:function() {\\n            return jsPlumb.getClass(this.canvas);\\n        },\\n\\n        hasClass:function(clazz) {\\n            return jsPlumb.hasClass(this.canvas, clazz);\\n        },\\n\\n        addClass: function (clazz) {\\n            jsPlumb.addClass(this.canvas, clazz);\\n        },\\n\\n        removeClass: function (clazz) {\\n            jsPlumb.removeClass(this.canvas, clazz);\\n        },\\n\\n        updateClasses: function (classesToAdd, classesToRemove) {\\n            jsPlumb.updateClasses(this.canvas, classesToAdd, classesToRemove);\\n        },\\n\\n        setType: function (typeId, params, doNotRepaint) {\\n            this.clearTypes();\\n            this._jsPlumb.types = _splitType(typeId) || [];\\n            _applyTypes(this, params, doNotRepaint);\\n        },\\n\\n        getType: function () {\\n            return this._jsPlumb.types;\\n        },\\n\\n        reapplyTypes: function (params, doNotRepaint) {\\n            _applyTypes(this, params, doNotRepaint);\\n        },\\n\\n        hasType: function (typeId) {\\n            return this._jsPlumb.types.indexOf(typeId) != -1;\\n        },\\n\\n        addType: function (typeId, params, doNotRepaint) {\\n            var t = _splitType(typeId), _cont = false;\\n            if (t != null) {\\n                for (var i = 0, j = t.length; i < j; i++) {\\n                    if (!this.hasType(t[i])) {\\n                        this._jsPlumb.types.push(t[i]);\\n                        _cont = true;\\n                    }\\n                }\\n                if (_cont) _applyTypes(this, params, doNotRepaint);\\n            }\\n        },\\n\\n        removeType: function (typeId, params, doNotRepaint) {\\n            var t = _splitType(typeId), _cont = false, _one = function (tt) {\\n                var idx = this._jsPlumb.types.indexOf(tt);\\n                if (idx != -1) {\\n                    // remove css class if necessary\\n                    _removeTypeCssHelper(this, idx);\\n                    this._jsPlumb.types.splice(idx, 1);\\n                    return true;\\n                }\\n                return false;\\n            }.bind(this);\\n\\n            if (t != null) {\\n                for (var i = 0, j = t.length; i < j; i++) {\\n                    _cont = _one(t[i]) || _cont;\\n                }\\n                if (_cont) _applyTypes(this, params, doNotRepaint);\\n            }\\n        },\\n        clearTypes: function (params, doNotRepaint) {\\n            var i = this._jsPlumb.types.length;\\n            for (var j = 0; j < i; j++) {\\n                _removeTypeCssHelper(this, 0);\\n                this._jsPlumb.types.splice(0, 1);\\n            }\\n            _applyTypes(this, params, doNotRepaint);\\n        },\\n\\n        toggleType: function (typeId, params, doNotRepaint) {\\n            var t = _splitType(typeId);\\n            if (t != null) {\\n                for (var i = 0, j = t.length; i < j; i++) {\\n                    var idx = this._jsPlumb.types.indexOf(t[i]);\\n                    if (idx != -1) {\\n                        _removeTypeCssHelper(this, idx);\\n                        this._jsPlumb.types.splice(idx, 1);\\n                    }\\n                    else\\n                        this._jsPlumb.types.push(t[i]);\\n                }\\n\\n                _applyTypes(this, params, doNotRepaint);\\n            }\\n        },\\n        applyType: function (t, doNotRepaint) {\\n            this.setPaintStyle(t.paintStyle, doNotRepaint);\\n            this.setHoverPaintStyle(t.hoverPaintStyle, doNotRepaint);\\n            if (t.parameters) {\\n                for (var i in t.parameters)\\n                    this.setParameter(i, t.parameters[i]);\\n            }\\n            this._jsPlumb.paintStyleInUse = this.getPaintStyle();\\n        },\\n        setPaintStyle: function (style, doNotRepaint) {\\n//\\t\\t    \\tthis._jsPlumb.paintStyle = jsPlumb.extend({}, style);\\n// TODO figure out if we want components to clone paintStyle so as not to share it.\\n            this._jsPlumb.paintStyle = style;\\n            this._jsPlumb.paintStyleInUse = this._jsPlumb.paintStyle;\\n            _updateHoverStyle(this);\\n            if (!doNotRepaint) this.repaint();\\n        },\\n        getPaintStyle: function () {\\n            return this._jsPlumb.paintStyle;\\n        },\\n        setHoverPaintStyle: function (style, doNotRepaint) {\\n            //this._jsPlumb.hoverPaintStyle = jsPlumb.extend({}, style);\\n// TODO figure out if we want components to clone paintStyle so as not to share it.\\t\\t    \\t\\n            this._jsPlumb.hoverPaintStyle = style;\\n            _updateHoverStyle(this);\\n            if (!doNotRepaint) this.repaint();\\n        },\\n        getHoverPaintStyle: function () {\\n            return this._jsPlumb.hoverPaintStyle;\\n        },\\n        destroy: function (force) {\\n            if (force || this.typeId == null) {\\n                this.cleanupListeners(); // this is on EventGenerator\\n                this.clone = null;\\n                this._jsPlumb = null;\\n            }\\n        },\\n\\n        isHover: function () {\\n            return this._jsPlumb.hover;\\n        },\\n\\n        setHover: function (hover, ignoreAttachedElements, timestamp) {\\n            // while dragging, we ignore these events.  this keeps the UI from flashing and\\n            // swishing and whatevering.\\n            if (this._jsPlumb && !this._jsPlumb.instance.currentlyDragging && !this._jsPlumb.instance.isHoverSuspended()) {\\n\\n                this._jsPlumb.hover = hover;\\n\\n                if (this.canvas != null) {\\n                    if (this._jsPlumb.instance.hoverClass != null) {\\n                        var method = hover ? \\\"addClass\\\" : \\\"removeClass\\\";\\n                        this._jsPlumb.instance[method](this.canvas, this._jsPlumb.instance.hoverClass);\\n                    }\\n                    if (this._jsPlumb.hoverClass != null) {\\n                        this._jsPlumb.instance[method](this.canvas, this._jsPlumb.hoverClass);\\n                    }\\n                }\\n                if (this._jsPlumb.hoverPaintStyle != null) {\\n                    this._jsPlumb.paintStyleInUse = hover ? this._jsPlumb.hoverPaintStyle : this._jsPlumb.paintStyle;\\n                    if (!this._jsPlumb.instance.isSuspendDrawing()) {\\n                        timestamp = timestamp || _timestamp();\\n                        this.repaint({timestamp: timestamp, recalc: false});\\n                    }\\n                }\\n                // get the list of other affected elements, if supported by this component.\\n                // for a connection, its the endpoints.  for an endpoint, its the connections! surprise.\\n                if (this.getAttachedElements && !ignoreAttachedElements)\\n                    _updateAttachedElements(this, hover, _timestamp(), this);\\n            }\\n        }\\n    });\\n\\n// ------------------------------ END jsPlumbUIComponent --------------------------------------------\\n\\n    var _jsPlumbInstanceIndex = 0,\\n        getInstanceIndex = function () {\\n            var i = _jsPlumbInstanceIndex + 1;\\n            _jsPlumbInstanceIndex++;\\n            return i;\\n        };\\n\\n    var jsPlumbInstance = window.jsPlumbInstance = function (_defaults) {\\n\\n        this.Defaults = {\\n            Anchor: \\\"Bottom\\\",\\n            Anchors: [ null, null ],\\n            ConnectionsDetachable: true,\\n            ConnectionOverlays: [ ],\\n            Connector: \\\"Bezier\\\",\\n            Container: null,\\n            DoNotThrowErrors: false,\\n            DragOptions: { },\\n            DropOptions: { },\\n            Endpoint: \\\"Dot\\\",\\n            EndpointOverlays: [ ],\\n            Endpoints: [ null, null ],\\n            EndpointStyle: { fillStyle: \\\"#456\\\" },\\n            EndpointStyles: [ null, null ],\\n            EndpointHoverStyle: null,\\n            EndpointHoverStyles: [ null, null ],\\n            HoverPaintStyle: null,\\n            LabelStyle: { color: \\\"black\\\" },\\n            LogEnabled: false,\\n            Overlays: [ ],\\n            MaxConnections: 1,\\n            PaintStyle: { lineWidth: 4, strokeStyle: \\\"#456\\\" },\\n            ReattachConnections: false,\\n            RenderMode: \\\"svg\\\",\\n            Scope: \\\"jsPlumb_DefaultScope\\\"\\n        };\\n        if (_defaults) jsPlumb.extend(this.Defaults, _defaults);\\n\\n        this.logEnabled = this.Defaults.LogEnabled;\\n        this._connectionTypes = {};\\n        this._endpointTypes = {};\\n\\n        _ju.EventGenerator.apply(this);\\n\\n        var _currentInstance = this,\\n            _instanceIndex = getInstanceIndex(),\\n            _bb = _currentInstance.bind,\\n            _initialDefaults = {},\\n            _zoom = 1,\\n            _info = function (el) {\\n                if (el == null) return null;\\n                else if (el.nodeType == 3 || el.nodeType == 8) {\\n                    return { el:el, text:true };\\n                }\\n                else {\\n                    var _el = _currentInstance.getElement(el);\\n                    return { el: _el, id: (_ju.isString(el) && _el == null) ? el : _getId(_el) };\\n                }\\n            };\\n\\n        this.getInstanceIndex = function () {\\n            return _instanceIndex;\\n        };\\n\\n        this.setZoom = function (z, repaintEverything) {\\n            _zoom = z;\\n            _currentInstance.fire(\\\"zoom\\\", _zoom);\\n            if (repaintEverything) _currentInstance.repaintEverything();\\n            return true;\\n        };\\n        this.getZoom = function () {\\n            return _zoom;\\n        };\\n\\n        for (var i in this.Defaults)\\n            _initialDefaults[i] = this.Defaults[i];\\n\\n        var _container, _containerDelegations = [];\\n        this.unbindContainer = function() {\\n            if (_container != null && _containerDelegations.length > 0) {\\n                for (var i = 0; i < _containerDelegations.length; i++) {\\n                    _currentInstance.off(_container, _containerDelegations[i][0], _containerDelegations[i][1]);\\n                }\\n            }\\n        };\\n        this.setContainer = function (c) {\\n\\n            this.unbindContainer();\\n\\n            // get container as dom element.\\n            c = this.getElement(c);\\n            // move existing connections and endpoints, if any.\\n            this.select().each(function (conn) {\\n                conn.moveParent(c);\\n            });\\n            this.selectEndpoints().each(function (ep) {\\n                ep.moveParent(c);\\n            });\\n\\n            // set container.\\n            var previousContainer = _container;\\n            _container = c;\\n            _containerDelegations.length = 0;\\n\\n            var _oneDelegateHandler = function (id, e) {\\n                var t = e.srcElement || e.target,\\n                    jp = (t && t.parentNode ? t.parentNode._jsPlumb : null) || (t ? t._jsPlumb : null) || (t && t.parentNode && t.parentNode.parentNode ? t.parentNode.parentNode._jsPlumb : null);\\n                if (jp) {\\n                    jp.fire(id, jp, e);\\n                    // jsplumb also fires every event coming from components/overlays. That's what the test for `jp.component` is for.\\n                    _currentInstance.fire(id, jp.component || jp, e);\\n                }\\n            };\\n\\n            var _addOneDelegate = function(eventId, selector, fn) {\\n                _containerDelegations.push([eventId, fn]);\\n                _currentInstance.on(_container, eventId, selector, fn);\\n            };\\n\\n            // delegate one event on the container to jsplumb elements. it might be possible to\\n            // abstract this out: each of endpoint, connection and overlay could register themselves with\\n            // jsplumb as \\\"component types\\\" or whatever, and provide a suitable selector. this would be\\n            // done by the renderer (although admittedly from 2.0 onwards we're not supporting vml anymore)\\n            var _oneDelegate = function (id) {\\n                // connections.\\n                _addOneDelegate(id, \\\".jsplumb-connector > *\\\", function (e) {\\n                    _oneDelegateHandler(id, e);\\n                });\\n                // endpoints. note they can have an enclosing div, or not.\\n                _addOneDelegate(id, \\\".jsplumb-endpoint, .jsplumb-endpoint > *, .jsplumb-endpoint svg *\\\", function (e) {\\n                    _oneDelegateHandler(id, e);\\n                });\\n                // overlays\\n                _addOneDelegate(id, \\\".jsplumb-overlay, .jsplumb-overlay *\\\", function (e) {\\n                    _oneDelegateHandler(id, e);\\n                });\\n            };\\n\\n            for (var i = 0; i < events.length; i++)\\n                _oneDelegate(events[i]);\\n\\n            // managed elements\\n            for (var elId in managedElements) {\\n                var el = managedElements[elId].el;\\n                if (el.parentNode === previousContainer) {\\n                    previousContainer.removeChild(el);\\n                    _container.appendChild(el);\\n                }\\n            }\\n\\n        };\\n        this.getContainer = function () {\\n            return _container;\\n        };\\n\\n        this.bind = function (event, fn) {\\n            if (\\\"ready\\\" === event && initialized) fn();\\n            else _bb.apply(_currentInstance, [event, fn]);\\n        };\\n\\n        _currentInstance.importDefaults = function (d) {\\n            for (var i in d) {\\n                _currentInstance.Defaults[i] = d[i];\\n            }\\n            if (d.Container)\\n                _currentInstance.setContainer(d.Container);\\n\\n            return _currentInstance;\\n        };\\n\\n        _currentInstance.restoreDefaults = function () {\\n            _currentInstance.Defaults = jsPlumb.extend({}, _initialDefaults);\\n            return _currentInstance;\\n        };\\n\\n        var log = null,\\n            initialized = false,\\n        // TODO remove from window scope\\n            connections = [],\\n        // map of element id -> endpoint lists. an element can have an arbitrary\\n        // number of endpoints on it, and not all of them have to be connected\\n        // to anything.\\n            endpointsByElement = {},\\n            endpointsByUUID = {},\\n            managedElements = {},\\n            offsets = {},\\n            offsetTimestamps = {},\\n            draggableStates = {},\\n            connectionBeingDragged = false,\\n            sizes = [],\\n            _suspendDrawing = false,\\n            _suspendedAt = null,\\n            DEFAULT_SCOPE = this.Defaults.Scope,\\n            renderMode = null,  // will be set in init()\\n            _curIdStamp = 1,\\n            _idstamp = function () {\\n                return \\\"\\\" + _curIdStamp++;\\n            },\\n\\n        //\\n        // appends an element to some other element, which is calculated as follows:\\n        //\\n        // 1. if Container exists, use that element.\\n        // 2. if the 'parent' parameter exists, use that.\\n        // 3. otherwise just use the root element.\\n        //\\n        //\\n            _appendElement = function (el, parent) {\\n                if (_container)\\n                    _container.appendChild(el);\\n                else if (!parent)\\n                    this.appendToRoot(el);\\n                else\\n                    this.getElement(parent).appendChild(el);\\n            }.bind(this),\\n\\n        //\\n        // Draws an endpoint and its connections. this is the main entry point into drawing connections as well\\n        // as endpoints, since jsPlumb is endpoint-centric under the hood.\\n        //\\n        // @param element element to draw (of type library specific element object)\\n        // @param ui UI object from current library's event system. optional.\\n        // @param timestamp timestamp for this paint cycle. used to speed things up a little by cutting down the amount of offset calculations we do.\\n        // @param clearEdits defaults to false; indicates that mouse edits for connectors should be cleared\\n        ///\\n            _draw = function (element, ui, timestamp, clearEdits) {\\n\\n                // TODO is it correct to filter by headless at this top level? how would a headless adapter ever repaint?\\n                // NO. it is not correct.\\n                if (!jsPlumb.headless && !_suspendDrawing) {\\n                    var id = _getId(element),\\n                        repaintEls = _currentInstance.getDragManager().getElementsForDraggable(id);\\n\\n                    if (timestamp == null) timestamp = _timestamp();\\n\\n                    // update the offset of everything _before_ we try to draw anything.\\n                    var o = _updateOffset({ elId: id, offset: ui, recalc: false, timestamp: timestamp });\\n\\n                    if (repaintEls) {\\n                        for (var i in repaintEls) {\\n                            _updateOffset({\\n                                elId: repaintEls[i].id,\\n                                offset: {\\n                                    left: o.o.left + repaintEls[i].offset.left,\\n                                    top: o.o.top + repaintEls[i].offset.top\\n                                },\\n                                recalc: false,\\n                                timestamp: timestamp\\n                            });\\n                        }\\n                    }\\n\\n                    _currentInstance.anchorManager.redraw(id, ui, timestamp, null, clearEdits);\\n\\n                    if (repaintEls) {\\n                        for (var j in repaintEls) {\\n                            _currentInstance.anchorManager.redraw(repaintEls[j].id, ui, timestamp, repaintEls[j].offset, clearEdits, true);\\n                        }\\n                    }\\n                }\\n            },\\n\\n        //\\n        // gets an Endpoint by uuid.\\n        //\\n            _getEndpoint = function (uuid) {\\n                return endpointsByUUID[uuid];\\n            },\\n\\n            /**\\n             * inits a draggable if it's not already initialised.\\n             * TODO: somehow abstract this to the adapter, because the concept of \\\"draggable\\\" has no\\n             * place on the server.\\n             */\\n            _initDraggableIfNecessary = function (element, isDraggable, dragOptions, id) {\\n                // move to DragManager?\\n                if (!jsPlumb.headless) {\\n                    var _draggable = isDraggable == null ? false : isDraggable;\\n                    if (_draggable) {\\n                        if (jsPlumb.isDragSupported(element, _currentInstance)) {\\n                            var options = dragOptions || _currentInstance.Defaults.DragOptions;\\n                            options = jsPlumb.extend({}, options); // make a copy.\\n                            if (!jsPlumb.isAlreadyDraggable(element, _currentInstance)) {\\n                                var dragEvent = jsPlumb.dragEvents.drag,\\n                                    stopEvent = jsPlumb.dragEvents.stop,\\n                                    startEvent = jsPlumb.dragEvents.start,\\n                                    _del = _currentInstance.getElement(element),\\n                                    _ancestor = _currentInstance.getDragManager().getDragAncestor(_del),\\n                                    _noOffset = {left: 0, top: 0},\\n                                    _ancestorOffset = _noOffset,\\n                                    _started = false;\\n\\n                                _manage(id, element);\\n\\n                                options[startEvent] = _ju.wrap(options[startEvent], function () {\\n                                    _ancestorOffset = _ancestor != null ? _currentInstance.getOffset(_ancestor) : _noOffset;\\n                                    _currentInstance.setHoverSuspended(true);\\n                                    _currentInstance.select({source: element}).addClass(_currentInstance.elementDraggingClass + \\\" \\\" + _currentInstance.sourceElementDraggingClass, true);\\n                                    _currentInstance.select({target: element}).addClass(_currentInstance.elementDraggingClass + \\\" \\\" + _currentInstance.targetElementDraggingClass, true);\\n                                    _currentInstance.setConnectionBeingDragged(true);\\n                                    if (options.canDrag) return dragOptions.canDrag();\\n                                }, false);\\n\\n                                options[dragEvent] = _ju.wrap(options[dragEvent], function () {\\n                                    // TODO: here we could actually use getDragObject, and then compute it ourselves,\\n                                    // since every adapter does the same thing. but i'm not sure why YUI's getDragObject\\n                                    // differs from getUIPosition so much\\n                                    var ui = _currentInstance.getUIPosition(arguments, _currentInstance.getZoom());\\n                                    // adjust by ancestor offset if there is one: this is for the case that a draggable\\n                                    // is contained inside some other element that is not the Container.\\n                                    ui.left += _ancestorOffset.left;\\n                                    ui.top += _ancestorOffset.top;\\n                                    _draw(element, ui, null, true);\\n                                    if (_started) _currentInstance.addClass(element, \\\"jsplumb-dragged\\\");\\n                                    _started = true;\\n                                });\\n                                options[stopEvent] = _ju.wrap(options[stopEvent], function () {\\n                                    var elements = arguments[0].selection;\\n                                    var uip = _currentInstance.getUIPosition(arguments);\\n\\n                                    // this is one element\\n                                    var _one = function (_e) {\\n                                        _draw(_e[0], uip);\\n                                        _currentInstance.removeClass(_e[0], \\\"jsplumb-dragged\\\");\\n                                        _currentInstance.select({source: _e[0]}).removeClass(_currentInstance.elementDraggingClass + \\\" \\\" + _currentInstance.sourceElementDraggingClass, true);\\n                                        _currentInstance.select({target: _e[0]}).removeClass(_currentInstance.elementDraggingClass + \\\" \\\" + _currentInstance.targetElementDraggingClass, true);\\n                                        _currentInstance.getDragManager().dragEnded(_e[0]);\\n                                    };\\n\\n                                    for (var i = 0; i < elements.length; i++)\\n                                        _one(elements[i]);\\n\\n                                    // this is common across all\\n                                    _started = false;\\n                                    _currentInstance.setHoverSuspended(false);\\n                                    _currentInstance.setConnectionBeingDragged(false);\\n                                });\\n                                var elId = _getId(element); // need ID\\n                                draggableStates[elId] = true;\\n                                var draggable = draggableStates[elId];\\n                                options.disabled = draggable == null ? false : !draggable;\\n                                _currentInstance.initDraggable(element, options);\\n                                _currentInstance.getDragManager().register(element);\\n                            }\\n                            else {\\n                                // already draggable. attach any start, drag or stop listeners to the current Drag.\\n                                if (dragOptions.force) {\\n                                    _currentInstance.initDraggable(element, options);\\n                                }\\n                            }\\n                        }\\n                    }\\n                }\\n            },\\n\\n            _scopeMatch = function (e1, e2) {\\n                var s1 = e1.scope.split(/\\\\s/), s2 = e2.scope.split(/\\\\s/);\\n                for (var i = 0; i < s1.length; i++)\\n                    for (var j = 0; j < s2.length; j++)\\n                        if (s2[j] == s1[i]) return true;\\n\\n                return false;\\n            },\\n\\n        /*\\n         * prepares a final params object that can be passed to _newConnection, taking into account defaults, events, etc.\\n         */\\n            _prepareConnectionParams = function (params, referenceParams) {\\n                var _p = jsPlumb.extend({ }, params);\\n                if (referenceParams) jsPlumb.extend(_p, referenceParams);\\n\\n                // hotwire endpoints passed as source or target to sourceEndpoint/targetEndpoint, respectively.\\n                if (_p.source) {\\n                    if (_p.source.endpoint)\\n                        _p.sourceEndpoint = _p.source;\\n                    else\\n                        _p.source = _currentInstance.getElement(_p.source);\\n                }\\n                if (_p.target) {\\n                    if (_p.target.endpoint)\\n                        _p.targetEndpoint = _p.target;\\n                    else\\n                        _p.target = _currentInstance.getElement(_p.target);\\n                }\\n\\n                // test for endpoint uuids to connect\\n                if (params.uuids) {\\n                    _p.sourceEndpoint = _getEndpoint(params.uuids[0]);\\n                    _p.targetEndpoint = _getEndpoint(params.uuids[1]);\\n                }\\n\\n                // now ensure that if we do have Endpoints already, they're not full.\\n                // source:\\n                if (_p.sourceEndpoint && _p.sourceEndpoint.isFull()) {\\n                    _ju.log(_currentInstance, \\\"could not add connection; source endpoint is full\\\");\\n                    return;\\n                }\\n\\n                // target:\\n                if (_p.targetEndpoint && _p.targetEndpoint.isFull()) {\\n                    _ju.log(_currentInstance, \\\"could not add connection; target endpoint is full\\\");\\n                    return;\\n                }\\n\\n                // if source endpoint mandates connection type and nothing specified in our params, use it.\\n                if (!_p.type && _p.sourceEndpoint)\\n                    _p.type = _p.sourceEndpoint.connectionType;\\n\\n                // copy in any connectorOverlays that were specified on the source endpoint.\\n                // it doesnt copy target endpoint overlays.  i'm not sure if we want it to or not.\\n                if (_p.sourceEndpoint && _p.sourceEndpoint.connectorOverlays) {\\n                    _p.overlays = _p.overlays || [];\\n                    for (var i = 0, j = _p.sourceEndpoint.connectorOverlays.length; i < j; i++) {\\n                        _p.overlays.push(_p.sourceEndpoint.connectorOverlays[i]);\\n                    }\\n                }\\n\\n                // scope\\n                if (_p.sourceEndpoint && _p.sourceEndpoint.scope) {\\n                    _p.scope = _p.sourceEndpoint.scope;\\n                }\\n\\n                // pointer events\\n                if (!_p[\\\"pointer-events\\\"] && _p.sourceEndpoint && _p.sourceEndpoint.connectorPointerEvents)\\n                    _p[\\\"pointer-events\\\"] = _p.sourceEndpoint.connectorPointerEvents;\\n\\n                var _mergeOverrides = function (def, values) {\\n                    var m = jsPlumb.extend({}, def);\\n                    for (var i in values) {\\n                        if (values[i]) m[i] = values[i];\\n                    }\\n                    return m;\\n                };\\n\\n                var _addEndpoint = function (el, def, idx) {\\n                    return _currentInstance.addEndpoint(el, _mergeOverrides(def, {\\n                        anchor: _p.anchors ? _p.anchors[idx] : _p.anchor,\\n                        endpoint: _p.endpoints ? _p.endpoints[idx] : _p.endpoint,\\n                        paintStyle: _p.endpointStyles ? _p.endpointStyles[idx] : _p.endpointStyle,\\n                        hoverPaintStyle: _p.endpointHoverStyles ? _p.endpointHoverStyles[idx] : _p.endpointHoverStyle\\n                    }));\\n                };\\n\\n                // check for makeSource/makeTarget specs.\\n\\n                var _oneElementDef = function (type, idx, defs, matchType) {\\n                    if (_p[type] && !_p[type].endpoint && !_p[type + \\\"Endpoint\\\"] && !_p.newConnection) {\\n                        var tid = _getId(_p[type]), tep = defs[tid];\\n\\n                        tep = tep ? tep[matchType] : null;\\n\\n                        if (tep) {\\n                            // if not enabled, return.\\n                            if (!tep.enabled) return false;\\n                            var newEndpoint = tep.endpoint != null && tep.endpoint._jsPlumb ? tep.endpoint : _addEndpoint(_p[type], tep.def, idx);\\n                            if (newEndpoint.isFull()) return false;\\n                            _p[type + \\\"Endpoint\\\"] = newEndpoint;\\n                            newEndpoint._doNotDeleteOnDetach = false; // reset.\\n                            newEndpoint._deleteOnDetach = true;\\n                            if (tep.uniqueEndpoint) {\\n                                if (!tep.endpoint) {\\n                                    tep.endpoint = newEndpoint;\\n                                    newEndpoint._deleteOnDetach = false;\\n                                    newEndpoint._doNotDeleteOnDetach = true;\\n                                }\\n                                else\\n                                    newEndpoint.finalEndpoint = tep.endpoint;\\n                            }\\n                        }\\n                    }\\n                };\\n\\n                if (_oneElementDef(\\\"source\\\", 0, this.sourceEndpointDefinitions, _p.type || \\\"default\\\") === false) return;\\n                if (_oneElementDef(\\\"target\\\", 1, this.targetEndpointDefinitions, _p.type || \\\"default\\\") === false) return;\\n\\n                // last, ensure scopes match\\n                if (_p.sourceEndpoint && _p.targetEndpoint)\\n                    if (!_scopeMatch(_p.sourceEndpoint, _p.targetEndpoint)) _p = null;\\n\\n                return _p;\\n            }.bind(_currentInstance),\\n\\n            _newConnection = function (params) {\\n                var connectionFunc = _currentInstance.Defaults.ConnectionType || _currentInstance.getDefaultConnectionType();\\n\\n                params._jsPlumb = _currentInstance;\\n                params.newConnection = _newConnection;\\n                params.newEndpoint = _newEndpoint;\\n                params.endpointsByUUID = endpointsByUUID;\\n                params.endpointsByElement = endpointsByElement;\\n                params.finaliseConnection = _finaliseConnection;\\n                params.id = \\\"con_\\\" + _idstamp();\\n                var con = new connectionFunc(params);\\n\\n                // if the connection is draggable, then maybe we need to tell the target endpoint to init the\\n                // dragging code. it won't run again if it already configured to be draggable.\\n                if (con.isDetachable()) {\\n                    con.endpoints[0].initDraggable(\\\"_jsPlumbSource\\\");\\n                    con.endpoints[1].initDraggable(\\\"_jsPlumbTarget\\\");\\n                }\\n\\n                return con;\\n            },\\n\\n        //\\n        // adds the connection to the backing model, fires an event if necessary and then redraws\\n        //\\n            _finaliseConnection = _currentInstance.finaliseConnection = function (jpc, params, originalEvent, doInformAnchorManager) {\\n                params = params || {};\\n                // add to list of connections (by scope).\\n                if (!jpc.suspendedEndpoint)\\n                    connections.push(jpc);\\n\\n                jpc.pending = null;\\n\\n                // turn off isTemporarySource on the source endpoint (only viable on first draw)\\n                jpc.endpoints[0].isTemporarySource = false;\\n\\n                // always inform the anchor manager\\n                // except that if jpc has a suspended endpoint it's not true to say the\\n                // connection is new; it has just (possibly) moved. the question is whether\\n                // to make that call here or in the anchor manager.  i think perhaps here.\\n                if (doInformAnchorManager !== false)\\n                    _currentInstance.anchorManager.newConnection(jpc);\\n\\n                // force a paint\\n                _draw(jpc.source);\\n\\n                // fire an event\\n                if (!params.doNotFireConnectionEvent && params.fireEvent !== false) {\\n\\n                    var eventArgs = {\\n                        connection: jpc,\\n                        source: jpc.source, target: jpc.target,\\n                        sourceId: jpc.sourceId, targetId: jpc.targetId,\\n                        sourceEndpoint: jpc.endpoints[0], targetEndpoint: jpc.endpoints[1]\\n                    };\\n\\n                    _currentInstance.fire(\\\"connection\\\", eventArgs, originalEvent);\\n                }\\n            },\\n\\n        /*\\n         factory method to prepare a new endpoint.  this should always be used instead of creating Endpoints\\n         manually, since this method attaches event listeners and an id.\\n         */\\n            _newEndpoint = function (params, id) {\\n                var endpointFunc = _currentInstance.Defaults.EndpointType || jsPlumb.Endpoint;\\n                var _p = jsPlumb.extend({}, params);\\n                _p._jsPlumb = _currentInstance;\\n                _p.newConnection = _newConnection;\\n                _p.newEndpoint = _newEndpoint;\\n                _p.endpointsByUUID = endpointsByUUID;\\n                _p.endpointsByElement = endpointsByElement;\\n                _p.fireDetachEvent = fireDetachEvent;\\n                _p.elementId = id || _getId(_p.source);\\n                var ep = new endpointFunc(_p);\\n                ep.id = \\\"ep_\\\" + _idstamp();\\n                _manage(_p.elementId, _p.source);\\n\\n                if (!jsPlumb.headless)\\n                    _currentInstance.getDragManager().endpointAdded(_p.source, id);\\n\\n                return ep;\\n            },\\n\\n        /*\\n         * performs the given function operation on all the connections found\\n         * for the given element id; this means we find all the endpoints for\\n         * the given element, and then for each endpoint find the connectors\\n         * connected to it. then we pass each connection in to the given\\n         * function.\\n         */\\n            _operation = function (elId, func, endpointFunc) {\\n                var endpoints = endpointsByElement[elId];\\n                if (endpoints && endpoints.length) {\\n                    for (var i = 0, ii = endpoints.length; i < ii; i++) {\\n                        for (var j = 0, jj = endpoints[i].connections.length; j < jj; j++) {\\n                            var retVal = func(endpoints[i].connections[j]);\\n                            // if the function passed in returns true, we exit.\\n                            // most functions return false.\\n                            if (retVal) return;\\n                        }\\n                        if (endpointFunc) endpointFunc(endpoints[i]);\\n                    }\\n                }\\n            },\\n\\n            _setDraggable = function (element, draggable) {\\n                return jsPlumb.each(element, function (el) {\\n                    if (_currentInstance.isDragSupported(el)) {\\n                        draggableStates[_currentInstance.getAttribute(el, \\\"id\\\")] = draggable;\\n                        _currentInstance.setElementDraggable(el, draggable);\\n                    }\\n                });\\n            },\\n        /*\\n         * private method to do the business of hiding/showing.\\n         *\\n         * @param el\\n         *            either Id of the element in question or a library specific\\n         *            object for the element.\\n         * @param state\\n         *            String specifying a value for the css 'display' property\\n         *            ('block' or 'none').\\n         */\\n            _setVisible = function (el, state, alsoChangeEndpoints) {\\n                state = state === \\\"block\\\";\\n                var endpointFunc = null;\\n                if (alsoChangeEndpoints) {\\n                    if (state) endpointFunc = function (ep) {\\n                        ep.setVisible(true, true, true);\\n                    };\\n                    else endpointFunc = function (ep) {\\n                        ep.setVisible(false, true, true);\\n                    };\\n                }\\n                var info = _info(el);\\n                _operation(info.id, function (jpc) {\\n                    if (state && alsoChangeEndpoints) {\\n                        // this test is necessary because this functionality is new, and i wanted to maintain backwards compatibility.\\n                        // this block will only set a connection to be visible if the other endpoint in the connection is also visible.\\n                        var oidx = jpc.sourceId === info.id ? 1 : 0;\\n                        if (jpc.endpoints[oidx].isVisible()) jpc.setVisible(true);\\n                    }\\n                    else  // the default behaviour for show, and what always happens for hide, is to just set the visibility without getting clever.\\n                        jpc.setVisible(state);\\n                }, endpointFunc);\\n            },\\n        /*\\n         * toggles the draggable state of the given element(s).\\n         * el is either an id, or an element object, or a list of ids/element objects.\\n         */\\n            _toggleDraggable = function (el) {\\n                return jsPlumb.each(el, function (el) {\\n                    var elId = _currentInstance.getAttribute(el, \\\"id\\\");\\n                    var state = draggableStates[elId] == null ? false : draggableStates[elId];\\n                    state = !state;\\n                    draggableStates[elId] = state;\\n                    _currentInstance.setDraggable(el, state);\\n                    return state;\\n                }.bind(this));\\n            },\\n            /**\\n             * private method to do the business of toggling hiding/showing.\\n             */\\n            _toggleVisible = function (elId, changeEndpoints) {\\n                var endpointFunc = null;\\n                if (changeEndpoints) {\\n                    endpointFunc = function (ep) {\\n                        var state = ep.isVisible();\\n                        ep.setVisible(!state);\\n                    };\\n                }\\n                _operation(elId, function (jpc) {\\n                    var state = jpc.isVisible();\\n                    jpc.setVisible(!state);\\n                }, endpointFunc);\\n            },\\n\\n        // TODO comparison performance\\n            _getCachedData = function (elId) {\\n                var o = offsets[elId];\\n                if (!o)\\n                    return _updateOffset({elId: elId});\\n                else\\n                    return {o: o, s: sizes[elId]};\\n            },\\n\\n            /**\\n             * gets an id for the given element, creating and setting one if\\n             * necessary.  the id is of the form\\n             *\\n             *    jsPlumb_<instance index>_<index in instance>\\n             *\\n             * where \\\"index in instance\\\" is a monotonically increasing integer that starts at 0,\\n             * for each instance.  this method is used not only to assign ids to elements that do not\\n             * have them but also to connections and endpoints.\\n             */\\n            _getId = function (element, uuid, doNotCreateIfNotFound) {\\n                if (_ju.isString(element)) return element;\\n                if (element == null) return null;\\n                var id = _currentInstance.getAttribute(element, \\\"id\\\");\\n                if (!id || id === \\\"undefined\\\") {\\n                    // check if fixed uuid parameter is given\\n                    if (arguments.length == 2 && arguments[1] !== undefined)\\n                        id = uuid;\\n                    else if (arguments.length == 1 || (arguments.length == 3 && !arguments[2]))\\n                        id = \\\"jsPlumb_\\\" + _instanceIndex + \\\"_\\\" + _idstamp();\\n\\n                    if (!doNotCreateIfNotFound) _currentInstance.setAttribute(element, \\\"id\\\", id);\\n                }\\n                return id;\\n            };\\n\\n        this.setConnectionBeingDragged = function (v) {\\n            connectionBeingDragged = v;\\n        };\\n        this.isConnectionBeingDragged = function () {\\n            return connectionBeingDragged;\\n        };\\n\\n        /**\\n         * Returns a map of all the elements this jsPlumbInstance is currently managing.\\n         * @returns {Object} Map of [id-> {el, endpoint[], connection, position}] information.\\n         */\\n        this.getManagedElements = function() {\\n            return managedElements;\\n        };\\n\\n        this.getRenderMode = function() { return \\\"svg\\\"; };\\n\\n        this.connectorClass = \\\"jsplumb-connector\\\";\\n        this.connectorOutlineClass = \\\"jsplumb-connector-outline\\\";\\n        this.editableConnectorClass = \\\"jsplumb-connector-editable\\\";\\n        this.connectedClass = \\\"jsplumb-connected\\\";\\n        this.hoverClass = \\\"jsplumb-hover\\\";\\n        this.endpointClass = \\\"jsplumb-endpoint\\\";\\n        this.endpointConnectedClass = \\\"jsplumb-endpoint-connected\\\";\\n        this.endpointFullClass = \\\"jsplumb-endpoint-full\\\";\\n        this.endpointDropAllowedClass = \\\"jsplumb-endpoint-drop-allowed\\\";\\n        this.endpointDropForbiddenClass = \\\"jsplumb-endpoint-drop-forbidden\\\";\\n        this.overlayClass = \\\"jsplumb-overlay\\\";\\n        this.draggingClass = \\\"jsplumb-dragging\\\";\\n        this.elementDraggingClass = \\\"jsplumb-element-dragging\\\";\\n        this.sourceElementDraggingClass = \\\"jsplumb-source-element-dragging\\\";\\n        this.targetElementDraggingClass = \\\"jsplumb-target-element-dragging\\\";\\n        this.endpointAnchorClassPrefix = \\\"jsplumb-endpoint-anchor\\\";\\n        this.hoverSourceClass = \\\"jsplumb-source-hover\\\";\\n        this.hoverTargetClass = \\\"jsplumb-target-hover\\\";\\n        this.dragSelectClass = \\\"jsplumb-drag-select\\\";\\n\\n        this.Anchors = {};\\n        this.Connectors = {  \\\"svg\\\": {} };\\n        this.Endpoints = { \\\"svg\\\": {} };\\n        this.Overlays = { \\\"svg\\\": {} } ;\\n        this.ConnectorRenderers = {};\\n        this.SVG = \\\"svg\\\";\\n\\n// --------------------------- jsPlumbInstance public API ---------------------------------------------------------\\n\\n\\n        this.addEndpoint = function (el, params, referenceParams) {\\n            referenceParams = referenceParams || {};\\n            var p = jsPlumb.extend({}, referenceParams);\\n            jsPlumb.extend(p, params);\\n            p.endpoint = p.endpoint || _currentInstance.Defaults.Endpoint;\\n            p.paintStyle = p.paintStyle || _currentInstance.Defaults.EndpointStyle;\\n\\n            var results = [],\\n                inputs = (_ju.isArray(el) || (el.length != null && !_ju.isString(el))) ? el : [ el ];\\n\\n            for (var i = 0, j = inputs.length; i < j; i++) {\\n                p.source = _currentInstance.getElement(inputs[i]);\\n                _ensureContainer(p.source);\\n\\n                var id = _getId(p.source), e = _newEndpoint(p, id);\\n\\n                // SP new. here we have introduced a class-wide element manager, which is responsible\\n                // for getting object dimensions and width/height, and for updating these values only\\n                // when necessary (after a drag, or on a forced refresh call).\\n                var myOffset = _manage(id, p.source).info.o;\\n                _ju.addToList(endpointsByElement, id, e);\\n\\n                if (!_suspendDrawing) {\\n                    e.paint({\\n                        anchorLoc: e.anchor.compute({ xy: [ myOffset.left, myOffset.top ], wh: sizes[id], element: e, timestamp: _suspendedAt }),\\n                        timestamp: _suspendedAt\\n                    });\\n                }\\n\\n                results.push(e);\\n                e._doNotDeleteOnDetach = true; // mark this as being added via addEndpoint.\\n            }\\n\\n            return results.length == 1 ? results[0] : results;\\n        };\\n\\n        this.addEndpoints = function (el, endpoints, referenceParams) {\\n            var results = [];\\n            for (var i = 0, j = endpoints.length; i < j; i++) {\\n                var e = _currentInstance.addEndpoint(el, endpoints[i], referenceParams);\\n                if (_ju.isArray(e))\\n                    Array.prototype.push.apply(results, e);\\n                else results.push(e);\\n            }\\n            return results;\\n        };\\n\\n        this.animate = function (el, properties, options) {\\n            if (!this.animationSupported) return false;\\n\\n            options = options || {};\\n            var del = _currentInstance.getElement(el),\\n                id = _getId(del),\\n                stepFunction = jsPlumb.animEvents.step,\\n                completeFunction = jsPlumb.animEvents.complete;\\n\\n            options[stepFunction] = _ju.wrap(options[stepFunction], function () {\\n                _currentInstance.revalidate(id);\\n            });\\n\\n            // onComplete repaints, just to make sure everything looks good at the end of the animation.\\n            options[completeFunction] = _ju.wrap(options[completeFunction], function () {\\n                _currentInstance.revalidate(id);\\n            });\\n\\n            _currentInstance.doAnimate(del, properties, options);\\n        };\\n\\n        /**\\n         * checks for a listener for the given condition, executing it if found, passing in the given value.\\n         * condition listeners would have been attached using \\\"bind\\\" (which is, you could argue, now overloaded, since\\n         * firing click events etc is a bit different to what this does).  i thought about adding a \\\"bindCondition\\\"\\n         * or something, but decided against it, for the sake of simplicity. jsPlumb will never fire one of these\\n         * condition events anyway.\\n         */\\n        this.checkCondition = function (conditionName, args) {\\n            var l = _currentInstance.getListener(conditionName),\\n                r = true;\\n\\n            if (l && l.length > 0) {\\n                var values = Array.prototype.slice.call(arguments, 1);\\n                try {\\n                    for (var i = 0, j = l.length; i < j; i++) {\\n                        r = r && l[i].apply(l[i], values);\\n                    }\\n                }\\n                catch (e) {\\n                    _ju.log(_currentInstance, \\\"cannot check condition [\\\" + conditionName + \\\"]\\\" + e);\\n                }\\n            }\\n            return r;\\n        };\\n\\n        this.connect = function (params, referenceParams) {\\n            // prepare a final set of parameters to create connection with\\n            var _p = _prepareConnectionParams(params, referenceParams), jpc;\\n            // TODO probably a nicer return value if the connection was not made.  _prepareConnectionParams\\n            // will return null (and log something) if either endpoint was full.  what would be nicer is to\\n            // create a dedicated 'error' object.\\n            if (_p) {\\n                if (_p.source == null && _p.sourceEndpoint == null) {\\n                    _ju.log(\\\"Cannot establish connection - source does not exist\\\");\\n                    return;\\n                }\\n                if (_p.target == null && _p.targetEndpoint == null) {\\n                    _ju.log(\\\"Cannot establish connection - target does not exist\\\");\\n                    return;\\n                }\\n                _ensureContainer(_p.source);\\n                // create the connection.  it is not yet registered\\n                jpc = _newConnection(_p);\\n                // now add it the model, fire an event, and redraw\\n                _finaliseConnection(jpc, _p);\\n            }\\n            return jpc;\\n        };\\n\\n        var stTypes = [\\n            { el: \\\"source\\\", elId: \\\"sourceId\\\", epDefs: \\\"sourceEndpointDefinitions\\\" },\\n            { el: \\\"target\\\", elId: \\\"targetId\\\", epDefs: \\\"targetEndpointDefinitions\\\" }\\n        ];\\n\\n        var _set = function (c, el, idx, doNotRepaint) {\\n            var ep, _st = stTypes[idx], cId = c[_st.elId], cEl = c[_st.el], sid, sep,\\n                oldEndpoint = c.endpoints[idx];\\n\\n            var evtParams = {\\n                index: idx,\\n                originalSourceId: idx === 0 ? cId : c.sourceId,\\n                newSourceId: c.sourceId,\\n                originalTargetId: idx == 1 ? cId : c.targetId,\\n                newTargetId: c.targetId,\\n                connection: c\\n            };\\n\\n            if (el.constructor == jsPlumb.Endpoint) { // TODO here match the current endpoint class; users can change it {\\n                ep = el;\\n                ep.addConnection(c);\\n            }\\n            else {\\n                sid = _getId(el);\\n                sep = this[_st.epDefs][sid];\\n\\n                if (sid === c[_st.elId])\\n                    ep = null;  // dont change source/target if the element is already the one given.\\n                else if (sep) {\\n                    for (var t in sep) {\\n                        if (!sep[t].enabled) return;\\n                        ep = sep[t].endpoint != null && sep[t].endpoint._jsPlumb ? sep[t].endpoint : this.addEndpoint(el, sep[t].def);\\n                        if (sep[t].uniqueEndpoint) sep[t].endpoint = ep;\\n                        ep._doNotDeleteOnDetach = false;\\n                        ep._deleteOnDetach = true;\\n                        ep.addConnection(c);\\n                    }\\n                }\\n                else {\\n                    ep = c.makeEndpoint(idx === 0, el, sid);\\n                    ep._doNotDeleteOnDetach = false;\\n                    ep._deleteOnDetach = true;\\n                }\\n            }\\n\\n            if (ep != null) {\\n                oldEndpoint.detachFromConnection(c);\\n                c.endpoints[idx] = ep;\\n                c[_st.el] = ep.element;\\n                c[_st.elId] = ep.elementId;\\n                evtParams[idx === 0 ? \\\"newSourceId\\\" : \\\"newTargetId\\\"] = ep.elementId;\\n\\n                fireMoveEvent(evtParams);\\n\\n                if (!doNotRepaint)\\n                    c.repaint();\\n            }\\n\\n            return evtParams;\\n\\n        }.bind(this);\\n\\n        this.setSource = function (connection, el, doNotRepaint) {\\n            var p = _set(connection, el, 0, doNotRepaint);\\n            this.anchorManager.sourceChanged(p.originalSourceId, p.newSourceId, connection);\\n        };\\n        this.setTarget = function (connection, el, doNotRepaint) {\\n            var p = _set(connection, el, 1, doNotRepaint);\\n            this.anchorManager.updateOtherEndpoint(p.originalSourceId, p.originalTargetId, p.newTargetId, connection);\\n        };\\n\\n        this.deleteEndpoint = function (object, dontUpdateHover) {\\n            var endpoint = (typeof object === \\\"string\\\") ? endpointsByUUID[object] : object;\\n            if (endpoint) {\\n                _currentInstance.deleteObject({ endpoint: endpoint, dontUpdateHover: dontUpdateHover });\\n            }\\n            return _currentInstance;\\n        };\\n\\n        this.deleteEveryEndpoint = function () {\\n            var _is = _currentInstance.setSuspendDrawing(true);\\n            for (var id in endpointsByElement) {\\n                var endpoints = endpointsByElement[id];\\n                if (endpoints && endpoints.length) {\\n                    for (var i = 0, j = endpoints.length; i < j; i++) {\\n                        _currentInstance.deleteEndpoint(endpoints[i], true);\\n                    }\\n                }\\n            }\\n            endpointsByElement = {};\\n            // SP new\\n            managedElements = {};\\n            endpointsByUUID = {};\\n            offsets = {};\\n            offsetTimestamps = {};\\n            _currentInstance.anchorManager.reset();\\n            _currentInstance.getDragManager().reset();\\n            if (!_is) _currentInstance.setSuspendDrawing(false);\\n            return _currentInstance;\\n        };\\n\\n        var fireDetachEvent = function (jpc, doFireEvent, originalEvent) {\\n            // may have been given a connection, or in special cases, an object\\n            var connType = _currentInstance.Defaults.ConnectionType || _currentInstance.getDefaultConnectionType(),\\n                argIsConnection = jpc.constructor == connType,\\n                params = argIsConnection ? {\\n                    connection: jpc,\\n                    source: jpc.source, target: jpc.target,\\n                    sourceId: jpc.sourceId, targetId: jpc.targetId,\\n                    sourceEndpoint: jpc.endpoints[0], targetEndpoint: jpc.endpoints[1]\\n                } : jpc;\\n\\n            if (doFireEvent)\\n                _currentInstance.fire(\\\"connectionDetached\\\", params, originalEvent);\\n\\n            _currentInstance.anchorManager.connectionDetached(params);\\n        };\\n\\n        var fireMoveEvent = _currentInstance.fireMoveEvent = function (params, evt) {\\n            _currentInstance.fire(\\\"connectionMoved\\\", params, evt);\\n        };\\n\\n        this.unregisterEndpoint = function (endpoint) {\\n            //if (endpoint._jsPlumb == null) return;\\n            if (endpoint._jsPlumb.uuid) endpointsByUUID[endpoint._jsPlumb.uuid] = null;\\n            _currentInstance.anchorManager.deleteEndpoint(endpoint);\\n            // TODO at least replace this with a removeWithFunction call.\\n            for (var e in endpointsByElement) {\\n                var endpoints = endpointsByElement[e];\\n                if (endpoints) {\\n                    var newEndpoints = [];\\n                    for (var i = 0, j = endpoints.length; i < j; i++)\\n                        if (endpoints[i] != endpoint) newEndpoints.push(endpoints[i]);\\n\\n                    endpointsByElement[e] = newEndpoints;\\n                }\\n                if (endpointsByElement[e].length < 1) {\\n                    delete endpointsByElement[e];\\n                }\\n            }\\n        };\\n\\n        this.detach = function () {\\n\\n            if (arguments.length === 0) return;\\n            var connType = _currentInstance.Defaults.ConnectionType || _currentInstance.getDefaultConnectionType(),\\n                firstArgIsConnection = arguments[0].constructor == connType,\\n                params = arguments.length == 2 ? firstArgIsConnection ? (arguments[1] || {}) : arguments[0] : arguments[0],\\n                fireEvent = (params.fireEvent !== false),\\n                forceDetach = params.forceDetach,\\n                conn = firstArgIsConnection ? arguments[0] : params.connection;\\n\\n            if (conn) {\\n                if (forceDetach || _ju.functionChain(true, false, [\\n                    [ conn.endpoints[0], \\\"isDetachAllowed\\\", [ conn ] ],\\n                    [ conn.endpoints[1], \\\"isDetachAllowed\\\", [ conn ] ],\\n                    [ conn, \\\"isDetachAllowed\\\", [ conn ] ],\\n                    [ _currentInstance, \\\"checkCondition\\\", [ \\\"beforeDetach\\\", conn ] ]\\n                ])) {\\n\\n                    conn.endpoints[0].detach(conn, false, true, fireEvent);\\n                }\\n            }\\n            else {\\n                var _p = jsPlumb.extend({}, params); // a backwards compatibility hack: source should be thought of as 'params' in this case.\\n                // test for endpoint uuids to detach\\n                if (_p.uuids) {\\n                    _getEndpoint(_p.uuids[0]).detachFrom(_getEndpoint(_p.uuids[1]), fireEvent);\\n                } else if (_p.sourceEndpoint && _p.targetEndpoint) {\\n                    _p.sourceEndpoint.detachFrom(_p.targetEndpoint);\\n                } else {\\n                    var sourceId = _getId(_currentInstance.getElement(_p.source)),\\n                        targetId = _getId(_currentInstance.getElement(_p.target));\\n                    _operation(sourceId, function (jpc) {\\n                        if ((jpc.sourceId == sourceId && jpc.targetId == targetId) || (jpc.targetId == sourceId && jpc.sourceId == targetId)) {\\n                            if (_currentInstance.checkCondition(\\\"beforeDetach\\\", jpc)) {\\n                                jpc.endpoints[0].detach(jpc, false, true, fireEvent);\\n                            }\\n                        }\\n                    });\\n                }\\n            }\\n        };\\n\\n        this.detachAllConnections = function (el, params) {\\n            params = params || {};\\n            el = _currentInstance.getElement(el);\\n            var id = _getId(el),\\n                endpoints = endpointsByElement[id];\\n            if (endpoints && endpoints.length) {\\n                for (var i = 0, j = endpoints.length; i < j; i++) {\\n                    endpoints[i].detachAll(params.fireEvent !== false, params.forceDetach);\\n                }\\n            }\\n            return _currentInstance;\\n        };\\n\\n        this.detachEveryConnection = function (params) {\\n            params = params || {};\\n            _currentInstance.batch(function () {\\n                for (var id in endpointsByElement) {\\n                    var endpoints = endpointsByElement[id];\\n                    if (endpoints && endpoints.length) {\\n                        for (var i = 0, j = endpoints.length; i < j; i++) {\\n                            endpoints[i].detachAll(params.fireEvent !== false, params.forceDetach);\\n                        }\\n                    }\\n                }\\n                connections.length = 0;\\n            });\\n            return _currentInstance;\\n        };\\n\\n        /// not public.  but of course its exposed. how to change this.\\n        this.deleteObject = function (params) {\\n            var result = {\\n                    endpoints: {},\\n                    connections: {},\\n                    endpointCount: 0,\\n                    connectionCount: 0\\n                },\\n                fireEvent = params.fireEvent !== false,\\n                deleteAttachedObjects = params.deleteAttachedObjects !== false;\\n\\n            var unravelConnection = function (connection) {\\n                if (connection != null && result.connections[connection.id] == null) {\\n                    if (!params.dontUpdateHover && connection._jsPlumb != null) connection.setHover(false);\\n                    result.connections[connection.id] = connection;\\n                    result.connectionCount++;\\n                    if (deleteAttachedObjects) {\\n                        for (var j = 0; j < connection.endpoints.length; j++) {\\n                            if (connection.endpoints[j]._deleteOnDetach)\\n                                unravelEndpoint(connection.endpoints[j]);\\n                        }\\n                    }\\n                }\\n            };\\n            var unravelEndpoint = function (endpoint) {\\n                if (endpoint != null && result.endpoints[endpoint.id] == null) {\\n                    if (!params.dontUpdateHover && endpoint._jsPlumb != null) endpoint.setHover(false);\\n                    result.endpoints[endpoint.id] = endpoint;\\n                    result.endpointCount++;\\n\\n                    if (deleteAttachedObjects) {\\n                        for (var i = 0; i < endpoint.connections.length; i++) {\\n                            var c = endpoint.connections[i];\\n                            unravelConnection(c);\\n                        }\\n                    }\\n                }\\n            };\\n\\n            if (params.connection)\\n                unravelConnection(params.connection);\\n            else unravelEndpoint(params.endpoint);\\n\\n            // loop through connections\\n            for (var i in result.connections) {\\n                var c = result.connections[i];\\n                if (c._jsPlumb) {\\n                    _ju.removeWithFunction(connections, function (_c) {\\n                        return c.id == _c.id;\\n                    });\\n\\n                    fireDetachEvent(c, params.fireEvent === false ? false : !c.pending, params.originalEvent);\\n\\n                    c.endpoints[0].detachFromConnection(c);\\n                    c.endpoints[1].detachFromConnection(c);\\n                    c.cleanup(true);\\n                    c.destroy(true);\\n                }\\n            }\\n\\n            // loop through endpoints\\n            for (var j in result.endpoints) {\\n                var e = result.endpoints[j];\\n                if (e._jsPlumb) {\\n                    _currentInstance.unregisterEndpoint(e);\\n                    // FIRE some endpoint deleted event?\\n                    e.cleanup(true);\\n                    e.destroy(true);\\n                }\\n            }\\n\\n            return result;\\n        };\\n\\n        this.draggable = function (el, options) {\\n            var info;\\n            _each(function(_el) {\\n                 info = _info(_el);\\n                if (info.el) _initDraggableIfNecessary(info.el, true, options, info.id);\\n            }, el);\\n            return _currentInstance;\\n        };\\n\\n        this.droppable = function(el, options) {\\n            var info;\\n            options = options || {};\\n            options.allowLoopback = false;\\n            _each(function(_el) {\\n                info = _info(_el);\\n                if (info.el) _currentInstance.initDroppable(info.el, options);\\n            }, el);\\n            return _currentInstance;\\n        };\\n\\n        // helpers for select/selectEndpoints\\n        var _setOperation = function (list, func, args, selector) {\\n                for (var i = 0, j = list.length; i < j; i++) {\\n                    list[i][func].apply(list[i], args);\\n                }\\n                return selector(list);\\n            },\\n            _getOperation = function (list, func, args) {\\n                var out = [];\\n                for (var i = 0, j = list.length; i < j; i++) {\\n                    out.push([ list[i][func].apply(list[i], args), list[i] ]);\\n                }\\n                return out;\\n            },\\n            setter = function (list, func, selector) {\\n                return function () {\\n                    return _setOperation(list, func, arguments, selector);\\n                };\\n            },\\n            getter = function (list, func) {\\n                return function () {\\n                    return _getOperation(list, func, arguments);\\n                };\\n            },\\n            prepareList = function (input, doNotGetIds) {\\n                var r = [];\\n                if (input) {\\n                    if (typeof input == 'string') {\\n                        if (input === \\\"*\\\") return input;\\n                        r.push(input);\\n                    }\\n                    else {\\n                        if (doNotGetIds) r = input;\\n                        else {\\n                            if (input.length) {\\n                                for (var i = 0, j = input.length; i < j; i++)\\n                                    r.push(_info(input[i]).id);\\n                            }\\n                            else\\n                                r.push(_info(input).id);\\n                        }\\n                    }\\n                }\\n                return r;\\n            },\\n            filterList = function (list, value, missingIsFalse) {\\n                if (list === \\\"*\\\") return true;\\n                return list.length > 0 ? list.indexOf(value) != -1 : !missingIsFalse;\\n            };\\n\\n        // get some connections, specifying source/target/scope\\n        this.getConnections = function (options, flat) {\\n            if (!options) {\\n                options = {};\\n            } else if (options.constructor == String) {\\n                options = { \\\"scope\\\": options };\\n            }\\n            var scope = options.scope || _currentInstance.getDefaultScope(),\\n                scopes = prepareList(scope, true),\\n                sources = prepareList(options.source),\\n                targets = prepareList(options.target),\\n                results = (!flat && scopes.length > 1) ? {} : [],\\n                _addOne = function (scope, obj) {\\n                    if (!flat && scopes.length > 1) {\\n                        var ss = results[scope];\\n                        if (ss == null) {\\n                            ss = results[scope] = [];\\n                        }\\n                        ss.push(obj);\\n                    } else results.push(obj);\\n                };\\n\\n            for (var j = 0, jj = connections.length; j < jj; j++) {\\n                var c = connections[j];\\n                if (filterList(scopes, c.scope) && filterList(sources, c.sourceId) && filterList(targets, c.targetId))\\n                    _addOne(c.scope, c);\\n            }\\n\\n            return results;\\n        };\\n\\n        var _curryEach = function (list, executor) {\\n                return function (f) {\\n                    for (var i = 0, ii = list.length; i < ii; i++) {\\n                        f(list[i]);\\n                    }\\n                    return executor(list);\\n                };\\n            },\\n            _curryGet = function (list) {\\n                return function (idx) {\\n                    return list[idx];\\n                };\\n            };\\n\\n        var _makeCommonSelectHandler = function (list, executor) {\\n            var out = {\\n                    length: list.length,\\n                    each: _curryEach(list, executor),\\n                    get: _curryGet(list)\\n                },\\n                setters = [\\\"setHover\\\", \\\"removeAllOverlays\\\", \\\"setLabel\\\", \\\"addClass\\\", \\\"addOverlay\\\", \\\"removeOverlay\\\",\\n                    \\\"removeOverlays\\\", \\\"showOverlay\\\", \\\"hideOverlay\\\", \\\"showOverlays\\\", \\\"hideOverlays\\\", \\\"setPaintStyle\\\",\\n                    \\\"setHoverPaintStyle\\\", \\\"setSuspendEvents\\\", \\\"setParameter\\\", \\\"setParameters\\\", \\\"setVisible\\\",\\n                    \\\"repaint\\\", \\\"addType\\\", \\\"toggleType\\\", \\\"removeType\\\", \\\"removeClass\\\", \\\"setType\\\", \\\"bind\\\", \\\"unbind\\\" ],\\n\\n                getters = [\\\"getLabel\\\", \\\"getOverlay\\\", \\\"isHover\\\", \\\"getParameter\\\", \\\"getParameters\\\", \\\"getPaintStyle\\\",\\n                    \\\"getHoverPaintStyle\\\", \\\"isVisible\\\", \\\"hasType\\\", \\\"getType\\\", \\\"isSuspendEvents\\\" ],\\n                i, ii;\\n\\n            for (i = 0, ii = setters.length; i < ii; i++)\\n                out[setters[i]] = setter(list, setters[i], executor);\\n\\n            for (i = 0, ii = getters.length; i < ii; i++)\\n                out[getters[i]] = getter(list, getters[i]);\\n\\n            return out;\\n        };\\n\\n        var _makeConnectionSelectHandler = function (list) {\\n            var common = _makeCommonSelectHandler(list, _makeConnectionSelectHandler);\\n            return jsPlumb.extend(common, {\\n                // setters\\n                setDetachable: setter(list, \\\"setDetachable\\\", _makeConnectionSelectHandler),\\n                setReattach: setter(list, \\\"setReattach\\\", _makeConnectionSelectHandler),\\n                setConnector: setter(list, \\\"setConnector\\\", _makeConnectionSelectHandler),\\n                detach: function () {\\n                    for (var i = 0, ii = list.length; i < ii; i++)\\n                        _currentInstance.detach(list[i]);\\n                },\\n                // getters\\n                isDetachable: getter(list, \\\"isDetachable\\\"),\\n                isReattach: getter(list, \\\"isReattach\\\")\\n            });\\n        };\\n\\n        var _makeEndpointSelectHandler = function (list) {\\n            var common = _makeCommonSelectHandler(list, _makeEndpointSelectHandler);\\n            return jsPlumb.extend(common, {\\n                setEnabled: setter(list, \\\"setEnabled\\\", _makeEndpointSelectHandler),\\n                setAnchor: setter(list, \\\"setAnchor\\\", _makeEndpointSelectHandler),\\n                isEnabled: getter(list, \\\"isEnabled\\\"),\\n                detachAll: function () {\\n                    for (var i = 0, ii = list.length; i < ii; i++)\\n                        list[i].detachAll();\\n                },\\n                \\\"remove\\\": function () {\\n                    for (var i = 0, ii = list.length; i < ii; i++)\\n                        _currentInstance.deleteObject({endpoint: list[i]});\\n                }\\n            });\\n        };\\n\\n        this.select = function (params) {\\n            params = params || {};\\n            params.scope = params.scope || \\\"*\\\";\\n            return _makeConnectionSelectHandler(params.connections || _currentInstance.getConnections(params, true));\\n        };\\n\\n        this.selectEndpoints = function (params) {\\n            params = params || {};\\n            params.scope = params.scope || \\\"*\\\";\\n            var noElementFilters = !params.element && !params.source && !params.target,\\n                elements = noElementFilters ? \\\"*\\\" : prepareList(params.element),\\n                sources = noElementFilters ? \\\"*\\\" : prepareList(params.source),\\n                targets = noElementFilters ? \\\"*\\\" : prepareList(params.target),\\n                scopes = prepareList(params.scope, true);\\n\\n            var ep = [];\\n\\n            for (var el in endpointsByElement) {\\n                var either = filterList(elements, el, true),\\n                    source = filterList(sources, el, true),\\n                    sourceMatchExact = sources != \\\"*\\\",\\n                    target = filterList(targets, el, true),\\n                    targetMatchExact = targets != \\\"*\\\";\\n\\n                // if they requested 'either' then just match scope. otherwise if they requested 'source' (not as a wildcard) then we have to match only endpoints that have isSource set to to true, and the same thing with isTarget.\\n                if (either || source || target) {\\n                    inner:\\n                        for (var i = 0, ii = endpointsByElement[el].length; i < ii; i++) {\\n                            var _ep = endpointsByElement[el][i];\\n                            if (filterList(scopes, _ep.scope, true)) {\\n\\n                                var noMatchSource = (sourceMatchExact && sources.length > 0 && !_ep.isSource),\\n                                    noMatchTarget = (targetMatchExact && targets.length > 0 && !_ep.isTarget);\\n\\n                                if (noMatchSource || noMatchTarget)\\n                                    continue inner;\\n\\n                                ep.push(_ep);\\n                            }\\n                        }\\n                }\\n            }\\n\\n            return _makeEndpointSelectHandler(ep);\\n        };\\n\\n        // get all connections managed by the instance of jsplumb.\\n        this.getAllConnections = function () {\\n            return connections;\\n        };\\n        this.getDefaultScope = function () {\\n            return DEFAULT_SCOPE;\\n        };\\n        // get an endpoint by uuid.\\n        this.getEndpoint = _getEndpoint;\\n        // get endpoints for some element.\\n        this.getEndpoints = function (el) {\\n            return endpointsByElement[_info(el).id];\\n        };\\n        // gets the default endpoint type. used when subclassing. see wiki.\\n        this.getDefaultEndpointType = function () {\\n            return jsPlumb.Endpoint;\\n        };\\n        // gets the default connection type. used when subclassing.  see wiki.\\n        this.getDefaultConnectionType = function () {\\n            return jsPlumb.Connection;\\n        };\\n        /*\\n         * Gets an element's id, creating one if necessary. really only exposed\\n         * for the lib-specific functionality to access; would be better to pass\\n         * the current instance into the lib-specific code (even though this is\\n         * a static call. i just don't want to expose it to the public API).\\n         */\\n        this.getId = _getId;\\n\\n        this.appendElement = _appendElement;\\n\\n        var _hoverSuspended = false;\\n        this.isHoverSuspended = function () {\\n            return _hoverSuspended;\\n        };\\n        this.setHoverSuspended = function (s) {\\n            _hoverSuspended = s;\\n        };\\n\\n        // set an element's connections to be hidden\\n        this.hide = function (el, changeEndpoints) {\\n            _setVisible(el, \\\"none\\\", changeEndpoints);\\n            return _currentInstance;\\n        };\\n\\n        // exposed for other objects to use to get a unique id.\\n        this.idstamp = _idstamp;\\n\\n        this.connectorsInitialized = false;\\n        this.registerConnectorType = function (connector, name) {\\n            connectorTypes.push([connector, name]);\\n        };\\n\\n        // ensure that, if the current container exists, it is a DOM element and not a selector.\\n        // if it does not exist and `candidate` is supplied, the offset parent of that element will be set as the Container.\\n        // this is used to do a better default behaviour for the case that the user has not set a container:\\n        // addEndpoint, makeSource, makeTarget and connect all call this method with the offsetParent of the\\n        // element in question (for connect it is the source element). So if no container is set, it is inferred\\n        // to be the offsetParent of the first element the user tries to connect.\\n        var _ensureContainer = function (candidate) {\\n            if (!_container && candidate) {\\n                var can = _currentInstance.getElement(candidate);\\n                if (can.offsetParent) _currentInstance.setContainer(can.offsetParent);\\n            }\\n        };\\n\\n        var _getContainerFromDefaults = function () {\\n            if (_currentInstance.Defaults.Container)\\n                _currentInstance.setContainer(_currentInstance.Defaults.Container);\\n        };\\n\\n        // check if a given element is managed or not. if not, add to our map. if drawing is not suspended then\\n        // we'll also stash its dimensions; otherwise we'll do this in a lazy way through updateOffset.\\n        var _manage = _currentInstance.manage = function (id, element, transient) {\\n            if (!managedElements[id]) {\\n                managedElements[id] = {\\n                    el: element,\\n                    endpoints: [],\\n                    connections: []\\n                };\\n\\n                managedElements[id].info = _updateOffset({ elId: id, timestamp: _suspendedAt });\\n                if (!transient) {\\n                    _currentInstance.fire(\\\"manageElement\\\", { id:id, info:managedElements[id].info, el:element });\\n                }\\n            }\\n\\n            return managedElements[id];\\n        };\\n\\n        var _unmanage = function(id) {\\n            if (managedElements[id]) {\\n                delete managedElements[id];\\n                _currentInstance.fire(\\\"unmanageElement\\\", id);\\n            }\\n        };\\n\\n        /**\\n         * updates the offset and size for a given element, and stores the\\n         * values. if 'offset' is not null we use that (it would have been\\n         * passed in from a drag call) because it's faster; but if it is null,\\n         * or if 'recalc' is true in order to force a recalculation, we get the current values.\\n         */\\n        var _updateOffset = this.updateOffset = function (params) {\\n\\n            var timestamp = params.timestamp, recalc = params.recalc, offset = params.offset, elId = params.elId, s;\\n            if (_suspendDrawing && !timestamp) timestamp = _suspendedAt;\\n            if (!recalc) {\\n                if (timestamp && timestamp === offsetTimestamps[elId]) {\\n                    return {o: params.offset || offsets[elId], s: sizes[elId]};\\n                }\\n            }\\n            if (recalc || (!offset && offsets[elId] == null)) { // if forced repaint or no offset available, we recalculate.\\n\\n                // get the current size and offset, and store them\\n                s = managedElements[elId] ? managedElements[elId].el : null;\\n                if (s != null) {\\n                    sizes[elId] = _currentInstance.getSize(s);\\n                    offsets[elId] = _currentInstance.getOffset(s);\\n                    offsetTimestamps[elId] = timestamp;\\n                }\\n            } else {\\n                offsets[elId] = offset || offsets[elId];\\n                if (sizes[elId] == null) {\\n                    s = managedElements[elId].el;\\n                    if (s != null) sizes[elId] = _currentInstance.getSize(s);\\n                }\\n                offsetTimestamps[elId] = timestamp;\\n            }\\n\\n            if (offsets[elId] && !offsets[elId].right) {\\n                offsets[elId].right = offsets[elId].left + sizes[elId][0];\\n                offsets[elId].bottom = offsets[elId].top + sizes[elId][1];\\n                offsets[elId].width = sizes[elId][0];\\n                offsets[elId].height = sizes[elId][1];\\n                offsets[elId].centerx = offsets[elId].left + (offsets[elId].width / 2);\\n                offsets[elId].centery = offsets[elId].top + (offsets[elId].height / 2);\\n            }\\n\\n            return {o: offsets[elId], s: sizes[elId]};\\n        };\\n\\n        /**\\n         * callback from the current library to tell us to prepare ourselves (attach\\n         * mouse listeners etc; can't do that until the library has provided a bind method)\\n         */\\n        this.init = function () {\\n            rendererTypes = jsPlumb.getRenderModes();\\n\\n            var _oneType = function (renderer, name, fn) {\\n                jsPlumb.Connectors[renderer][name] = function () {\\n                    fn.apply(this, arguments);\\n                    jsPlumb.ConnectorRenderers[renderer].apply(this, arguments);\\n                };\\n                _ju.extend(jsPlumb.Connectors[renderer][name], [ fn, jsPlumb.ConnectorRenderers[renderer]]);\\n            };\\n\\n            if (!jsPlumb.connectorsInitialized) {\\n                for (var i = 0; i < connectorTypes.length; i++) {\\n                    for (var j = 0; j < rendererTypes.length; j++) {\\n                        _oneType(rendererTypes[j], connectorTypes[i][1], connectorTypes[i][0]);\\n                    }\\n\\n                }\\n                jsPlumb.connectorsInitialized = true;\\n            }\\n\\n            if (!initialized) {\\n                _getContainerFromDefaults();\\n                _currentInstance.anchorManager = new jsPlumb.AnchorManager({jsPlumbInstance: _currentInstance});\\n                initialized = true;\\n                _currentInstance.fire(\\\"ready\\\", _currentInstance);\\n            }\\n        }.bind(this);\\n\\n        this.log = log;\\n        this.jsPlumbUIComponent = jsPlumbUIComponent;\\n\\n        /*\\n         * Creates an anchor with the given params.\\n         *\\n         *\\n         * Returns: The newly created Anchor.\\n         * Throws: an error if a named anchor was not found.\\n         */\\n        this.makeAnchor = function () {\\n            var pp, _a = function (t, p) {\\n                if (jsPlumb.Anchors[t]) return new jsPlumb.Anchors[t](p);\\n                if (!_currentInstance.Defaults.DoNotThrowErrors)\\n                    throw { msg: \\\"jsPlumb: unknown anchor type '\\\" + t + \\\"'\\\" };\\n            };\\n            if (arguments.length === 0) return null;\\n            var specimen = arguments[0], elementId = arguments[1], jsPlumbInstance = arguments[2], newAnchor = null;\\n            // if it appears to be an anchor already...\\n            if (specimen.compute && specimen.getOrientation) return specimen;  //TODO hazy here about whether it should be added or is already added somehow.\\n            // is it the name of an anchor type?\\n            else if (typeof specimen == \\\"string\\\") {\\n                newAnchor = _a(arguments[0], {elementId: elementId, jsPlumbInstance: _currentInstance});\\n            }\\n            // is it an array? it will be one of:\\n            // \\t\\tan array of [spec, params] - this defines a single anchor, which may be dynamic, but has parameters.\\n            //\\t\\tan array of arrays - this defines some dynamic anchors\\n            //\\t\\tan array of numbers - this defines a single anchor.\\n            else if (_ju.isArray(specimen)) {\\n                if (_ju.isArray(specimen[0]) || _ju.isString(specimen[0])) {\\n                    // if [spec, params] format\\n                    if (specimen.length == 2 && _ju.isObject(specimen[1])) {\\n                        // if first arg is a string, its a named anchor with params\\n                        if (_ju.isString(specimen[0])) {\\n                            pp = jsPlumb.extend({elementId: elementId, jsPlumbInstance: _currentInstance}, specimen[1]);\\n                            newAnchor = _a(specimen[0], pp);\\n                        }\\n                        // otherwise first arg is array, second is params. we treat as a dynamic anchor, which is fine\\n                        // even if the first arg has only one entry. you could argue all anchors should be implicitly dynamic in fact.\\n                        else {\\n                            pp = jsPlumb.extend({elementId: elementId, jsPlumbInstance: _currentInstance, anchors: specimen[0]}, specimen[1]);\\n                            newAnchor = new jsPlumb.DynamicAnchor(pp);\\n                        }\\n                    }\\n                    else\\n                        newAnchor = new jsPlumb.DynamicAnchor({anchors: specimen, selector: null, elementId: elementId, jsPlumbInstance: _currentInstance});\\n\\n                }\\n                else {\\n                    var anchorParams = {\\n                        x: specimen[0], y: specimen[1],\\n                        orientation: (specimen.length >= 4) ? [ specimen[2], specimen[3] ] : [0, 0],\\n                        offsets: (specimen.length >= 6) ? [ specimen[4], specimen[5] ] : [ 0, 0 ],\\n                        elementId: elementId,\\n                        jsPlumbInstance: _currentInstance,\\n                        cssClass: specimen.length == 7 ? specimen[6] : null\\n                    };\\n                    newAnchor = new jsPlumb.Anchor(anchorParams);\\n                    newAnchor.clone = function () {\\n                        return new jsPlumb.Anchor(anchorParams);\\n                    };\\n                }\\n            }\\n\\n            if (!newAnchor.id) newAnchor.id = \\\"anchor_\\\" + _idstamp();\\n            return newAnchor;\\n        };\\n\\n        /**\\n         * makes a list of anchors from the given list of types or coords, eg\\n         * [\\\"TopCenter\\\", \\\"RightMiddle\\\", \\\"BottomCenter\\\", [0, 1, -1, -1] ]\\n         */\\n        this.makeAnchors = function (types, elementId, jsPlumbInstance) {\\n            var r = [];\\n            for (var i = 0, ii = types.length; i < ii; i++) {\\n                if (typeof types[i] == \\\"string\\\")\\n                    r.push(jsPlumb.Anchors[types[i]]({elementId: elementId, jsPlumbInstance: jsPlumbInstance}));\\n                else if (_ju.isArray(types[i]))\\n                    r.push(_currentInstance.makeAnchor(types[i], elementId, jsPlumbInstance));\\n            }\\n            return r;\\n        };\\n\\n        /**\\n         * Makes a dynamic anchor from the given list of anchors (which may be in shorthand notation as strings or dimension arrays, or Anchor\\n         * objects themselves) and the given, optional, anchorSelector function (jsPlumb uses a default if this is not provided; most people will\\n         * not need to provide this - i think).\\n         */\\n        this.makeDynamicAnchor = function (anchors, anchorSelector) {\\n            return new jsPlumb.DynamicAnchor({anchors: anchors, selector: anchorSelector, elementId: null, jsPlumbInstance: _currentInstance});\\n        };\\n\\n// --------------------- makeSource/makeTarget ---------------------------------------------- \\n\\n        this.targetEndpointDefinitions = {};\\n        var _setEndpointPaintStylesAndAnchor = function (ep, epIndex, _instance) {\\n           /* ep.paintStyle = ep.paintStyle ||\\n                _instance.Defaults.EndpointStyles[epIndex] ||\\n                _instance.Defaults.EndpointStyle;\\n\\n            ep.hoverPaintStyle = ep.hoverPaintStyle ||\\n                _instance.Defaults.EndpointHoverStyles[epIndex] ||\\n                _instance.Defaults.EndpointHoverStyle;\\n\\n            ep.anchor = ep.anchor ||\\n                _instance.Defaults.Anchors[epIndex] ||\\n                _instance.Defaults.Anchor;\\n\\n            ep.endpoint = ep.endpoint ||\\n                _instance.Defaults.Endpoints[epIndex] ||\\n                _instance.Defaults.Endpoint;*/\\n        };\\n\\n        // TODO put all the source stuff inside one parent, keyed by id.\\n        this.sourceEndpointDefinitions = {};\\n\\n        var selectorFilter = function (evt, _el, selector, _instance, negate) {\\n            var t = evt.target || evt.srcElement, ok = false,\\n                sel = _instance.getSelector(_el, selector);\\n            for (var j = 0; j < sel.length; j++) {\\n                if (sel[j] == t) {\\n                    ok = true;\\n                    break;\\n                }\\n            }\\n            return negate ? !ok : ok;\\n        };\\n\\n        // SP target source refactor\\n        var _makeElementDropHandler = function (elInfo, p, dropOptions, isSource, isTarget) {\\n            var proxyComponent = new jsPlumbUIComponent(p);\\n            var _drop = p._jsPlumb.EndpointDropHandler({\\n                jsPlumb: _currentInstance,\\n                enabled: function () {\\n                    return elInfo.def.enabled;\\n                },\\n                isFull: function () {\\n                    var targetCount = _currentInstance.select({target: elInfo.id}).length;\\n                    return elInfo.def.maxConnections > 0 && targetCount >= elInfo.def.maxConnections;\\n                },\\n                element: elInfo.el,\\n                elementId: elInfo.id,\\n                isSource: isSource,\\n                isTarget: isTarget,\\n                addClass: function (clazz) {\\n                    _currentInstance.addClass(elInfo.el, clazz);\\n                },\\n                removeClass: function (clazz) {\\n                    _currentInstance.removeClass(elInfo.el, clazz);\\n                },\\n                onDrop: function (jpc) {\\n                    var source = jpc.endpoints[0];\\n                    source.anchor.locked = false;\\n                },\\n                isDropAllowed: function () {\\n                    return proxyComponent.isDropAllowed.apply(proxyComponent, arguments);\\n                },\\n                isRedrop:function(jpc) {\\n                    return (jpc.suspendedElement != null && jpc.suspendedEndpoint != null && jpc.suspendedEndpoint.element === elInfo.el);\\n                },\\n                getEndpoint: function (jpc) {\\n\\n                    // make a new Endpoint for the target, or get it from the cache if uniqueEndpoint\\n                    // is set. if its a redrop the new endpoint will be immediately cleaned up.\\n\\n                    var newEndpoint = elInfo.def.endpoint;\\n\\n                    // if no cached endpoint, or there was one but it has been cleaned up\\n                    // (ie. detached), create a new one\\n                    if (newEndpoint == null || newEndpoint._jsPlumb == null) {\\n                        var eps = _currentInstance.deriveEndpointAndAnchorSpec(jpc.getType().join(\\\" \\\"), true);\\n                        var pp = eps.endpoints ? jsPlumb.extend(p, {\\n                            endpoint:elInfo.def.def.endpoint || eps.endpoints[1]\\n                        }) :p;\\n                        if (eps.anchors) {\\n                            pp = jsPlumb.extend(pp, {\\n                                anchor:elInfo.def.def.anchor || eps.anchors[1]\\n                            });\\n                        }\\n                        newEndpoint = _currentInstance.addEndpoint(elInfo.el, pp);\\n                        newEndpoint._mtNew = true;\\n                    }\\n\\n                    if (p.uniqueEndpoint) elInfo.def.endpoint = newEndpoint;  // may of course just store what it just pulled out. that's ok.\\n                    // TODO test options to makeTarget to see if we should do this?\\n                    newEndpoint._doNotDeleteOnDetach = false; // reset.\\n                    newEndpoint._deleteOnDetach = true;\\n\\n                    // if connection is detachable, init the new endpoint to be draggable, to support that happening.\\n                    if (jpc.isDetachable())\\n                        newEndpoint.initDraggable();\\n\\n                    // if the anchor has a 'positionFinder' set, then delegate to that function to find\\n                    // out where to locate the anchor.\\n                    if (newEndpoint.anchor.positionFinder != null) {\\n                        var dropPosition = _currentInstance.getUIPosition(arguments, _currentInstance.getZoom()),\\n                            elPosition = _currentInstance.getOffset(elInfo.el),\\n                            elSize = _currentInstance.getSize(elInfo.el),\\n                            ap = newEndpoint.anchor.positionFinder(dropPosition, elPosition, elSize, newEndpoint.anchor.constructorParams);\\n\\n                        newEndpoint.anchor.x = ap[0];\\n                        newEndpoint.anchor.y = ap[1];\\n                        // now figure an orientation for it..kind of hard to know what to do actually. probably the best thing i can do is to\\n                        // support specifying an orientation in the anchor's spec. if one is not supplied then i will make the orientation\\n                        // be what will cause the most natural link to the source: it will be pointing at the source, but it needs to be\\n                        // specified in one axis only, and so how to make that choice? i think i will use whichever axis is the one in which\\n                        // the target is furthest away from the source.\\n                    }\\n\\n                    return newEndpoint;\\n                },\\n                maybeCleanup: function (ep) {\\n                    if (ep._mtNew && ep.connections.length === 0) {\\n                        _currentInstance.deleteObject({endpoint: ep});\\n                    }\\n                    else\\n                        delete ep._mtNew;\\n                }\\n            });\\n\\n            // wrap drop events as needed and initialise droppable\\n            var dropEvent = jsPlumb.dragEvents.drop;\\n            dropOptions.scope = dropOptions.scope || (p.scope || _currentInstance.Defaults.Scope);\\n            dropOptions[dropEvent] = _ju.wrap(dropOptions[dropEvent], _drop, true);\\n\\n            // if target, return true from the over event. this will cause katavorio to stop setting drops to hover\\n            // if multipleDrop is set to false.\\n            if (isTarget) {\\n                dropOptions[jsPlumb.dragEvents.over] = function () { return true; };\\n            }\\n\\n            // vanilla jsplumb only\\n            if (p.allowLoopback === false) {\\n                dropOptions.canDrop = function (_drag) {\\n                    var de = _drag.getDragElement()._jsPlumbRelatedElement;\\n                    return de != elInfo.el;\\n                };\\n            }\\n            _currentInstance.initDroppable(elInfo.el, dropOptions, \\\"internal\\\");\\n\\n            return _drop;\\n\\n        };\\n\\n        // see API docs\\n        this.makeTarget = function (el, params, referenceParams) {\\n\\n            // put jsplumb ref into params without altering the params passed in\\n            var p = jsPlumb.extend({_jsPlumb: this}, referenceParams);\\n            jsPlumb.extend(p, params);\\n\\n            // calculate appropriate paint styles and anchor from the params given\\n            _setEndpointPaintStylesAndAnchor(p, 1, this);\\n\\n            var deleteEndpointsOnDetach = !(p.deleteEndpointsOnDetach === false),\\n                maxConnections = p.maxConnections || -1,\\n\\n                _doOne = function (el) {\\n\\n                    // get the element's id and store the endpoint definition for it.  jsPlumb.connect calls will look for one of these,\\n                    // and use the endpoint definition if found.\\n                    // decode the info for this element (id and element)\\n                    var elInfo = _info(el),\\n                        elid = elInfo.id,\\n                        dropOptions = jsPlumb.extend({}, p.dropOptions || {}),\\n                        type = \\\"default\\\";\\n\\n                    this.targetEndpointDefinitions[elid] = this.targetEndpointDefinitions[elid] || {};\\n\\n                    _ensureContainer(elid);\\n\\n                    // store the definition\\n                    var _def = {\\n                        def: jsPlumb.extend({}, p),\\n                        uniqueEndpoint: p.uniqueEndpoint,\\n                        maxConnections: maxConnections,\\n                        enabled: true\\n                    };\\n                    elInfo.def = _def;\\n                    this.targetEndpointDefinitions[elid][type] = _def;\\n                    _makeElementDropHandler(elInfo, p, dropOptions, p.isSource === true, true);\\n                    // stash the definition on the drop\\n                    elInfo.el._katavorioDrop[elInfo.el._katavorioDrop.length - 1].targetDef = _def;\\n\\n                }.bind(this);\\n\\n            // make an array if only given one element\\n            var inputs = el.length && el.constructor != String ? el : [ el ];\\n\\n            // register each one in the list.\\n            for (var i = 0, ii = inputs.length; i < ii; i++) {\\n                _doOne(inputs[i]);\\n            }\\n\\n            return this;\\n        };\\n\\n        // see api docs\\n        this.unmakeTarget = function (el, doNotClearArrays) {\\n            var info = _info(el);\\n            jsPlumb.destroyDroppable(info.el);\\n            if (!doNotClearArrays) {\\n                delete this.targetEndpointDefinitions[info.id];\\n            }\\n\\n            return this;\\n        };\\n\\n        // see api docs\\n        this.makeSource = function (el, params, referenceParams) {\\n            var p = jsPlumb.extend({_jsPlumb: this}, referenceParams);\\n            jsPlumb.extend(p, params);\\n            var type = p.connectionType || \\\"default\\\";\\n            var aae = _currentInstance.deriveEndpointAndAnchorSpec(type);\\n            p.endpoint = p.endpoint || aae.endpoints[0];\\n            p.anchor = p.anchor || aae.anchors[0];\\n            _setEndpointPaintStylesAndAnchor(p, 0, this);\\n            var maxConnections = p.maxConnections || -1,\\n                onMaxConnections = p.onMaxConnections,\\n                _doOne = function (elInfo) {\\n                    // get the element's id and store the endpoint definition for it.  jsPlumb.connect calls will look for one of these,\\n                    // and use the endpoint definition if found.\\n                    var elid = elInfo.id,\\n                        _del = this.getElement(elInfo.el);\\n\\n                    this.sourceEndpointDefinitions[elid] = this.sourceEndpointDefinitions[elid] || {};\\n                    _ensureContainer(elid);\\n\\n                    var _def = {\\n                        def:jsPlumb.extend({}, p),\\n                        uniqueEndpoint: p.uniqueEndpoint,\\n                        maxConnections: maxConnections,\\n                        enabled: true\\n                    };\\n\\n\\n                    this.sourceEndpointDefinitions[elid][type] = _def;\\n                    elInfo.def = _def;\\n\\n                    var stopEvent = jsPlumb.dragEvents.stop,\\n                        dragEvent = jsPlumb.dragEvents.drag,\\n                        dragOptions = jsPlumb.extend({ }, p.dragOptions || {}),\\n                        existingDrag = dragOptions.drag,\\n                        existingStop = dragOptions.stop,\\n                        ep = null,\\n                        endpointAddedButNoDragYet = false;\\n\\n                    // set scope if its not set in dragOptions but was passed in in params\\n                    dragOptions.scope = dragOptions.scope || p.scope;\\n\\n                    dragOptions[dragEvent] = _ju.wrap(dragOptions[dragEvent], function () {\\n                        if (existingDrag) existingDrag.apply(this, arguments);\\n                        endpointAddedButNoDragYet = false;\\n                    });\\n\\n                    dragOptions[stopEvent] = _ju.wrap(dragOptions[stopEvent], function () {\\n\\n                        if (existingStop) existingStop.apply(this, arguments);\\n                        this.currentlyDragging = false;\\n                        if (ep._jsPlumb != null) { // if not cleaned up...\\n\\n                            // reset the anchor to the anchor that was initially provided. the one we were using to drag\\n                            // the connection was just a placeholder that was located at the place the user pressed the\\n                            // mouse button to initiate the drag.\\n                            var anchorDef = p.anchor || this.Defaults.Anchor,\\n                                oldAnchor = ep.anchor,\\n                                oldConnection = ep.connections[0];\\n\\n                            // if the connection has a type, try to get an anchor spec for it.\\n                            /*if (oldConnection != null) {\\n                                var aae = _currentInstance.deriveEndpointAndAnchorSpec(oldConnection.getType().join(\\\" \\\"), false);\\n                                if (aae.anchors) anchorDef = aae.anchor[0];\\n                                if (aae.endpoints) ep.setEndpoint(aae.endpoints[0]);\\n                            }*/\\n\\n                            var    newAnchor = this.makeAnchor(anchorDef, elid, this),\\n                                _el = ep.element;\\n\\n                            // if the anchor has a 'positionFinder' set, then delegate to that function to find\\n                            // out where to locate the anchor. issue 117.\\n                            if (newAnchor.positionFinder != null) {\\n                                var elPosition = _currentInstance.getOffset(_el),\\n                                    elSize = this.getSize(_el),\\n                                    dropPosition = { left: elPosition.left + (oldAnchor.x * elSize[0]), top: elPosition.top + (oldAnchor.y * elSize[1]) },\\n                                    ap = newAnchor.positionFinder(dropPosition, elPosition, elSize, newAnchor.constructorParams);\\n\\n                                newAnchor.x = ap[0];\\n                                newAnchor.y = ap[1];\\n                            }\\n\\n                            ep.setAnchor(newAnchor, true);\\n                            ep.repaint();\\n                            this.repaint(ep.elementId);\\n                            if (oldConnection != null) this.repaint(oldConnection.targetId);\\n                        }\\n                    }.bind(this));\\n\\n                    // when the user presses the mouse, add an Endpoint, if we are enabled.\\n                    var mouseDownListener = function (e) {\\n                        // on right mouse button, abort.\\n                        if (e.which === 3 || e.button === 2) return;\\n\\n                        // TODO store def on element.\\n                        var def = this.sourceEndpointDefinitions[elid][type];\\n\\n                        // if disabled, return.\\n                        if (!def.enabled) return;\\n\\n                        elid = this.getId(this.getElement(elInfo.el)); // elid might have changed since this method was called to configure the element.\\n\\n                        // if a filter was given, run it, and return if it says no.\\n                        if (p.filter) {\\n                            var r = _ju.isString(p.filter) ? selectorFilter(e, elInfo.el, p.filter, this, p.filterExclude) : p.filter(e, elInfo.el);\\n                            if (r === false) return;\\n                        }\\n\\n                        // if maxConnections reached\\n                        var sourceCount = this.select({source: elid}).length;\\n                        if (def.maxConnections >= 0 && (sourceCount >= def.maxConnections)) {\\n                            if (onMaxConnections) {\\n                                onMaxConnections({\\n                                    element: elInfo.el,\\n                                    maxConnections: maxConnections\\n                                }, e);\\n                            }\\n                            return false;\\n                        }\\n\\n                        // find the position on the element at which the mouse was pressed; this is where the endpoint\\n                        // will be located.\\n                        var elxy = jsPlumb.getPositionOnElement(e, _del, _zoom);\\n\\n                        // we need to override the anchor in here, and force 'isSource', but we don't want to mess with\\n                        // the params passed in, because after a connection is established we're going to reset the endpoint\\n                        // to have the anchor we were given.\\n                        var tempEndpointParams = {};\\n                        jsPlumb.extend(tempEndpointParams, p);\\n                        tempEndpointParams.isTemporarySource = true;\\n                        tempEndpointParams.anchor = [ elxy[0], elxy[1] , 0, 0];\\n                        tempEndpointParams.dragOptions = dragOptions;\\n\\n                        if (def.def.scope) tempEndpointParams.scope = def.def.scope;\\n\\n                        ep = this.addEndpoint(elid, tempEndpointParams);\\n                        endpointAddedButNoDragYet = true;\\n                        ep._doNotDeleteOnDetach = false; // reset.\\n                        ep._deleteOnDetach = true;\\n\\n                        // if unique endpoint and it's already been created, push it onto the endpoint we create. at the end\\n                        // of a successful connection we'll switch to that endpoint.\\n                        // TODO this is the same code as the programmatic endpoints create on line 1050 ish\\n                        if (def.uniqueEndpoint) {\\n                            if (!def.endpoint) {\\n                                def.endpoint = ep;\\n                                ep._deleteOnDetach = false;\\n                                ep._doNotDeleteOnDetach = true;\\n                            }\\n                            else\\n                                ep.finalEndpoint = def.endpoint;\\n                        }\\n\\n                        var _delTempEndpoint = function () {\\n                            // this mouseup event is fired only if no dragging occurred, by jquery and yui, but for mootools\\n                            // it is fired even if dragging has occurred, in which case we would blow away a perfectly\\n                            // legitimate endpoint, were it not for this check.  the flag is set after adding an\\n                            // endpoint and cleared in a drag listener we set in the dragOptions above.\\n                            _currentInstance.off(ep.canvas, \\\"mouseup\\\", _delTempEndpoint);\\n                            _currentInstance.off(elInfo.el, \\\"mouseup\\\", _delTempEndpoint);\\n                            if (endpointAddedButNoDragYet) {\\n                                endpointAddedButNoDragYet = false;\\n                                _currentInstance.deleteEndpoint(ep);\\n                            }\\n                        };\\n\\n                        _currentInstance.on(ep.canvas, \\\"mouseup\\\", _delTempEndpoint);\\n                        _currentInstance.on(elInfo.el, \\\"mouseup\\\", _delTempEndpoint);\\n\\n                        // optionally check for attributes to extract from the source element\\n                        var payload = {};\\n                        if (def.def.extract) {\\n                            for (var att in def.def.extract) {\\n                                var v = e.srcElement.getAttribute(att);\\n                                if (v) {\\n                                    payload[def.def.extract[att]] = v;\\n                                }\\n                            }\\n                        }\\n\\n                        // and then trigger its mousedown event, which will kick off a drag, which will start dragging\\n                        // a new connection from this endpoint.\\n                        _currentInstance.trigger(ep.canvas, \\\"mousedown\\\", e, payload);\\n\\n                        _ju.consume(e);\\n\\n                    }.bind(this);\\n\\n                    this.on(elInfo.el, \\\"mousedown\\\", mouseDownListener);\\n                    _def.trigger = mouseDownListener;\\n\\n                    // if a filter was provided, set it as a dragFilter on the element,\\n                    // to prevent the element drag function from kicking in when we want to\\n                    // drag a new connection\\n                    if (p.filter && (_ju.isString(p.filter) || _ju.isFunction(p.filter))) {\\n                        _currentInstance.setDragFilter(elInfo.el, p.filter);\\n                    }\\n\\n                    var dropOptions = jsPlumb.extend({}, p.dropOptions || {});\\n\\n                    _makeElementDropHandler(elInfo, p, dropOptions, true, p.isTarget === true);\\n\\n                }.bind(this);\\n\\n            var inputs = el.length && el.constructor != String ? el : [ el ];\\n            for (var i = 0, ii = inputs.length; i < ii; i++) {\\n                _doOne(_info(inputs[i]));\\n            }\\n\\n            return this;\\n        };\\n\\n        // see api docs\\n        this.unmakeSource = function (el, connectionType, doNotClearArrays) {\\n            var info = _info(el);\\n            var eldefs = this.sourceEndpointDefinitions[info.id];\\n            if (eldefs) {\\n                for (var def in eldefs) {\\n                    if (connectionType == null || connectionType === def) {\\n                        var mouseDownListener = eldefs[def].trigger;\\n                        if (mouseDownListener)\\n                            _currentInstance.off(info.el, \\\"mousedown\\\", mouseDownListener);\\n                        if (!doNotClearArrays) {\\n                            delete this.sourceEndpointDefinitions[info.id][def];\\n                        }\\n                    }\\n                }\\n            }\\n\\n            return this;\\n        };\\n\\n        // see api docs\\n        this.unmakeEverySource = function () {\\n            for (var i in this.sourceEndpointDefinitions)\\n                _currentInstance.unmakeSource(i, null, true);\\n\\n            this.sourceEndpointDefinitions = {};\\n            return this;\\n        };\\n\\n        var _getScope = function (el, types, connectionType) {\\n            types = _ju.isArray(types) ? types : [ types ];\\n            var id = _getId(el);\\n            connectionType = connectionType || \\\"default\\\";\\n            for (var i = 0; i < types.length; i++) {\\n                var eldefs = this[types[i]][id];\\n                if (eldefs && eldefs[connectionType]) return eldefs[connectionType].def.scope || this.Defaults.Scope;\\n            }\\n        }.bind(this);\\n\\n        var _setScope = function (el, scope, types, connectionType) {\\n            types = _ju.isArray(types) ? types : [ types ];\\n            var id = _getId(el);\\n            connectionType = connectionType || \\\"default\\\";\\n            for (var i = 0; i < types.length; i++) {\\n                var eldefs = this[types[i]][id];\\n                if (eldefs && eldefs[connectionType]) {\\n                    eldefs[connectionType].def.scope = scope;\\n                }\\n            }\\n\\n        }.bind(this);\\n\\n        this.getScope = function (el, scope) {\\n            return _getScope(el, [ \\\"sourceEndpointDefinitions\\\", \\\"targetEndpointDefinitions\\\" ]);\\n        };\\n        this.getSourceScope = function (el) {\\n            return _getScope(el, \\\"sourceEndpointDefinitions\\\");\\n        };\\n        this.getTargetScope = function (el) {\\n            return _getScope(el, \\\"targetEndpointDefinitions\\\");\\n        };\\n        this.setScope = function (el, scope, connectionType) {\\n            this.setSourceScope(el, scope, connectionType);\\n            this.setTargetScope(el, scope, connectionType);\\n        };\\n        this.setSourceScope = function (el, scope, connectionType) {\\n            _setScope(el, scope, \\\"sourceEndpointDefinitions\\\", connectionType);\\n            // we get the source scope during the mousedown event, but we also want to set this.\\n            this.setDragScope(el, scope);\\n        };\\n        this.setTargetScope = function (el, scope, connectionType) {\\n            _setScope(el, scope, \\\"targetEndpointDefinitions\\\", connectionType);\\n            this.setDropScope(el, scope);\\n        };\\n\\n        // see api docs\\n        this.unmakeEveryTarget = function () {\\n            for (var i in this.targetEndpointDefinitions)\\n                _currentInstance.unmakeTarget(i, true);\\n\\n            this.targetEndpointDefinitions = {};\\n            return this;\\n        };\\n\\n        // does the work of setting a source enabled or disabled.\\n        var _setEnabled = function (type, el, state, toggle, connectionType) {\\n            var a = type == \\\"source\\\" ? this.sourceEndpointDefinitions : this.targetEndpointDefinitions;\\n            connectionType = connectionType || \\\"default\\\";\\n\\n\\n            if (_ju.isString(el) && a[el] && a[el][connectionType]) {\\n                a[el][connectionType].enabled = toggle ? !a[el][connectionType].enabled : state;\\n            }\\n            else if (el.length) {\\n                for (var i = 0, ii = el.length; i < ii; i++) {\\n                    var info = _info(el[i]);\\n                    if (a[info.id] && a[info.id][connectionType])\\n                        a[info.id][connectionType].enabled = toggle ? !a[info.id][connectionType].enabled : state;\\n                }\\n            }\\n            // otherwise a DOM element\\n            else {\\n                var id = _info(el).id;\\n                if (a[id] && a[id][connectionType])\\n                    a[id][connectionType].enabled = toggle ? !a[id][connectionType].enabled : state;\\n            }\\n            return this;\\n        }.bind(this);\\n\\n        var _first = function (el, fn) {\\n            if (_ju.isString(el) || !el.length)\\n                return fn.apply(this, [ el ]);\\n            else if (el.length)\\n                return fn.apply(this, [ el[0] ]);\\n\\n        }.bind(this);\\n\\n        this.toggleSourceEnabled = function (el, connectionType) {\\n            _setEnabled(\\\"source\\\", el, null, true, connectionType);\\n            return this.isSourceEnabled(el, connectionType);\\n        };\\n\\n        this.setSourceEnabled = function (el, state, connectionType) {\\n            return _setEnabled(\\\"source\\\", el, state, null, connectionType);\\n        };\\n        this.isSource = function (el, connectionType) {\\n            connectionType = connectionType || \\\"default\\\";\\n            return _first(el, function (_el) {\\n                var eldefs = this.sourceEndpointDefinitions[_info(_el).id];\\n                return eldefs != null && eldefs[connectionType] != null;\\n            }.bind(this));\\n        };\\n        this.isSourceEnabled = function (el, connectionType) {\\n            connectionType = connectionType || \\\"default\\\";\\n            return _first(el, function (_el) {\\n                var sep = this.sourceEndpointDefinitions[_info(_el).id];\\n                return sep && sep[connectionType] && sep[connectionType].enabled === true;\\n            }.bind(this));\\n        };\\n\\n        this.toggleTargetEnabled = function (el, connectionType) {\\n            _setEnabled(\\\"target\\\", el, null, true, connectionType);\\n            return this.isTargetEnabled(el, connectionType);\\n        };\\n\\n        this.isTarget = function (el, connectionType) {\\n            connectionType = connectionType || \\\"default\\\";\\n            return _first(el, function (_el) {\\n                var eldefs = this.targetEndpointDefinitions[_info(_el).id];\\n                return eldefs != null && eldefs[connectionType] != null;\\n            }.bind(this));\\n        };\\n        this.isTargetEnabled = function (el, connectionType) {\\n            connectionType = connectionType || \\\"default\\\";\\n            return _first(el, function (_el) {\\n                var tep = this.targetEndpointDefinitions[_info(_el).id];\\n                return tep && tep[connectionType] && tep[connectionType].enabled === true;\\n            }.bind(this));\\n        };\\n        this.setTargetEnabled = function (el, state, connectionType) {\\n            return _setEnabled(\\\"target\\\", el, state, null, connectionType);\\n        };\\n\\n// --------------------- end makeSource/makeTarget ---------------------------------------------- \\t\\t\\t\\t\\n\\n        this.ready = function (fn) {\\n            _currentInstance.bind(\\\"ready\\\", fn);\\n        };\\n\\n        var _elEach = function(el, fn) {\\n            // support both lists...\\n            if (typeof el == 'object' && el.length)\\n                for (var i = 0, ii = el.length; i < ii; i++) {\\n                    fn(el[i]);\\n                }\\n            else // ...and single strings or elements.\\n                fn(el);\\n\\n            return _currentInstance;\\n        };\\n\\n        // repaint some element's endpoints and connections\\n        this.repaint = function (el, ui, timestamp) {\\n            return _elEach(el, function(_el) {\\n                _draw(_el, ui, timestamp);\\n            });\\n        };\\n\\n        this.revalidate = function (el, timestamp, isIdAlready) {\\n            return _elEach(el, function(_el) {\\n                var elId = isIdAlready ? _el : _currentInstance.getId(_el);\\n                _currentInstance.updateOffset({ elId: elId, recalc: true, timestamp:timestamp });\\n                _currentInstance.repaint(_el);\\n            });\\n        };\\n\\n        // repaint every endpoint and connection.\\n        this.repaintEverything = function () {\\n            // TODO this timestamp causes continuous anchors to not repaint properly.\\n            // fix this. do not just take out the timestamp. it runs a lot faster with\\n            // the timestamp included.\\n            var timestamp = _timestamp(), elId;\\n\\n            for (elId in endpointsByElement) {\\n                _currentInstance.updateOffset({ elId: elId, recalc: true, timestamp: timestamp });\\n            }\\n\\n            for (elId in endpointsByElement) {\\n                _draw(elId, null, timestamp);\\n            }\\n\\n            return this;\\n        };\\n\\n        this.removeAllEndpoints = function (el, recurse, affectedElements) {\\n            affectedElements = affectedElements || [];\\n            var _one = function (_el) {\\n                var info = _info(_el),\\n                    ebe = endpointsByElement[info.id],\\n                    i, ii;\\n\\n                if (ebe) {\\n                    affectedElements.push(info);\\n                    for (i = 0, ii = ebe.length; i < ii; i++)\\n                        _currentInstance.deleteEndpoint(ebe[i], false);\\n                }\\n                delete endpointsByElement[info.id];\\n\\n                if (recurse) {\\n                    if (info.el && info.el.nodeType != 3 && info.el.nodeType != 8) {\\n                        for (i = 0, ii = info.el.childNodes.length; i < ii; i++) {\\n                            _one(info.el.childNodes[i]);\\n                        }\\n                    }\\n                }\\n\\n            };\\n            _one(el);\\n            return this;\\n        };\\n\\n        var _doRemove = function(info, affectedElements) {\\n            _currentInstance.removeAllEndpoints(info.id, true, affectedElements);\\n            var _one = function(_info) {\\n                _currentInstance.getDragManager().elementRemoved(_info.id);\\n                _currentInstance.anchorManager.clearFor(_info.id);\\n                _currentInstance.anchorManager.removeFloatingConnection(_info.id);\\n                delete _currentInstance.floatingConnections[_info.id];\\n                delete managedElements[_info.id];\\n                delete offsets[_info.id];\\n                if (_info.el) {\\n                    _currentInstance.removeElement(_info.el);\\n                    _info.el._jsPlumb = null;\\n                }\\n            };\\n\\n            // remove all affected child elements\\n            for (var ae = 1; ae < affectedElements.length; ae++) {\\n                _one(affectedElements[ae]);\\n            }\\n            // and always remove the requested one from the dom.\\n            _one(info);\\n        };\\n\\n        /**\\n         * Remove the given element, including cleaning up all endpoints registered for it.\\n         * This is exposed in the public API but also used internally by jsPlumb when removing the\\n         * element associated with a connection drag.\\n         */\\n        this.remove = function (el, doNotRepaint) {\\n            var info = _info(el), affectedElements = [];\\n            if (info.text) {\\n                info.el.parentNode.removeChild(info.el);\\n            }\\n            else if (info.id) {\\n                _currentInstance.batch(function () {\\n                    _doRemove(info, affectedElements);\\n                }, doNotRepaint === false);\\n            }\\n            return _currentInstance;\\n        };\\n\\n        this.empty = function (el, doNotRepaint) {\\n            var affectedElements = [];\\n            var _one = function(el, dontRemoveFocus) {\\n                var info = _info(el);\\n                if (info.text) {\\n                    info.el.parentNode.removeChild(info.el);\\n                }\\n                else if (info.el) {\\n                    while(info.el.childNodes.length > 0) {\\n                        _one(info.el.childNodes[0]);\\n                    }\\n                    if (!dontRemoveFocus) _doRemove(info, affectedElements);\\n                }\\n            };\\n\\n            _currentInstance.batch(function() {\\n                _one(el, true);\\n            }, doNotRepaint === false);\\n\\n            return _currentInstance;\\n        };\\n\\n        this.reset = function () {\\n            _currentInstance.silently(function() {\\n                _currentInstance.deleteEveryEndpoint();\\n                _currentInstance.unbind();\\n                this.targetEndpointDefinitions = {};\\n                this.sourceEndpointDefinitions = {};\\n                connections.length = 0;\\n                if (this.doReset) this.doReset();\\n            }.bind(this));\\n        };\\n\\n        var _clearObject = function (obj) {\\n            if (obj.canvas && obj.canvas.parentNode)\\n                obj.canvas.parentNode.removeChild(obj.canvas);\\n            obj.cleanup();\\n            obj.destroy();\\n        };\\n\\n        this.clear = function () {\\n            _currentInstance.select().each(_clearObject);\\n            _currentInstance.selectEndpoints().each(_clearObject);\\n\\n            endpointsByElement = {};\\n            endpointsByUUID = {};\\n        };\\n\\n        this.setDefaultScope = function (scope) {\\n            DEFAULT_SCOPE = scope;\\n            return _currentInstance;\\n        };\\n\\n        // sets whether or not some element should be currently draggable.\\n        this.setDraggable = _setDraggable;\\n\\n        this.deriveEndpointAndAnchorSpec = function(type, dontPrependDefault) {\\n            var bits = ((dontPrependDefault ? \\\"\\\" : \\\"default \\\") + type).split(/[\\\\s]/), eps = null, ep = null, a = null, as = null;\\n            for (var i = 0; i < bits.length; i++) {\\n                var _t = _currentInstance.getType(bits[i], \\\"connection\\\");\\n                if (_t) {\\n                    if (_t.endpoints) eps = _t.endpoints;\\n                    if (_t.endpoint) ep = _t.endpoint;\\n                    if (_t.anchors) as = _t.anchors;\\n                    if (_t.anchor) a = _t.anchor;\\n                }\\n            }\\n            return { endpoints: eps ? eps : [ ep, ep ], anchors: as ? as : [a, a ]};\\n        };\\n\\n        // sets the id of some element, changing whatever we need to to keep track.\\n        this.setId = function (el, newId, doNotSetAttribute) {\\n            //\\n            var id;\\n\\n            if (_ju.isString(el)) {\\n                id = el;\\n            }\\n            else {\\n                el = this.getElement(el);\\n                id = this.getId(el);\\n            }\\n\\n            var sConns = this.getConnections({source: id, scope: '*'}, true),\\n                tConns = this.getConnections({target: id, scope: '*'}, true);\\n\\n            newId = \\\"\\\" + newId;\\n\\n            if (!doNotSetAttribute) {\\n                el = this.getElement(id);\\n                this.setAttribute(el, \\\"id\\\", newId);\\n            }\\n            else\\n                el = this.getElement(newId);\\n\\n            endpointsByElement[newId] = endpointsByElement[id] || [];\\n            for (var i = 0, ii = endpointsByElement[newId].length; i < ii; i++) {\\n                endpointsByElement[newId][i].setElementId(newId);\\n                endpointsByElement[newId][i].setReferenceElement(el);\\n            }\\n            delete endpointsByElement[id];\\n\\n            this.sourceEndpointDefinitions[newId] = this.sourceEndpointDefinitions[id];\\n            delete this.sourceEndpointDefinitions[id];\\n            this.targetEndpointDefinitions[newId] = this.targetEndpointDefinitions[id];\\n            delete this.targetEndpointDefinitions[id];\\n\\n            this.anchorManager.changeId(id, newId);\\n            this.getDragManager().changeId(id, newId);\\n            managedElements[newId] = managedElements[id];\\n            delete managedElements[id];\\n\\n            var _conns = function (list, epIdx, type) {\\n                for (var i = 0, ii = list.length; i < ii; i++) {\\n                    list[i].endpoints[epIdx].setElementId(newId);\\n                    list[i].endpoints[epIdx].setReferenceElement(el);\\n                    list[i][type + \\\"Id\\\"] = newId;\\n                    list[i][type] = el;\\n                }\\n            };\\n            _conns(sConns, 0, \\\"source\\\");\\n            _conns(tConns, 1, \\\"target\\\");\\n\\n            this.repaint(newId);\\n        };\\n\\n        this.setDebugLog = function (debugLog) {\\n            log = debugLog;\\n        };\\n\\n        this.setSuspendDrawing = function (val, repaintAfterwards) {\\n            var curVal = _suspendDrawing;\\n            _suspendDrawing = val;\\n            if (val) _suspendedAt = new Date().getTime(); else _suspendedAt = null;\\n            if (repaintAfterwards) this.repaintEverything();\\n            return curVal;\\n        };\\n\\n        // returns whether or not drawing is currently suspended.\\n        this.isSuspendDrawing = function () {\\n            return _suspendDrawing;\\n        };\\n\\n        // return timestamp for when drawing was suspended.\\n        this.getSuspendedAt = function () {\\n            return _suspendedAt;\\n        };\\n\\n        this.batch = function (fn, doNotRepaintAfterwards) {\\n            var _wasSuspended = this.isSuspendDrawing();\\n            if (!_wasSuspended)\\n                this.setSuspendDrawing(true);\\n            try {\\n                fn();\\n            }\\n            catch (e) {\\n                _ju.log(\\\"Function run while suspended failed\\\", e);\\n            }\\n            if (!_wasSuspended)\\n                this.setSuspendDrawing(false, !doNotRepaintAfterwards);\\n        };\\n\\n        this.doWhileSuspended = this.batch;\\n\\n        this.getCachedData = _getCachedData;\\n        this.timestamp = _timestamp;\\n        this.show = function (el, changeEndpoints) {\\n            _setVisible(el, \\\"block\\\", changeEndpoints);\\n            return _currentInstance;\\n        };\\n\\n        // TODO: update this method to return the current state.\\n        this.toggleVisible = _toggleVisible;\\n        this.toggleDraggable = _toggleDraggable;\\n        this.addListener = this.bind;\\n    };\\n\\n    _ju.extend(jsPlumbInstance, _ju.EventGenerator, {\\n        setAttribute: function (el, a, v) {\\n            this.setAttribute(el, a, v);\\n        },\\n        getAttribute: function (el, a) {\\n            return this.getAttribute(jsPlumb.getElement(el), a);\\n        },\\n        convertToFullOverlaySpec: function(spec) {\\n            if (_ju.isString(spec)) {\\n                spec = [ spec, { } ];\\n            }\\n            spec[1].id = spec[1].id || _ju.uuid();\\n            return spec;\\n        },\\n        registerConnectionType: function (id, type) {\\n            this._connectionTypes[id] = jsPlumb.extend({}, type);\\n            if (type.overlays) {\\n                var to = {};\\n                for (var i = 0; i < type.overlays.length; i++) {\\n                    // if a string, convert to object representation so that we can store the typeid on it.\\n                    // also assign an id.\\n                    var fo = this.convertToFullOverlaySpec(type.overlays[i]);\\n                    to[fo[1].id] = fo;\\n                }\\n                this._connectionTypes[id].overlays = to;\\n            }\\n        },\\n        registerConnectionTypes: function (types) {\\n            for (var i in types)\\n                this.registerConnectionType(i, types[i]);\\n        },\\n        registerEndpointType: function (id, type) {\\n            this._endpointTypes[id] = jsPlumb.extend({}, type);\\n            if (type.overlays) {\\n                var to = {};\\n                for (var i = 0; i < type.overlays.length; i++) {\\n                    // if a string, convert to object representation so that we can store the typeid on it.\\n                    // also assign an id.\\n                    var fo = this.convertToFullOverlaySpec(type.overlays[i]);\\n                    to[fo[1].id] = fo;\\n                }\\n                this._endpointTypes[id].overlays = to;\\n            }\\n        },\\n        registerEndpointTypes: function (types) {\\n            for (var i in types)\\n                //this._endpointTypes[i] = jsPlumb.extend({}, types[i]);\\n                this.registerEndpointType(i, types[i]);\\n        },\\n        getType: function (id, typeDescriptor) {\\n            return typeDescriptor === \\\"connection\\\" ? this._connectionTypes[id] : this._endpointTypes[id];\\n        },\\n        setIdChanged: function (oldId, newId) {\\n            this.setId(oldId, newId, true);\\n        },\\n        // set parent: change the parent for some node and update all the registrations we need to.\\n        setParent: function (el, newParent) {\\n            var _dom = this.getElement(el),\\n                _id = this.getId(_dom),\\n                _pdom = this.getElement(newParent),\\n                _pid = this.getId(_pdom);\\n\\n            _dom.parentNode.removeChild(_dom);\\n            _pdom.appendChild(_dom);\\n            this.getDragManager().setParent(_dom, _id, _pdom, _pid);\\n        },\\n        extend: function (o1, o2, names) {\\n            var i;\\n            if (names) {\\n                for (i = 0; i < names.length; i++)\\n                    o1[names[i]] = o2[names[i]];\\n            }\\n            else\\n                for (i in o2) o1[i] = o2[i];\\n            return o1;\\n        },\\n        floatingConnections: {},\\n        getFloatingAnchorIndex: function (jpc) {\\n            return jpc.endpoints[0].isFloating() ? 0 : jpc.endpoints[1].isFloating() ? 1 : -1;\\n        }\\n    });\\n\\n// --------------------- static instance + AMD registration -------------------------------------------\\t\\n\\n// create static instance and assign to window if window exists.\\t\\n    var jsPlumb = new jsPlumbInstance();\\n    // register on 'root' (lets us run on server or browser)\\n    root.jsPlumb = jsPlumb;\\n    // add 'getInstance' method to static instance\\n    jsPlumb.getInstance = function (_defaults) {\\n        var j = new jsPlumbInstance(_defaults);\\n        j.init();\\n        return j;\\n    };\\n    jsPlumb.each = function (spec, fn) {\\n        if (spec == null) return;\\n        if (typeof spec === \\\"string\\\")\\n            fn(jsPlumb.getElement(spec));\\n        else if (spec.length != null) {\\n            for (var i = 0; i < spec.length; i++)\\n                fn(jsPlumb.getElement(spec[i]));\\n        }\\n        else\\n            fn(spec); // assume it's an element.\\n    };\\n// maybe register static instance as an AMD module, and getInstance method too.\\n    if (typeof define === \\\"function\\\") {\\n        define(\\\"jsplumb\\\", [], function () {\\n            return jsPlumb;\\n        });\\n        define(\\\"jsplumbinstance\\\", [], function () {\\n            return jsPlumb.getInstance();\\n        });\\n    }\\n    // CommonJS\\n    if (typeof exports !== 'undefined') {\\n        exports.jsPlumb = jsPlumb;\\n    }\\n\\n\\n// --------------------- end static instance + AMD registration -------------------------------------------\\t\\t\\n\\n}).call(this);\\n\\n/*\\n * jsPlumb\\n *\\n * Title:jsPlumb 2.0.2\\n *\\n * Provides a way to visually connect elements on an HTML page, using SVG.\\n *\\n * This file contains the base functionality for DOM type adapters.\\n *\\n * Copyright (c) 2010 - 2015 jsPlumb (hello@jsplumbtoolkit.com)\\n *\\n * http://jsplumbtoolkit.com\\n * http://github.com/sporritt/jsplumb\\n *\\n * Dual licensed under the MIT and GPL2 licenses.\\n */\\n;\\n(function () {\\n\\n    var root = this, _ju = root.jsPlumbUtil;\\n\\n    var svgAvailable = !!window.SVGAngle || document.implementation.hasFeature(\\\"http://www.w3.org/TR/SVG11/feature#BasicStructure\\\", \\\"1.1\\\"),\\n\\n        _genLoc = function (e, prefix) {\\n            if (e == null) return [ 0, 0 ];\\n            var ts = _touches(e), t = _getTouch(ts, 0);\\n            return [t[prefix + \\\"X\\\"], t[prefix + \\\"Y\\\"]];\\n        },\\n        _pageLocation = function (e) {\\n            if (e == null) return [ 0, 0 ];\\n            return _genLoc(e, \\\"page\\\");\\n        },\\n        _screenLocation = function (e) {\\n            return _genLoc(e, \\\"screen\\\");\\n        },\\n        _clientLocation = function (e) {\\n            return _genLoc(e, \\\"client\\\");\\n        },\\n        _getTouch = function (touches, idx) {\\n            return touches.item ? touches.item(idx) : touches[idx];\\n        },\\n        _touches = function (e) {\\n            return e.touches && e.touches.length > 0 ? e.touches :\\n                    e.changedTouches && e.changedTouches.length > 0 ? e.changedTouches :\\n                    e.targetTouches && e.targetTouches.length > 0 ? e.targetTouches :\\n                [ e ];\\n        };\\n\\n    /**\\n     Manages dragging for some instance of jsPlumb.\\n\\n     TODO instead of this being accessed directly, it should subscribe to events on the jsPlumb instance: every method\\n     in here is called directly by jsPlumb. But what should happen is that we have unpublished events that this listens\\n     to.  The only trick is getting one of these instantiated with every jsPlumb instance: it needs to have a hook somehow.\\n     Basically the general idea is to pull ALL the drag code out (prototype method registrations plus this) into a\\n     dedicated drag script), that does not necessarily need to be included.\\n\\n\\n     */\\n    var DragManager = function (_currentInstance) {\\n        var _draggables = {}, _dlist = [], _delements = {}, _elementsWithEndpoints = {},\\n        // elementids mapped to the draggable to which they belong.\\n            _draggablesForElements = {};\\n\\n        /**\\n         register some element as draggable.  right now the drag init stuff is done elsewhere, and it is\\n         possible that will continue to be the case.\\n         */\\n        this.register = function (el) {\\n            var id = _currentInstance.getId(el),\\n                parentOffset = _currentInstance.getOffset(el);\\n\\n            if (!_draggables[id]) {\\n                _draggables[id] = el;\\n                _dlist.push(el);\\n                _delements[id] = {};\\n            }\\n\\n            // look for child elements that have endpoints and register them against this draggable.\\n            var _oneLevel = function (p) {\\n                if (p) {\\n                    for (var i = 0; i < p.childNodes.length; i++) {\\n                        if (p.childNodes[i].nodeType != 3 && p.childNodes[i].nodeType != 8) {\\n                            var cEl = jsPlumb.getElement(p.childNodes[i]),\\n                                cid = _currentInstance.getId(p.childNodes[i], null, true);\\n                            if (cid && _elementsWithEndpoints[cid] && _elementsWithEndpoints[cid] > 0) {\\n                                var cOff = _currentInstance.getOffset(cEl);\\n                                _delements[id][cid] = {\\n                                    id: cid,\\n                                    offset: {\\n                                        left: cOff.left - parentOffset.left,\\n                                        top: cOff.top - parentOffset.top\\n                                    }\\n                                };\\n                                _draggablesForElements[cid] = id;\\n                            }\\n                            _oneLevel(p.childNodes[i]);\\n                        }\\n                    }\\n                }\\n            };\\n\\n            _oneLevel(el);\\n        };\\n\\n        // refresh the offsets for child elements of this element.\\n        this.updateOffsets = function (elId) {\\n            if (elId != null) {\\n                var domEl = jsPlumb.getElement(elId),\\n                    id = _currentInstance.getId(domEl),\\n                    children = _delements[id],\\n                    parentOffset = _currentInstance.getOffset(domEl);\\n\\n                if (children) {\\n                    for (var i in children) {\\n                        if (children.hasOwnProperty(i)) {\\n                            var cel = jsPlumb.getElement(i),\\n                                cOff = _currentInstance.getOffset(cel);\\n\\n                            _delements[id][i] = {\\n                                id: i,\\n                                offset: {\\n                                    left: cOff.left - parentOffset.left,\\n                                    top: cOff.top - parentOffset.top\\n                                }\\n                            };\\n                            _draggablesForElements[i] = id;\\n                        }\\n                    }\\n                }\\n            }\\n        };\\n\\n        /**\\n         notification that an endpoint was added to the given el.  we go up from that el's parent\\n         node, looking for a parent that has been registered as a draggable. if we find one, we add this\\n         el to that parent's list of elements to update on drag (if it is not there already)\\n         */\\n        this.endpointAdded = function (el, id) {\\n\\n            id = id || _currentInstance.getId(el);\\n\\n            var b = document.body,\\n                p = el.parentNode;\\n\\n            _elementsWithEndpoints[id] = _elementsWithEndpoints[id] ? _elementsWithEndpoints[id] + 1 : 1;\\n\\n            while (p != null && p != b) {\\n                var pid = _currentInstance.getId(p, null, true);\\n                if (pid && _draggables[pid]) {\\n                    var pLoc = _currentInstance.getOffset(p);\\n\\n                    if (_delements[pid][id] == null) {\\n                        var cLoc = _currentInstance.getOffset(el);\\n                        _delements[pid][id] = {\\n                            id: id,\\n                            offset: {\\n                                left: cLoc.left - pLoc.left,\\n                                top: cLoc.top - pLoc.top\\n                            }\\n                        };\\n                        _draggablesForElements[id] = pid;\\n                    }\\n                    break;\\n                }\\n                p = p.parentNode;\\n            }\\n        };\\n\\n        this.endpointDeleted = function (endpoint) {\\n            if (_elementsWithEndpoints[endpoint.elementId]) {\\n                _elementsWithEndpoints[endpoint.elementId]--;\\n                if (_elementsWithEndpoints[endpoint.elementId] <= 0) {\\n                    for (var i in _delements) {\\n                        if (_delements.hasOwnProperty(i) && _delements[i]) {\\n                            delete _delements[i][endpoint.elementId];\\n                            delete _draggablesForElements[endpoint.elementId];\\n                        }\\n                    }\\n                }\\n            }\\n        };\\n\\n        this.changeId = function (oldId, newId) {\\n            _delements[newId] = _delements[oldId];\\n            _delements[oldId] = {};\\n            _draggablesForElements[newId] = _draggablesForElements[oldId];\\n            _draggablesForElements[oldId] = null;\\n        };\\n\\n        this.getElementsForDraggable = function (id) {\\n            return _delements[id];\\n        };\\n\\n        this.elementRemoved = function (elementId) {\\n            var elId = _draggablesForElements[elementId];\\n            if (elId) {\\n                delete _delements[elId][elementId];\\n                delete _draggablesForElements[elementId];\\n            }\\n        };\\n\\n        this.reset = function () {\\n            _draggables = {};\\n            _dlist = [];\\n            _delements = {};\\n            _elementsWithEndpoints = {};\\n        };\\n\\n        //\\n        // notification drag ended. We check automatically if need to update some\\n        // ancestor's offsets.\\n        //\\n        this.dragEnded = function (el) {\\n            var id = _currentInstance.getId(el),\\n                ancestor = _draggablesForElements[id];\\n\\n            if (ancestor) this.updateOffsets(ancestor);\\n        };\\n\\n        this.setParent = function (el, elId, p, pId) {\\n            var current = _draggablesForElements[elId];\\n            if (current) {\\n                if (!_delements[pId])\\n                    _delements[pId] = {};\\n                _delements[pId][elId] = _delements[current][elId];\\n                delete _delements[current][elId];\\n                var pLoc = _currentInstance.getOffset(p),\\n                    cLoc = _currentInstance.getOffset(el);\\n                _delements[pId][elId].offset = {\\n                    left: cLoc.left - pLoc.left,\\n                    top: cLoc.top - pLoc.top\\n                };\\n                _draggablesForElements[elId] = pId;\\n            }\\n        };\\n\\n        this.getDragAncestor = function (el) {\\n            var de = jsPlumb.getElement(el),\\n                id = _currentInstance.getId(de),\\n                aid = _draggablesForElements[id];\\n\\n            if (aid)\\n                return jsPlumb.getElement(aid);\\n            else\\n                return null;\\n        };\\n\\n    };\\n\\n    var trim = function (str) {\\n            return str == null ? null : (str.replace(/^\\\\s\\\\s*/, '').replace(/\\\\s\\\\s*$/, ''));\\n        },\\n        _setClassName = function (el, cn) {\\n            cn = trim(cn);\\n            if (typeof el.className.baseVal != \\\"undefined\\\")  // SVG\\n                el.className.baseVal = cn;\\n            else\\n                el.className = cn;\\n        },\\n        _getClassName = function (el) {\\n            return (typeof el.className.baseVal == \\\"undefined\\\") ? el.className : el.className.baseVal;\\n        },\\n        _classManip = function (el, classesToAdd, classesToRemove) {\\n            classesToAdd = classesToAdd == null ? [] : jsPlumbUtil.isArray(classesToAdd) ? classesToAdd : classesToAdd.split(/\\\\s+/);\\n            classesToRemove = classesToRemove == null ? [] : jsPlumbUtil.isArray(classesToRemove) ? classesToRemove : classesToRemove.split(/\\\\s+/);\\n\\n            var className = _getClassName(el),\\n                curClasses = className.split(/\\\\s+/);\\n\\n            var _oneSet = function (add, classes) {\\n                for (var i = 0; i < classes.length; i++) {\\n                    if (add) {\\n                        if (curClasses.indexOf(classes[i]) == -1)\\n                            curClasses.push(classes[i]);\\n                    }\\n                    else {\\n                        var idx = curClasses.indexOf(classes[i]);\\n                        if (idx != -1)\\n                            curClasses.splice(idx, 1);\\n                    }\\n                }\\n            };\\n\\n            _oneSet(true, classesToAdd);\\n            _oneSet(false, classesToRemove);\\n\\n            _setClassName(el, curClasses.join(\\\" \\\"));\\n        };\\n\\n    jsPlumb.extend(jsPlumbInstance.prototype, {\\n\\n        headless: false,\\n\\n        pageLocation: _pageLocation,\\n        screenLocation: _screenLocation,\\n        clientLocation: _clientLocation,\\n\\n        getDragManager:function() {\\n            if (this.dragManager == null)\\n                this.dragManager = new DragManager(this);\\n\\n            return this.dragManager;\\n        },\\n\\n        recalculateOffsets:function(elId) {\\n            this.getDragManager().updateOffsets(elId);\\n        },\\n\\n        createElement:function(tag, style, clazz, atts) {\\n            return this.createElementNS(null, tag, style, clazz, atts);\\n        },\\n\\n        createElementNS:function(ns, tag, style, clazz, atts) {\\n            var e = ns == null ? document.createElement(tag) : document.createElementNS(ns, tag);\\n            var i;\\n            style = style || {};\\n            for (i in style)\\n                e.style[i] = style[i];\\n\\n            if (clazz)\\n                e.className = clazz;\\n\\n            atts = atts || {};\\n            for (i in atts)\\n                e.setAttribute(i, \\\"\\\" + atts[i]);\\n\\n            return e;\\n        },\\n\\n        getAttribute: function (el, attName) {\\n            return el.getAttribute != null ? el.getAttribute(attName) : null;\\n        },\\n\\n        setAttribute: function (el, a, v) {\\n            if (el.setAttribute != null) el.setAttribute(a, v);\\n        },\\n\\n        setAttributes: function (el, atts) {\\n            for (var i in atts)\\n                if (atts.hasOwnProperty(i)) el.setAttribute(i, atts[i]);\\n        },\\n        appendToRoot: function (node) {\\n            document.body.appendChild(node);\\n        },\\n        getRenderModes: function () {\\n            return [ \\\"svg\\\"  ];\\n        },\\n        getClass:_getClassName,\\n        addClass: function (el, clazz) {\\n            jsPlumb.each(el, function (e) {\\n                _classManip(e, clazz);\\n            });\\n        },\\n        hasClass: function (el, clazz) {\\n            el = jsPlumb.getElement(el);\\n            if (el.classList) return el.classList.contains(clazz);\\n            else {\\n                return _getClassName(el).indexOf(clazz) != -1;\\n            }\\n        },\\n        removeClass: function (el, clazz) {\\n            jsPlumb.each(el, function (e) {\\n                _classManip(e, null, clazz);\\n            });\\n        },\\n        updateClasses: function (el, toAdd, toRemove) {\\n            jsPlumb.each(el, function (e) {\\n                _classManip(e, toAdd, toRemove);\\n            });\\n        },\\n        setClass: function (el, clazz) {\\n            jsPlumb.each(el, function (e) {\\n                _setClassName(e, clazz);\\n            });\\n        },\\n        setPosition: function (el, p) {\\n            el.style.left = p.left + \\\"px\\\";\\n            el.style.top = p.top + \\\"px\\\";\\n        },\\n        getPosition: function (el) {\\n            var _one = function (prop) {\\n                var v = el.style[prop];\\n                return v ? v.substring(0, v.length - 2) : 0;\\n            };\\n            return {\\n                left: _one(\\\"left\\\"),\\n                top: _one(\\\"top\\\")\\n            };\\n        },\\n        getStyle:function(el, prop) {\\n            if (typeof window.getComputedStyle !== 'undefined') {\\n                return getComputedStyle(el, null).getPropertyValue(prop);\\n            } else {\\n                return el.currentStyle[prop];\\n            }\\n        },\\n        getSelector: function (ctx, spec) {\\n            var sel = null;\\n            if (arguments.length == 1) {\\n                sel = ctx.nodeType != null ? ctx : document.querySelectorAll(ctx);\\n            }\\n            else\\n                sel = ctx.querySelectorAll(spec);\\n\\n            return sel;\\n        },\\n        getOffset:function(el, relativeToRoot, container) {\\n            el = jsPlumb.getElement(el);\\n            container = container || this.getContainer();\\n            var out = {\\n                    left: el.offsetLeft,\\n                    top: el.offsetTop\\n                },\\n                op = (relativeToRoot  || (container != null && (el != container && el.offsetParent != container))) ?  el.offsetParent : null,\\n                _maybeAdjustScroll = function(offsetParent) {\\n                    if (offsetParent != null && offsetParent !== document.body && (offsetParent.scrollTop > 0 || offsetParent.scrollLeft > 0)) {\\n                        out.left -= offsetParent.scrollLeft;\\n                        out.top -= offsetParent.scrollTop;\\n                    }\\n                }.bind(this);\\n\\n            while (op != null) {\\n                out.left += op.offsetLeft;\\n                out.top += op.offsetTop;\\n                _maybeAdjustScroll(op);\\n                op = relativeToRoot ? op.offsetParent :\\n                        op.offsetParent == container ? null : op.offsetParent;\\n            }\\n\\n            // if container is scrolled and the element (or its offset parent) is not absolute or fixed, adjust accordingly.\\n            if (container != null && !relativeToRoot && (container.scrollTop > 0 || container.scrollLeft > 0)) {\\n                var pp = el.offsetParent != null ? this.getStyle(el.offsetParent, \\\"position\\\") : \\\"static\\\",\\n                    p = this.getStyle(el, \\\"position\\\");\\n                if (p !== \\\"absolute\\\" && p !== \\\"fixed\\\" && pp !== \\\"absolute\\\" && pp != \\\"fixed\\\") {\\n                    out.left -= container.scrollLeft;\\n                    out.top -= container.scrollTop;\\n                }\\n            }\\n            return out;\\n        },\\n        //\\n        // return x+y proportion of the given element's size corresponding to the location of the given event.\\n        //\\n        getPositionOnElement: function (evt, el, zoom) {\\n            var box = typeof el.getBoundingClientRect !== \\\"undefined\\\" ? el.getBoundingClientRect() : { left: 0, top: 0, width: 0, height: 0 },\\n                body = document.body,\\n                docElem = document.documentElement,\\n                scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop,\\n                scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft,\\n                clientTop = docElem.clientTop || body.clientTop || 0,\\n                clientLeft = docElem.clientLeft || body.clientLeft || 0,\\n                pst = 0,\\n                psl = 0,\\n                top = box.top + scrollTop - clientTop + (pst * zoom),\\n                left = box.left + scrollLeft - clientLeft + (psl * zoom),\\n                cl = jsPlumb.pageLocation(evt),\\n                w = box.width || (el.offsetWidth * zoom),\\n                h = box.height || (el.offsetHeight * zoom),\\n                x = (cl[0] - left) / w,\\n                y = (cl[1] - top) / h;\\n\\n            return [ x, y ];\\n        },\\n\\n        /**\\n         * Gets the absolute position of some element as read from the left/top properties in its style.\\n         * @method getAbsolutePosition\\n         * @param {Element} el The element to retrieve the absolute coordinates from. **Note** this is a DOM element, not a selector from the underlying library.\\n         * @return {Number[]} [left, top] pixel values.\\n         */\\n        getAbsolutePosition: function (el) {\\n            var _one = function (s) {\\n                var ss = el.style[s];\\n                if (ss) return parseFloat(ss.substring(0, ss.length - 2));\\n            };\\n            return [ _one(\\\"left\\\"), _one(\\\"top\\\") ];\\n        },\\n\\n        /**\\n         * Sets the absolute position of some element by setting the left/top properties in its style.\\n         * @method setAbsolutePosition\\n         * @param {Element} el The element to set the absolute coordinates on. **Note** this is a DOM element, not a selector from the underlying library.\\n         * @param {Number[]} xy x and y coordinates\\n         * @param {Number[]} [animateFrom] Optional previous xy to animate from.\\n         * @param {Object} [animateOptions] Options for the animation.\\n         */\\n        setAbsolutePosition: function (el, xy, animateFrom, animateOptions) {\\n            if (animateFrom) {\\n                this.animate(el, {\\n                    left: \\\"+=\\\" + (xy[0] - animateFrom[0]),\\n                    top: \\\"+=\\\" + (xy[1] - animateFrom[1])\\n                }, animateOptions);\\n            }\\n            else {\\n                el.style.left = xy[0] + \\\"px\\\";\\n                el.style.top = xy[1] + \\\"px\\\";\\n            }\\n        },\\n        /**\\n         * gets the size for the element, in an array : [ width, height ].\\n         */\\n        getSize: function (el) {\\n            return [ el.offsetWidth, el.offsetHeight ];\\n        },\\n        getWidth: function (el) {\\n            return el.offsetWidth;\\n        },\\n        getHeight: function (el) {\\n            return el.offsetHeight;\\n        }\\n\\n    });\\n}).call(this);\\n\\n/*\\n * jsPlumb\\n *\\n * Title:jsPlumb 2.0.2\\n *\\n * Provides a way to visually connect elements on an HTML page, using SVG.\\n *\\n * This file contains code for components that support overlays.\\n *\\n * Copyright (c) 2010 - 2015 jsPlumb (hello@jsplumbtoolkit.com)\\n *\\n * http://jsplumbtoolkit.com\\n * http://github.com/sporritt/jsplumb\\n *\\n * Dual licensed under the MIT and GPL2 licenses.\\n */\\n;(function() {\\n\\n    \\\"use strict\\\";\\n    var root = this, _jp = root.jsPlumb, _ju = root.jsPlumbUtil;\\n\\n    // ------------------------------ BEGIN OverlayCapablejsPlumbUIComponent --------------------------------------------\\n\\n    var _internalLabelOverlayId = \\\"__label\\\",\\n    // this is a shortcut helper method to let people add a label as\\n    // overlay.\\n        _makeLabelOverlay = function (component, params) {\\n\\n            var _params = {\\n                    cssClass: params.cssClass,\\n                    labelStyle: component.labelStyle,\\n                    id: _internalLabelOverlayId,\\n                    component: component,\\n                    _jsPlumb: component._jsPlumb.instance  // TODO not necessary, since the instance can be accessed through the component.\\n                },\\n                mergedParams = jsPlumb.extend(_params, params);\\n\\n            return new _jp.Overlays[component._jsPlumb.instance.getRenderMode()].Label(mergedParams);\\n        },\\n        _processOverlay = function (component, o) {\\n            var _newOverlay = null;\\n            if (_ju.isArray(o)) {\\t// this is for the shorthand [\\\"Arrow\\\", { width:50 }] syntax\\n                // there's also a three arg version:\\n                // [\\\"Arrow\\\", { width:50 }, {location:0.7}]\\n                // which merges the 3rd arg into the 2nd.\\n                var type = o[0],\\n                // make a copy of the object so as not to mess up anyone else's reference...\\n                    p = _jp.extend({component: component, _jsPlumb: component._jsPlumb.instance}, o[1]);\\n                if (o.length == 3) _jp.extend(p, o[2]);\\n                _newOverlay = new _jp.Overlays[component._jsPlumb.instance.getRenderMode()][type](p);\\n            } else if (o.constructor == String) {\\n                _newOverlay = new _jp.Overlays[component._jsPlumb.instance.getRenderMode()][o]({component: component, _jsPlumb: component._jsPlumb.instance});\\n            } else {\\n                _newOverlay = o;\\n            }\\n\\n            _newOverlay.id = _newOverlay.id || _ju.uuid();\\n            component.cacheTypeItem(\\\"overlay\\\", _newOverlay, _newOverlay.id);\\n            //component._jsPlumb.overlays.push(_newOverlay);\\n            component._jsPlumb.overlays[_newOverlay.id] = _newOverlay;\\n\\n            return _newOverlay;\\n        };\\n\\n    _jp.OverlayCapableJsPlumbUIComponent = function (params) {\\n\\n        jsPlumbUIComponent.apply(this, arguments);\\n        this._jsPlumb.overlays = {};\\n        this._jsPlumb.overlayPositions = {};\\n\\n        if (params.label) {\\n            this.getDefaultType().overlays[_internalLabelOverlayId] = [\\\"Label\\\", {\\n                label: params.label,\\n                location: params.labelLocation || this.defaultLabelLocation || 0.5,\\n                labelStyle: params.labelStyle || this._jsPlumb.instance.Defaults.LabelStyle,\\n                id:_internalLabelOverlayId\\n            }];\\n        }\\n\\n        this.setListenerComponent = function (c) {\\n            if (this._jsPlumb) {\\n                for (var i in this._jsPlumb.overlays)\\n                    this._jsPlumb.overlays[i].setListenerComponent(c);\\n            }\\n        };\\n    };\\n\\n    _jp.OverlayCapableJsPlumbUIComponent.applyType = function (component, t) {\\n        if (t.overlays) {\\n            // loop through the ones in the type. if already present on the component,\\n            // dont remove or re-add.\\n            var keep = {}, i;\\n\\n            for (i in t.overlays) {\\n\\n                var existing = component._jsPlumb.overlays[t.overlays[i][1].id];\\n                if (existing) {\\n                    // maybe update from data, if there were parameterised values for instance.\\n                    existing.updateFrom(t.overlays[i][1]);\\n                    keep[t.overlays[i][1].id] = true;\\n                }\\n                else {\\n                    var c = component.getCachedTypeItem(\\\"overlay\\\", t.overlays[i][1].id);\\n                    if (c != null) {\\n                        c.reattach(component._jsPlumb.instance);\\n                        // maybe update from data, if there were parameterised values for instance.\\n                        c.updateFrom(t.overlays[i][1]);\\n                        component._jsPlumb.overlays[c.id] = c;\\n                    }\\n                    else {\\n                        c = component.addOverlay(t.overlays[i], true);\\n                    }\\n                    keep[c.id] = true;\\n                }\\n            }\\n\\n            // now loop through the full overlays and remove those that we dont want to keep\\n            for (i in component._jsPlumb.overlays) {\\n                if (keep[component._jsPlumb.overlays[i].id] == null)\\n                    component.removeOverlay(component._jsPlumb.overlays[i].id, true); // remove overlay but dont clean it up.\\n                    // that would remove event listeners etc; overlays are never discarded by the types stuff, they are\\n                    // just detached/reattached.\\n            }\\n        }\\n    };\\n\\n    _ju.extend(_jp.OverlayCapableJsPlumbUIComponent, root.jsPlumbUIComponent, {\\n\\n        setHover: function (hover, ignoreAttachedElements) {\\n            if (this._jsPlumb && !this._jsPlumb.instance.isConnectionBeingDragged()) {\\n                for (var i in this._jsPlumb.overlays) {\\n                    this._jsPlumb.overlays[i][hover ? \\\"addClass\\\" : \\\"removeClass\\\"](this._jsPlumb.instance.hoverClass);\\n                }\\n            }\\n        },\\n        addOverlay: function (overlay, doNotRepaint) {\\n            var o = _processOverlay(this, overlay);\\n            if (!doNotRepaint) this.repaint();\\n            return o;\\n        },\\n        getOverlay: function (id) {\\n            return this._jsPlumb.overlays[id];\\n        },\\n        getOverlays: function () {\\n            return this._jsPlumb.overlays;\\n        },\\n        hideOverlay: function (id) {\\n            var o = this.getOverlay(id);\\n            if (o) o.hide();\\n        },\\n        hideOverlays: function () {\\n            for (var i in this._jsPlumb.overlays)\\n                this._jsPlumb.overlays[i].hide();\\n        },\\n        showOverlay: function (id) {\\n            var o = this.getOverlay(id);\\n            if (o) o.show();\\n        },\\n        showOverlays: function () {\\n            for (var i in this._jsPlumb.overlays)\\n                this._jsPlumb.overlays[i].show();\\n        },\\n        removeAllOverlays: function (doNotRepaint) {\\n            for (var i in this._jsPlumb.overlays) {\\n                if (this._jsPlumb.overlays[i].cleanup) this._jsPlumb.overlays[i].cleanup();\\n            }\\n\\n            this._jsPlumb.overlays = {};\\n            this._jsPlumb.overlayPositions = null;\\n            if (!doNotRepaint)\\n                this.repaint();\\n        },\\n        removeOverlay: function (overlayId, dontCleanup) {\\n            var o = this._jsPlumb.overlays[overlayId];\\n            if (o) {\\n                if (!dontCleanup && o.cleanup) o.cleanup();\\n                delete this._jsPlumb.overlays[overlayId];\\n                if (this._jsPlumb.overlayPositions)\\n                    delete this._jsPlumb.overlayPositions[overlayId];\\n            }\\n        },\\n        removeOverlays: function () {\\n            for (var i = 0, j = arguments.length; i < j; i++)\\n                this.removeOverlay(arguments[i]);\\n        },\\n        moveParent: function (newParent) {\\n            if (this.bgCanvas) {\\n                this.bgCanvas.parentNode.removeChild(this.bgCanvas);\\n                newParent.appendChild(this.bgCanvas);\\n            }\\n\\n            if (this.canvas && this.canvas.parentNode) {\\n                this.canvas.parentNode.removeChild(this.canvas);\\n                newParent.appendChild(this.canvas);\\n\\n                for (var i in this._jsPlumb.overlays) {\\n                    if (this._jsPlumb.overlays[i].isAppendedAtTopLevel) {\\n                        var el = this._jsPlumb.overlays[i].getElement();\\n                        el.parentNode.removeChild(el);\\n                        newParent.appendChild(el);\\n                    }\\n                }\\n            }\\n        },\\n        getLabel: function () {\\n            var lo = this.getOverlay(_internalLabelOverlayId);\\n            return lo != null ? lo.getLabel() : null;\\n        },\\n        getLabelOverlay: function () {\\n            return this.getOverlay(_internalLabelOverlayId);\\n        },\\n        setLabel: function (l) {\\n            var lo = this.getOverlay(_internalLabelOverlayId);\\n            if (!lo) {\\n                var params = l.constructor == String || l.constructor == Function ? { label: l } : l;\\n                lo = _makeLabelOverlay(this, params);\\n                this._jsPlumb.overlays[_internalLabelOverlayId] = lo;\\n            }\\n            else {\\n                if (l.constructor == String || l.constructor == Function) lo.setLabel(l);\\n                else {\\n                    if (l.label) lo.setLabel(l.label);\\n                    if (l.location) lo.setLocation(l.location);\\n                }\\n            }\\n\\n            if (!this._jsPlumb.instance.isSuspendDrawing())\\n                this.repaint();\\n        },\\n        cleanup: function (force) {\\n            for (var i in this._jsPlumb.overlays) {\\n                this._jsPlumb.overlays[i].cleanup(force);\\n                this._jsPlumb.overlays[i].destroy(force);\\n            }\\n            if (force) {\\n                this._jsPlumb.overlays = {};\\n                this._jsPlumb.overlayPositions = null;\\n            }\\n        },\\n        setVisible: function (v) {\\n            this[v ? \\\"showOverlays\\\" : \\\"hideOverlays\\\"]();\\n        },\\n        setAbsoluteOverlayPosition: function (overlay, xy) {\\n            this._jsPlumb.overlayPositions[overlay.id] = xy;\\n        },\\n        getAbsoluteOverlayPosition: function (overlay) {\\n            return this._jsPlumb.overlayPositions ? this._jsPlumb.overlayPositions[overlay.id] : null;\\n        },\\n        _clazzManip:function(action, clazz, dontUpdateOverlays) {\\n            if (!dontUpdateOverlays) {\\n                for (var i in this._jsPlumb.overlays) {\\n                    this._jsPlumb.overlays[i][action + \\\"Class\\\"](clazz);\\n                }\\n            }\\n        },\\n        addClass:function(clazz, dontUpdateOverlays) {\\n            this._clazzManip(\\\"add\\\", clazz, dontUpdateOverlays)\\n        },\\n        removeClass:function(clazz, dontUpdateOverlays) {\\n            this._clazzManip(\\\"remove\\\", clazz, dontUpdateOverlays)\\n        }\\n    });\\n\\n// ------------------------------ END OverlayCapablejsPlumbUIComponent --------------------------------------------\\n\\n}).call(this);\\n\\n/*\\n * jsPlumb\\n * \\n * Title:jsPlumb 2.0.2\\n * \\n * Provides a way to visually connect elements on an HTML page, using SVG.\\n * \\n * This file contains the code for Endpoints.\\n *\\n * Copyright (c) 2010 - 2015 jsPlumb (hello@jsplumbtoolkit.com)\\n * \\n * http://jsplumbtoolkit.com\\n * http://github.com/sporritt/jsplumb\\n * \\n * Dual licensed under the MIT and GPL2 licenses.\\n */\\n(function () {\\n\\n    \\\"use strict\\\";\\n    var root = this, _jp = root.jsPlumb, _ju = root.jsPlumbUtil;\\n\\n    // create the drag handler for a connection\\n    var _makeConnectionDragHandler = function (endpoint, placeholder, _jsPlumb) {\\n        var stopped = false;\\n        return {\\n            drag: function () {\\n                if (stopped) {\\n                    stopped = false;\\n                    return true;\\n                }\\n\\n                if (placeholder.element) {\\n                    var _ui = _jsPlumb.getUIPosition(arguments, _jsPlumb.getZoom());\\n                    jsPlumb.setPosition(placeholder.element, _ui);\\n                    _jsPlumb.repaint(placeholder.element, _ui);\\n                    // always repaint the source endpoint, because only continuous/dynamic anchors cause the endpoint\\n                    // to be repainted, so static anchors need to be told (or the endpoint gets dragged around)\\n                    endpoint.paint({anchorPoint:endpoint.anchor.getCurrentLocation({element:endpoint.element})});\\n                }\\n            },\\n            stopDrag: function () {\\n                stopped = true;\\n            }\\n        };\\n    };\\n\\n    // creates a placeholder div for dragging purposes, adds it, and pre-computes its offset.\\n    var _makeDraggablePlaceholder = function (placeholder, _jsPlumb, ipco, ips) {\\n        var n = jsPlumb.createElement(\\\"div\\\", { position : \\\"absolute\\\" });\\n        _jsPlumb.appendElement(n);\\n        var id = _jsPlumb.getId(n);\\n        jsPlumb.setPosition(n, ipco);\\n        n.style.width = ips[0] + \\\"px\\\";\\n        n.style.height = ips[1] + \\\"px\\\";\\n        _jsPlumb.manage(id, n, true); // TRANSIENT MANAGE\\n        // create and assign an id, and initialize the offset.\\n        placeholder.id = id;\\n        placeholder.element = n;\\n    };\\n\\n    // create a floating endpoint (for drag connections)\\n    var _makeFloatingEndpoint = function (paintStyle, referenceAnchor, endpoint, referenceCanvas, sourceElement, _jsPlumb, _newEndpoint, scope) {\\n        var floatingAnchor = new _jp.FloatingAnchor({ reference: referenceAnchor, referenceCanvas: referenceCanvas, jsPlumbInstance: _jsPlumb });\\n        //setting the scope here should not be the way to fix that mootools issue.  it should be fixed by not\\n        // adding the floating endpoint as a droppable.  that makes more sense anyway!\\n        // TRANSIENT MANAGE\\n        return _newEndpoint({\\n            paintStyle: paintStyle,\\n            endpoint: endpoint,\\n            anchor: floatingAnchor,\\n            source: sourceElement,\\n            scope: scope\\n        });\\n    };\\n\\n    var typeParameters = [ \\\"connectorStyle\\\", \\\"connectorHoverStyle\\\", \\\"connectorOverlays\\\",\\n        \\\"connector\\\", \\\"connectionType\\\", \\\"connectorClass\\\", \\\"connectorHoverClass\\\" ];\\n\\n    // a helper function that tries to find a connection to the given element, and returns it if so. if elementWithPrecedence is null,\\n    // or no connection to it is found, we return the first connection in our list.\\n    var findConnectionToUseForDynamicAnchor = function (ep, elementWithPrecedence) {\\n        var idx = 0;\\n        if (elementWithPrecedence != null) {\\n            for (var i = 0; i < ep.connections.length; i++) {\\n                if (ep.connections[i].sourceId == elementWithPrecedence || ep.connections[i].targetId == elementWithPrecedence) {\\n                    idx = i;\\n                    break;\\n                }\\n            }\\n        }\\n\\n        return ep.connections[idx];\\n    };\\n\\n    _jp.Endpoint = function (params) {\\n        var _jsPlumb = params._jsPlumb,\\n            _newConnection = params.newConnection,\\n            _newEndpoint = params.newEndpoint;\\n\\n        this.idPrefix = \\\"_jsplumb_e_\\\";\\n        this.defaultLabelLocation = [ 0.5, 0.5 ];\\n        this.defaultOverlayKeys = [\\\"Overlays\\\", \\\"EndpointOverlays\\\"];\\n        _jp.OverlayCapableJsPlumbUIComponent.apply(this, arguments);\\n\\n// TYPE\\n\\n        this.appendToDefaultType({\\n            connectionType:params.connectionType,\\n            maxConnections: params.maxConnections == null ? this._jsPlumb.instance.Defaults.MaxConnections : params.maxConnections, // maximum number of connections this endpoint can be the source of.,\\n            paintStyle: params.endpointStyle || params.paintStyle || params.style || this._jsPlumb.instance.Defaults.EndpointStyle || _jp.Defaults.EndpointStyle,\\n            hoverPaintStyle: params.endpointHoverStyle || params.hoverPaintStyle || this._jsPlumb.instance.Defaults.EndpointHoverStyle || _jp.Defaults.EndpointHoverStyle,\\n            connectorStyle: params.connectorStyle,\\n            connectorHoverStyle: params.connectorHoverStyle,\\n            connectorClass: params.connectorClass,\\n            connectorHoverClass: params.connectorHoverClass,\\n            connectorOverlays: params.connectorOverlays,\\n            connector: params.connector,\\n            connectorTooltip: params.connectorTooltip\\n        });\\n\\n// END TYPE\\n\\n        this._jsPlumb.enabled = !(params.enabled === false);\\n        this._jsPlumb.visible = true;\\n        this.element = _jp.getElement(params.source);\\n        this._jsPlumb.uuid = params.uuid;\\n        this._jsPlumb.floatingEndpoint = null;\\n        var inPlaceCopy = null;\\n        if (this._jsPlumb.uuid) params.endpointsByUUID[this._jsPlumb.uuid] = this;\\n        this.elementId = params.elementId;\\n        this.dragProxy = params.dragProxy;\\n\\n        this._jsPlumb.connectionCost = params.connectionCost;\\n        this._jsPlumb.connectionsDirected = params.connectionsDirected;\\n        this._jsPlumb.currentAnchorClass = \\\"\\\";\\n        this._jsPlumb.events = {};\\n\\n        var _updateAnchorClass = function () {\\n            // stash old, get new\\n            var oldAnchorClass = _jsPlumb.endpointAnchorClassPrefix + \\\"-\\\" + this._jsPlumb.currentAnchorClass;\\n            this._jsPlumb.currentAnchorClass = this.anchor.getCssClass();\\n            var anchorClass = _jsPlumb.endpointAnchorClassPrefix + (this._jsPlumb.currentAnchorClass ? \\\"-\\\" + this._jsPlumb.currentAnchorClass : \\\"\\\");\\n\\n            this.removeClass(oldAnchorClass);\\n            this.addClass(anchorClass);\\n            // add and remove at the same time to reduce the number of reflows.\\n            jsPlumb.updateClasses(this.element, anchorClass, oldAnchorClass);\\n        }.bind(this);\\n\\n        this.prepareAnchor = function(anchorParams) {\\n            var a = this._jsPlumb.instance.makeAnchor(anchorParams, this.elementId, _jsPlumb);\\n            a.bind(\\\"anchorChanged\\\", function (currentAnchor) {\\n                this.fire(\\\"anchorChanged\\\", {endpoint: this, anchor: currentAnchor});\\n                _updateAnchorClass();\\n            }.bind(this));\\n            return a;\\n        };\\n\\n        this.setPreparedAnchor = function(anchor, doNotRepaint) {\\n            this._jsPlumb.instance.continuousAnchorFactory.clear(this.elementId);\\n            this.anchor = anchor;\\n            _updateAnchorClass();\\n\\n            if (!doNotRepaint)\\n                this._jsPlumb.instance.repaint(this.elementId);\\n\\n            return this;\\n        };\\n\\n        this.setAnchor = function (anchorParams, doNotRepaint) {\\n            var a = this.prepareAnchor(anchorParams);\\n            this.setPreparedAnchor(a, doNotRepaint);\\n            return this;\\n        };\\n\\n        var internalHover = function (state) {\\n            if (this.connections.length > 0) {\\n                for (var i = 0; i < this.connections.length; i++)\\n                    this.connections[i].setHover(state, false);\\n            }\\n            else\\n                this.setHover(state);\\n        }.bind(this);\\n\\n        this.bind(\\\"mouseover\\\", function () {\\n            internalHover(true);\\n        });\\n        this.bind(\\\"mouseout\\\", function () {\\n            internalHover(false);\\n        });\\n\\n        // ANCHOR MANAGER\\n        if (!params._transient) // in place copies, for example, are transient.  they will never need to be retrieved during a paint cycle, because they dont move, and then they are deleted.\\n            this._jsPlumb.instance.anchorManager.add(this, this.elementId);\\n\\n        this.prepareEndpoint = function(ep, typeId) {\\n            var _e = function (t, p) {\\n                var rm = _jsPlumb.getRenderMode();\\n                if (_jp.Endpoints[rm][t]) return new _jp.Endpoints[rm][t](p);\\n                if (!_jsPlumb.Defaults.DoNotThrowErrors)\\n                    throw { msg: \\\"jsPlumb: unknown endpoint type '\\\" + t + \\\"'\\\" };\\n            };\\n\\n            var endpointArgs = {\\n                _jsPlumb: this._jsPlumb.instance,\\n                cssClass: params.cssClass,\\n                container: params.container,\\n                tooltip: params.tooltip,\\n                connectorTooltip: params.connectorTooltip,\\n                endpoint: this\\n            };\\n\\n            var endpoint;\\n\\n            if (_ju.isString(ep))\\n                endpoint = _e(ep, endpointArgs);\\n            else if (_ju.isArray(ep)) {\\n                endpointArgs = _ju.merge(ep[1], endpointArgs);\\n                endpoint = _e(ep[0], endpointArgs);\\n            }\\n            else {\\n                endpoint = ep.clone();\\n            }\\n\\n            // assign a clone function using a copy of endpointArgs. this is used when a drag starts: the endpoint that was dragged is cloned,\\n            // and the clone is left in its place while the original one goes off on a magical journey.\\n            // the copy is to get around a closure problem, in which endpointArgs ends up getting shared by\\n            // the whole world.\\n            //var argsForClone = jsPlumb.extend({}, endpointArgs);\\n            endpoint.clone = function () {\\n                // TODO this, and the code above, can be refactored to be more dry.\\n                if (_ju.isString(ep))\\n                    return _e(ep, endpointArgs);\\n                else if (_ju.isArray(ep)) {\\n                    endpointArgs = _ju.merge(ep[1], endpointArgs);\\n                    return _e(ep[0], endpointArgs);\\n                }\\n            }.bind(this);\\n\\n            endpoint.typeId = typeId;\\n            return endpoint;\\n        };\\n\\n        this.setEndpoint = function(ep, doNotRepaint) {\\n            var _ep = this.prepareEndpoint(ep);\\n            this.setPreparedEndpoint(_ep, true);\\n        };\\n\\n        this.setPreparedEndpoint = function (ep, doNotRepaint) {\\n            if (this.endpoint != null) {\\n                this.endpoint.cleanup();\\n                this.endpoint.destroy();\\n            }\\n            this.endpoint = ep;\\n            this.type = this.endpoint.type;\\n            this.canvas = this.endpoint.canvas;\\n        };\\n\\n        _jp.extend(this, params, typeParameters);\\n\\n        this.isSource = params.isSource || false;\\n        this.isTemporarySource = params.isTemporarySource || false;\\n        this.isTarget = params.isTarget || false;\\n\\n        this.connections = params.connections || [];\\n        this.connectorPointerEvents = params[\\\"connector-pointer-events\\\"];\\n\\n        this.scope = params.scope || _jsPlumb.getDefaultScope();\\n        this.timestamp = null;\\n        this.reattachConnections = params.reattach || _jsPlumb.Defaults.ReattachConnections;\\n        this.connectionsDetachable = _jsPlumb.Defaults.ConnectionsDetachable;\\n        if (params.connectionsDetachable === false || params.detachable === false)\\n            this.connectionsDetachable = false;\\n        this.dragAllowedWhenFull = params.dragAllowedWhenFull !== false;\\n\\n        if (params.onMaxConnections)\\n            this.bind(\\\"maxConnections\\\", params.onMaxConnections);\\n\\n        //\\n        // add a connection. not part of public API.\\n        //\\n        this.addConnection = function (connection) {\\n            this.connections.push(connection);\\n            this[(this.connections.length > 0 ? \\\"add\\\" : \\\"remove\\\") + \\\"Class\\\"](_jsPlumb.endpointConnectedClass);\\n            this[(this.isFull() ? \\\"add\\\" : \\\"remove\\\") + \\\"Class\\\"](_jsPlumb.endpointFullClass);\\n        };\\n\\n        this.detachFromConnection = function (connection, idx, doNotCleanup) {\\n            //idx = idx == null ? findConnectionIndex(connection, this) : idx;\\n            idx = idx == null ? this.connections.indexOf(connection) : idx;\\n            if (idx >= 0) {\\n                this.connections.splice(idx, 1);\\n                this[(this.connections.length > 0 ? \\\"add\\\" : \\\"remove\\\") + \\\"Class\\\"](_jsPlumb.endpointConnectedClass);\\n                this[(this.isFull() ? \\\"add\\\" : \\\"remove\\\") + \\\"Class\\\"](_jsPlumb.endpointFullClass);\\n            }\\n\\n            if (!doNotCleanup && this._deleteOnDetach && this.connections.length === 0) {\\n                _jsPlumb.deleteObject({\\n                    endpoint: this,\\n                    fireEvent: false,\\n                    deleteAttachedObjects: false\\n                });\\n            }\\n        };\\n\\n        this.detach = function (connection, ignoreTarget, forceDetach, fireEvent, originalEvent, endpointBeingDeleted, connectionIndex) {\\n\\n            var idx = connectionIndex == null ? this.connections.indexOf(connection) : connectionIndex,\\n                actuallyDetached = false;\\n            fireEvent = (fireEvent !== false);\\n\\n            if (idx >= 0) {\\n\\n                if (forceDetach || connection._forceDetach || (connection.isDetachable() && connection.isDetachAllowed(connection) && this.isDetachAllowed(connection) && _jsPlumb.checkCondition(\\\"beforeDetach\\\", connection, endpointBeingDeleted) )) {\\n\\n                    _jsPlumb.deleteObject({\\n                        connection: connection,\\n                        fireEvent: (!ignoreTarget && fireEvent),\\n                        originalEvent: originalEvent,\\n                        deleteAttachedObjects: false/**/\\n                    });\\n                    actuallyDetached = true;\\n                }\\n            }\\n            return actuallyDetached;\\n        };\\n\\n        this.detachAll = function (fireEvent, forceDetach) {\\n            var unaffectedConns = [];\\n            while (this.connections.length > 0) {\\n                // TODO this could pass the index in to the detach method to save some time (index will always be zero in this while loop)\\n                var actuallyDetached = this.detach(this.connections[0], false, forceDetach === true, fireEvent !== false, null, this, 0);\\n                if (!actuallyDetached) {\\n                    unaffectedConns.push(this.connections[0]);\\n                    this.connections.splice(0, 1);\\n                }\\n            }\\n            this.connections = unaffectedConns;\\n            return this;\\n        };\\n        this.detachFrom = function (targetEndpoint, fireEvent, originalEvent) {\\n            var c = [];\\n            for (var i = 0; i < this.connections.length; i++) {\\n                if (this.connections[i].endpoints[1] == targetEndpoint || this.connections[i].endpoints[0] == targetEndpoint) {\\n                    c.push(this.connections[i]);\\n                }\\n            }\\n            for (var j = 0; j < c.length; j++) {\\n                this.detach(c[j], false, true, fireEvent, originalEvent);\\n            }\\n            return this;\\n        };\\n\\n        this.getElement = function () {\\n            return this.element;\\n        };\\n\\n        this.setElement = function (el) {\\n            var parentId = this._jsPlumb.instance.getId(el),\\n                curId = this.elementId;\\n            // remove the endpoint from the list for the current endpoint's element\\n            _ju.removeWithFunction(params.endpointsByElement[this.elementId], function (e) {\\n                return e.id == this.id;\\n            }.bind(this));\\n            this.element = jsPlumb.getElement(el);\\n            this.elementId = _jsPlumb.getId(this.element);\\n            _jsPlumb.anchorManager.rehomeEndpoint(this, curId, this.element);\\n            _jsPlumb.dragManager.endpointAdded(this.element);\\n            _ju.addToList(params.endpointsByElement, parentId, this);\\n            return this;\\n        };\\n\\n        /**\\n         * private but must be exposed.\\n         */\\n        this.makeInPlaceCopy = function () {\\n            var loc = this.anchor.getCurrentLocation({element: this}),\\n                o = this.anchor.getOrientation(this),\\n                acc = this.anchor.getCssClass(),\\n                inPlaceAnchor = {\\n                    bind: function () {\\n                    },\\n                    compute: function () {\\n                        return [ loc[0], loc[1] ];\\n                    },\\n                    getCurrentLocation: function () {\\n                        return [ loc[0], loc[1] ];\\n                    },\\n                    getOrientation: function () {\\n                        return o;\\n                    },\\n                    getCssClass: function () {\\n                        return acc;\\n                    }\\n                };\\n\\n            return _newEndpoint({\\n                dropOptions: params.dropOptions,\\n                anchor: inPlaceAnchor,\\n                source: this.element,\\n                paintStyle: this.getPaintStyle(),\\n                endpoint: params.hideOnDrag ? \\\"Blank\\\" : this.endpoint,\\n                _transient: true,\\n                scope: this.scope,\\n                reference:this\\n            });\\n        };\\n\\n        /**\\n         * returns a connection from the pool; used when dragging starts.  just gets the head of the array if it can.\\n         */\\n        this.connectorSelector = function () {\\n            var candidate = this.connections[0];\\n            // SP target source refactor\\n            if (/*this.isTarget && */candidate) return candidate;\\n            else {\\n                return (this.connections.length < this._jsPlumb.maxConnections) || this._jsPlumb.maxConnections == -1 ? null : candidate;\\n            }\\n        };\\n\\n        this.setStyle = this.setPaintStyle;\\n\\n        this.paint = function (params) {\\n            params = params || {};\\n            var timestamp = params.timestamp, recalc = !(params.recalc === false);\\n            if (!timestamp || this.timestamp !== timestamp) {\\n\\n                var info = _jsPlumb.updateOffset({ elId: this.elementId, timestamp: timestamp });\\n\\n                var xy = params.offset ? params.offset.o : info.o;\\n                if (xy != null) {\\n                    var ap = params.anchorPoint, connectorPaintStyle = params.connectorPaintStyle;\\n                    if (ap == null) {\\n                        var wh = params.dimensions || info.s,\\n                            anchorParams = { xy: [ xy.left, xy.top ], wh: wh, element: this, timestamp: timestamp };\\n                        if (recalc && this.anchor.isDynamic && this.connections.length > 0) {\\n                            var c = findConnectionToUseForDynamicAnchor(this, params.elementWithPrecedence),\\n                                oIdx = c.endpoints[0] == this ? 1 : 0,\\n                                oId = oIdx === 0 ? c.sourceId : c.targetId,\\n                                oInfo = _jsPlumb.getCachedData(oId),\\n                                oOffset = oInfo.o, oWH = oInfo.s;\\n                            anchorParams.txy = [ oOffset.left, oOffset.top ];\\n                            anchorParams.twh = oWH;\\n                            anchorParams.tElement = c.endpoints[oIdx];\\n                        }\\n                        ap = this.anchor.compute(anchorParams);\\n                    }\\n\\n                    this.endpoint.compute(ap, this.anchor.getOrientation(this), this._jsPlumb.paintStyleInUse, connectorPaintStyle || this.paintStyleInUse);\\n                    this.endpoint.paint(this._jsPlumb.paintStyleInUse, this.anchor);\\n                    this.timestamp = timestamp;\\n\\n                    // paint overlays\\n                    for (var i in this._jsPlumb.overlays) {\\n                        if (this._jsPlumb.overlays.hasOwnProperty(i)) {\\n                            var o = this._jsPlumb.overlays[i];\\n                            if (o.isVisible()) {\\n                                this._jsPlumb.overlayPlacements[i] = o.draw(this.endpoint, this._jsPlumb.paintStyleInUse);\\n                                o.paint(this._jsPlumb.overlayPlacements[i]);\\n                            }\\n                        }\\n                    }\\n                }\\n            }\\n        };\\n\\n        this.getTypeDescriptor = function () {\\n            return \\\"endpoint\\\";\\n        };\\n        this.isVisible = function () {\\n            return this._jsPlumb.visible;\\n        };\\n\\n        this.repaint = this.paint;\\n\\n        var draggingInitialised = false;\\n        this.initDraggable = function () {\\n\\n            // is this a connection source? we make it draggable and have the\\n            // drag listener maintain a connection with a floating endpoint.\\n            if (!draggingInitialised && _jp.isDragSupported(this.element)) {\\n                var placeholderInfo = { id: null, element: null },\\n                    jpc = null,\\n                    existingJpc = false,\\n                    existingJpcParams = null,\\n                    _dragHandler = _makeConnectionDragHandler(this, placeholderInfo, _jsPlumb),\\n                    dragOptions = params.dragOptions || {},\\n                    defaultOpts = {},\\n                    startEvent = _jp.dragEvents.start,\\n                    stopEvent = _jp.dragEvents.stop,\\n                    dragEvent = _jp.dragEvents.drag,\\n                    beforeStartEvent = _jp.dragEvents.beforeStart,\\n                    payload;\\n\\n                // respond to beforeStart from katavorio; this will have, optionally, a payload of attribute values\\n                // that were placed there by the makeSource mousedown listener.\\n                var beforeStart = function(beforeStartParams) {\\n                    payload = beforeStartParams.e.payload || {};\\n                };\\n\\n                var start = function (startParams) {\\n\\n// -------------   first, get a connection to drag. this may be null, in which case we are dragging a new one.\\n\\n                    jpc = this.connectorSelector();\\n\\n// -------------------------------- now a bunch of tests about whether or not to proceed -------------------------\\n\\n                    var _continue = true;\\n                    // if not enabled, return\\n                    if (!this.isEnabled()) _continue = false;\\n                    // if no connection and we're not a source - or temporarily a source, as is the case with makeSource - return.\\n                    if (jpc == null && !this.isSource && !this.isTemporarySource) _continue = false;\\n                    // otherwise if we're full and not allowed to drag, also return false.\\n                    if (this.isSource && this.isFull() && !(jpc != null && this.dragAllowedWhenFull)) _continue = false;\\n                    // if the connection was setup as not detachable or one of its endpoints\\n                    // was setup as connectionsDetachable = false, or Defaults.ConnectionsDetachable\\n                    // is set to false...\\n                    if (jpc != null && !jpc.isDetachable(this)) _continue = false;\\n\\n                    var beforeDrag = _jsPlumb.checkCondition(jpc == null ? \\\"beforeDrag\\\" : \\\"beforeStartDetach\\\", {\\n                        endpoint:this,\\n                        source:this.element,\\n                        sourceId:this.elementId,\\n                        connection:jpc\\n                    });\\n                    if (beforeDrag === false) _continue = false;\\n                    // else we might have been given some data. we'll pass it in to a new connection as 'data'.\\n                    // here we also merge in the optional payload we were given on mousedown.\\n                    else if (typeof beforeDrag === \\\"object\\\") {\\n                        jsPlumb.extend(beforeDrag, payload || {});\\n                    }\\n                    else\\n                        // or if no beforeDrag data, maybe use the payload on its own.\\n                        beforeDrag = payload || {};\\n\\n                    if (_continue === false) {\\n                        // this is for mootools and yui. returning false from this causes jquery to stop drag.\\n                        // the events are wrapped in both mootools and yui anyway, but i don't think returning\\n                        // false from the start callback would stop a drag.\\n                        if (_jsPlumb.stopDrag) _jsPlumb.stopDrag(this.canvas);\\n                        _dragHandler.stopDrag();\\n                        return false;\\n                    }\\n\\n// ---------------------------------------------------------------------------------------------------------------------\\n\\n                    // ok to proceed.\\n\\n                    // clear hover for all connections for this endpoint before continuing.\\n                    for (var i = 0; i < this.connections.length; i++)\\n                        this.connections[i].setHover(false);\\n\\n                    this.addClass(\\\"endpointDrag\\\");\\n                    _jsPlumb.setConnectionBeingDragged(true);\\n\\n                    // if we're not full but there was a connection, make it null. we'll create a new one.\\n                    if (jpc && !this.isFull() && this.isSource) jpc = null;\\n\\n                    _jsPlumb.updateOffset({ elId: this.elementId });\\n\\n// ----------------    make the element we will drag around, and position it -----------------------------\\n\\n                    var ipco = this._jsPlumb.instance.getOffset(this.canvas),\\n                        canvasElement = this.canvas,\\n                        ips = this._jsPlumb.instance.getSize(this.canvas);\\n\\n                    _makeDraggablePlaceholder(placeholderInfo, _jsPlumb, ipco, ips);\\n\\n                    // store the id of the dragging div and the source element. the drop function will pick these up.                   \\n                    _jsPlumb.setAttributes(this.canvas, {\\n                        \\\"dragId\\\": placeholderInfo.id,\\n                        \\\"elId\\\": this.elementId\\n                    });\\n\\n// ------------------- create an endpoint that will be our floating endpoint ------------------------------------\\n\\n                    var endpointToFloat = this.dragProxy || this.endpoint;\\n                    if (this.dragProxy == null && this.connectionType != null) {\\n                        var aae = this._jsPlumb.instance.deriveEndpointAndAnchorSpec(this.connectionType);\\n                        if (aae.endpoints[1]) endpointToFloat = aae.endpoints[1];\\n                    }\\n                    var centerAnchor = this._jsPlumb.instance.makeAnchor(\\\"Center\\\");\\n                    centerAnchor.isFloating = true;\\n                    this._jsPlumb.floatingEndpoint = _makeFloatingEndpoint(this.getPaintStyle(), centerAnchor, endpointToFloat, this.canvas, placeholderInfo.element, _jsPlumb, _newEndpoint, this.scope);\\n                    var _savedAnchor = this._jsPlumb.floatingEndpoint.anchor;\\n\\n\\n                    if (jpc == null) {\\n\\n                        this.setHover(false, false);\\n                        // create a connection. one end is this endpoint, the other is a floating endpoint.                    \\n                        jpc = _newConnection({\\n                            sourceEndpoint: this,\\n                            targetEndpoint: this._jsPlumb.floatingEndpoint,\\n                            source: this.element,  // for makeSource with parent option.  ensure source element is represented correctly.\\n                            target: placeholderInfo.element,\\n                            anchors: [ this.anchor, this._jsPlumb.floatingEndpoint.anchor ],\\n                            paintStyle: params.connectorStyle, // this can be null. Connection will use the default.\\n                            hoverPaintStyle: params.connectorHoverStyle,\\n                            connector: params.connector, // this can also be null. Connection will use the default.\\n                            overlays: params.connectorOverlays,\\n                            type: this.connectionType,\\n                            cssClass: this.connectorClass,\\n                            hoverClass: this.connectorHoverClass,\\n                            scope:params.scope,\\n                            data:beforeDrag\\n                        });\\n                        jpc.pending = true;\\n                        jpc.addClass(_jsPlumb.draggingClass);\\n                        this._jsPlumb.floatingEndpoint.addClass(_jsPlumb.draggingClass);\\n                        this._jsPlumb.floatingEndpoint.anchor = _savedAnchor;\\n                        // fire an event that informs that a connection is being dragged\\n                        _jsPlumb.fire(\\\"connectionDrag\\\", jpc);\\n\\n                        // register the new connection on the drag manager. This connection, at this point, is 'pending',\\n                        // and has as its target a temporary element (the 'placeholder'). If the connection subsequently\\n                        // becomes established, the anchor manager is informed that the target of the connection has\\n                        // changed.\\n\\n                        _jsPlumb.anchorManager.newConnection(jpc);\\n\\n                    } else {\\n                        existingJpc = true;\\n                        jpc.setHover(false);\\n                        // new anchor idx\\n                        var anchorIdx = jpc.endpoints[0].id == this.id ? 0 : 1;\\n                        this.detachFromConnection(jpc, null, true);                         // detach from the connection while dragging is occurring. but dont cleanup automatically.\\n\\n                        // store the original scope (issue 57)\\n                        var dragScope = _jsPlumb.getDragScope(canvasElement);\\n                        _jsPlumb.setAttribute(this.canvas, \\\"originalScope\\\", dragScope);\\n\\n                        // fire an event that informs that a connection is being dragged. we do this before\\n                        // replacing the original target with the floating element info.\\n                        _jsPlumb.fire(\\\"connectionDrag\\\", jpc);\\n\\n                        // now we replace ourselves with the temporary div we created above:\\n                        if (anchorIdx === 0) {\\n                            existingJpcParams = [ jpc.source, jpc.sourceId, canvasElement, dragScope ];\\n                            jpc.source = placeholderInfo.element;\\n                            jpc.sourceId = placeholderInfo.id;\\n\\n                            _jsPlumb.anchorManager.sourceChanged(jpc.endpoints[anchorIdx].elementId, jpc.sourceId, jpc);\\n\\n                        } else {\\n                            existingJpcParams = [ jpc.target, jpc.targetId, canvasElement, dragScope ];\\n                            jpc.target = placeholderInfo.element;\\n                            jpc.targetId = placeholderInfo.id;\\n\\n                            _jsPlumb.anchorManager.updateOtherEndpoint(jpc.sourceId, jpc.endpoints[anchorIdx].elementId, jpc.targetId, jpc);\\n                        }\\n\\n                        // lock the other endpoint; if it is dynamic it will not move while the drag is occurring.\\n                        // TODO SP i commented this out as part of the rewirte; i think now we want the other endpoint\\n                        // to behave naturally.\\n                        // SJP\\n                        //jpc.endpoints[anchorIdx === 0 ? 1 : 0].anchor.locked = true;\\n\\n\\n                        // store the original endpoint and assign the new floating endpoint for the drag.\\n                        jpc.suspendedEndpoint = jpc.endpoints[anchorIdx];\\n\\n                        // PROVIDE THE SUSPENDED ELEMENT, BE IT A SOURCE OR TARGET (ISSUE 39)\\n                        jpc.suspendedElement = jpc.endpoints[anchorIdx].getElement();\\n                        jpc.suspendedElementId = jpc.endpoints[anchorIdx].elementId;\\n                        jpc.suspendedElementType = anchorIdx === 0 ? \\\"source\\\" : \\\"target\\\";\\n\\n                        jpc.suspendedEndpoint.setHover(false);\\n                        this._jsPlumb.floatingEndpoint.referenceEndpoint = jpc.suspendedEndpoint;\\n                        jpc.endpoints[anchorIdx] = this._jsPlumb.floatingEndpoint;\\n\\n                        jpc.addClass(_jsPlumb.draggingClass);\\n                        this._jsPlumb.floatingEndpoint.addClass(_jsPlumb.draggingClass);\\n                    }\\n\\n                    // register it and register connection on it.\\n                    _jsPlumb.floatingConnections[placeholderInfo.id] = jpc;\\n                    // only register for the target endpoint; we will not be dragging the source at any time\\n                    // before this connection is either discarded or made into a permanent connection.\\n                    _ju.addToList(params.endpointsByElement, placeholderInfo.id, this._jsPlumb.floatingEndpoint);\\n                    // tell jsplumb about it\\n                    _jsPlumb.currentlyDragging = true;\\n                }.bind(this);\\n\\n                var stop = function () {\\n                    _jsPlumb.setConnectionBeingDragged(false);\\n\\n                    if (jpc && jpc.endpoints != null) {\\n                        // get the actual drop event (decode from library args to stop function)\\n                        var originalEvent = _jsPlumb.getDropEvent(arguments);\\n                        // unlock the other endpoint (if it is dynamic, it would have been locked at drag start)\\n                        var idx = _jsPlumb.getFloatingAnchorIndex(jpc);\\n                        jpc.endpoints[idx === 0 ? 1 : 0].anchor.locked = false;\\n                        // TODO: Dont want to know about css classes inside jsplumb, ideally.\\n                        jpc.removeClass(_jsPlumb.draggingClass);\\n\\n                        // if we have the floating endpoint then the connection has not been dropped\\n                        // on another endpoint.  If it is a new connection we throw it away. If it is an\\n                        // existing connection we check to see if we should reattach it, throwing it away\\n                        // if not.\\n                        if (this._jsPlumb && (jpc.deleteConnectionNow || jpc.endpoints[idx] == this._jsPlumb.floatingEndpoint)) {\\n                            // 6a. if the connection was an existing one...\\n                            if (existingJpc && jpc.suspendedEndpoint) {\\n                                // fix for issue35, thanks Sylvain Gizard: when firing the detach event make sure the\\n                                // floating endpoint has been replaced.\\n                                if (idx === 0) {\\n                                    jpc.floatingElement = jpc.source;\\n                                    jpc.floatingId = jpc.sourceId;\\n                                    jpc.floatingEndpoint = jpc.endpoints[0];\\n                                    jpc.floatingIndex = 0;\\n                                    jpc.source = existingJpcParams[0];\\n                                    jpc.sourceId = existingJpcParams[1];\\n                                } else {\\n                                    // keep a copy of the floating element; the anchor manager will want to clean up.\\n                                    jpc.floatingElement = jpc.target;\\n                                    jpc.floatingId = jpc.targetId;\\n                                    jpc.floatingEndpoint = jpc.endpoints[1];\\n                                    jpc.floatingIndex = 1;\\n                                    jpc.target = existingJpcParams[0];\\n                                    jpc.targetId = existingJpcParams[1];\\n                                }\\n\\n                                var fe = this._jsPlumb.floatingEndpoint; // store for later removal.\\n                                // restore the original scope (issue 57)\\n                                _jsPlumb.setDragScope(existingJpcParams[2], existingJpcParams[3]);\\n                                jpc.endpoints[idx] = jpc.suspendedEndpoint;\\n                                // IF the connection should be reattached, or the other endpoint refuses detach, then\\n                                // reset the connection to its original state\\n                                if (jpc.isReattach() || jpc._forceReattach || jpc._forceDetach || !jpc.endpoints[idx === 0 ? 1 : 0].detach(jpc, false, false, true, originalEvent, true)) {\\n                                    jpc.setHover(false);\\n                                    jpc._forceDetach = null;\\n                                    jpc._forceReattach = null;\\n                                    this._jsPlumb.floatingEndpoint.detachFromConnection(jpc);\\n                                    jpc.suspendedEndpoint.addConnection(jpc);\\n\\n                                    // TODO this code is duplicated in lots of places...and there is nothing external\\n                                    // in the code; it all refers to the connection itself. we could add a\\n                                    // `checkSanity(connection)` method to anchorManager that did this.\\n                                    if (idx == 1) {\\n                                        _jsPlumb.anchorManager.updateOtherEndpoint(jpc.sourceId, jpc.floatingId, jpc.targetId, jpc);\\n                                    }\\n                                    else {\\n                                        _jsPlumb.anchorManager.sourceChanged(jpc.floatingId, jpc.sourceId, jpc);\\n                                    }\\n\\n                                    _jsPlumb.repaint(existingJpcParams[1]);\\n                                }\\n                                else {\\n                                    _jsPlumb.deleteObject({endpoint: fe});\\n                                }\\n                            }\\n                        }\\n\\n                        // makeTargets sets this flag, to tell us we have been replaced and should delete this object.\\n                        if (this.deleteAfterDragStop) {\\n                            _jsPlumb.deleteObject({endpoint: this});\\n                        }\\n                        else {\\n                            if (this._jsPlumb) {\\n                                 this.paint({recalc: false});\\n                            }\\n                        }\\n\\n                        // although the connection is no longer valid, there are use cases where this is useful.\\n                        _jsPlumb.fire(\\\"connectionDragStop\\\", jpc, originalEvent);\\n                        // fire this event to give people more fine-grained control (connectionDragStop fires a lot)\\n                        if (jpc.pending) {\\n                            _jsPlumb.fire(\\\"connectionAborted\\\", jpc, originalEvent);\\n                        }\\n                        // tell jsplumb that dragging is finished.\\n                        _jsPlumb.currentlyDragging = false;\\n                        jpc = null;\\n                    }\\n\\n                    // if no endpoints, jpc already cleaned up. but still we want to ensure we're reset properly.\\n                    // remove the element associated with the floating endpoint\\n                    // (and its associated floating endpoint and visual artefacts)\\n                    if (placeholderInfo && placeholderInfo.element) {\\n                        _jsPlumb.remove(placeholderInfo.element, false, false);\\n                    }\\n                    // remove the inplace copy\\n                    if (inPlaceCopy) {\\n                        _jsPlumb.deleteObject({endpoint: inPlaceCopy});\\n                    }\\n\\n                    if (this._jsPlumb) {\\n                        // make our canvas visible (TODO: hand off to library; we should not know about DOM)\\n                        this.canvas.style.visibility = \\\"visible\\\";\\n                        // unlock our anchor\\n                        this.anchor.locked = false;\\n                        // clear floating anchor.\\n                        this._jsPlumb.floatingEndpoint = null;\\n                    }\\n\\n                }.bind(this);\\n\\n                dragOptions = _jp.extend(defaultOpts, dragOptions);\\n                dragOptions.scope = this.scope || dragOptions.scope;\\n                dragOptions[beforeStartEvent] = _ju.wrap(dragOptions[beforeStartEvent], beforeStart, false);\\n                dragOptions[startEvent] = _ju.wrap(dragOptions[startEvent], start, false);\\n                // extracted drag handler function so can be used by makeSource\\n                dragOptions[dragEvent] = _ju.wrap(dragOptions[dragEvent], _dragHandler.drag);\\n                dragOptions[stopEvent] = _ju.wrap(dragOptions[stopEvent], stop);\\n                dragOptions.multipleDrop = false;\\n\\n                dragOptions.canDrag = function () {\\n                    return this.isSource || this.isTemporarySource || /*(this.isTarget && */this.connections.length > 0/*)*/;\\n                }.bind(this);\\n\\n                _jsPlumb.initDraggable(this.canvas, dragOptions, \\\"internal\\\");\\n\\n                this.canvas._jsPlumbRelatedElement = this.element;\\n\\n                draggingInitialised = true;\\n            }\\n        };\\n\\n        var ep = params.endpoint || this._jsPlumb.instance.Defaults.Endpoint || _jp.Defaults.Endpoint;\\n        this.setEndpoint(ep, true);\\n        var anchorParamsToUse = params.anchor ? params.anchor : params.anchors ? params.anchors : (_jsPlumb.Defaults.Anchor || \\\"Top\\\");\\n        this.setAnchor(anchorParamsToUse, true);\\n\\n        // finally, set type if it was provided\\n        var type = [ \\\"default\\\", (params.type || \\\"\\\")].join(\\\" \\\");\\n        this.addType(type, params.data, true);\\n        this.canvas = this.endpoint.canvas;\\n        this.canvas._jsPlumb = this;\\n\\n        this.initDraggable();\\n\\n        // pulled this out into a function so we can reuse it for the inPlaceCopy canvas; you can now drop detached connections\\n        // back onto the endpoint you detached it from.\\n        var _initDropTarget = function (canvas, isTransient, endpoint, referenceEndpoint) {\\n\\n            if (_jp.isDropSupported(this.element)) {\\n                var dropOptions = params.dropOptions || _jsPlumb.Defaults.DropOptions || _jp.Defaults.DropOptions;\\n                dropOptions = _jp.extend({}, dropOptions);\\n                dropOptions.scope = dropOptions.scope || this.scope;\\n                var dropEvent = _jp.dragEvents.drop,\\n                    overEvent = _jp.dragEvents.over,\\n                    outEvent = _jp.dragEvents.out,\\n                    _ep = this,\\n                    drop = _jsPlumb.EndpointDropHandler({\\n                        getEndpoint: function () {\\n                            return _ep;\\n                        },\\n                        jsPlumb: _jsPlumb,\\n                        enabled: function () {\\n                            return endpoint != null ? endpoint.isEnabled() : true;\\n                        },\\n                        isFull: function () {\\n                            return endpoint.isFull();\\n                        },\\n                        element: this.element,\\n                        elementId: this.elementId,\\n                        isSource: this.isSource,\\n                        isTarget: this.isTarget,\\n                        addClass: function (clazz) {\\n                            _ep.addClass(clazz);\\n                        },\\n                        removeClass: function (clazz) {\\n                            _ep.removeClass(clazz);\\n                        },\\n                        isDropAllowed: function () {\\n                            return _ep.isDropAllowed.apply(_ep, arguments);\\n                        },\\n                        reference:referenceEndpoint,\\n                        isRedrop:function(jpc, dhParams) {\\n                            return jpc.suspendedEndpoint && dhParams.reference && (jpc.suspendedEndpoint.id === dhParams.reference.id);\\n                        }\\n                    });\\n\\n                dropOptions[dropEvent] = _ju.wrap(dropOptions[dropEvent], drop, true);\\n                dropOptions[overEvent] = _ju.wrap(dropOptions[overEvent], function () {\\n                    var draggable = _jp.getDragObject(arguments),\\n                        id = _jsPlumb.getAttribute(_jp.getElement(draggable), \\\"dragId\\\"),\\n                        _jpc = _jsPlumb.floatingConnections[id];\\n\\n                    if (_jpc != null) {\\n                        var idx = _jsPlumb.getFloatingAnchorIndex(_jpc);\\n                        // here we should fire the 'over' event if we are a target and this is a new connection,\\n                        // or we are the same as the floating endpoint.\\n                        var _cont = (this.isTarget && idx !== 0) || (_jpc.suspendedEndpoint && this.referenceEndpoint && this.referenceEndpoint.id == _jpc.suspendedEndpoint.id);\\n                        if (_cont) {\\n                            var bb = _jsPlumb.checkCondition(\\\"checkDropAllowed\\\", {\\n                                sourceEndpoint: _jpc.endpoints[idx],\\n                                targetEndpoint: this,\\n                                connection: _jpc\\n                            });\\n                            this[(bb ? \\\"add\\\" : \\\"remove\\\") + \\\"Class\\\"](_jsPlumb.endpointDropAllowedClass);\\n                            this[(bb ? \\\"remove\\\" : \\\"add\\\") + \\\"Class\\\"](_jsPlumb.endpointDropForbiddenClass);\\n                            _jpc.endpoints[idx].anchor.over(this.anchor, this);\\n                        }\\n                    }\\n                }.bind(this));\\n\\n                dropOptions[outEvent] = _ju.wrap(dropOptions[outEvent], function () {\\n                    var draggable = _jp.getDragObject(arguments),\\n                        id = draggable == null ? null : _jsPlumb.getAttribute(_jp.getElement(draggable), \\\"dragId\\\"),\\n                        _jpc = id ? _jsPlumb.floatingConnections[id] : null;\\n\\n                    if (_jpc != null) {\\n                        var idx = _jsPlumb.getFloatingAnchorIndex(_jpc);\\n                        var _cont = (this.isTarget && idx !== 0) || (_jpc.suspendedEndpoint && this.referenceEndpoint && this.referenceEndpoint.id == _jpc.suspendedEndpoint.id);\\n                        if (_cont) {\\n                            this.removeClass(_jsPlumb.endpointDropAllowedClass);\\n                            this.removeClass(_jsPlumb.endpointDropForbiddenClass);\\n                            _jpc.endpoints[idx].anchor.out();\\n                        }\\n                    }\\n                }.bind(this));\\n\\n                _jsPlumb.initDroppable(canvas, dropOptions, \\\"internal\\\", isTransient);\\n            }\\n        }.bind(this);\\n\\n        // Initialise the endpoint's canvas as a drop target. The drop handler will take care of the logic of whether\\n        // something can actually be dropped.\\n        if (!this.anchor.isFloating)\\n            _initDropTarget(this.canvas, !(params._transient || this.anchor.isFloating), this, params.reference);\\n\\n\\n        return this;\\n    };\\n\\n    _ju.extend(_jp.Endpoint, _jp.OverlayCapableJsPlumbUIComponent, {\\n\\n        setVisible: function (v, doNotChangeConnections, doNotNotifyOtherEndpoint) {\\n            this._jsPlumb.visible = v;\\n            if (this.canvas) this.canvas.style.display = v ? \\\"block\\\" : \\\"none\\\";\\n            this[v ? \\\"showOverlays\\\" : \\\"hideOverlays\\\"]();\\n            if (!doNotChangeConnections) {\\n                for (var i = 0; i < this.connections.length; i++) {\\n                    this.connections[i].setVisible(v);\\n                    if (!doNotNotifyOtherEndpoint) {\\n                        var oIdx = this === this.connections[i].endpoints[0] ? 1 : 0;\\n                        // only change the other endpoint if this is its only connection.\\n                        if (this.connections[i].endpoints[oIdx].connections.length == 1) this.connections[i].endpoints[oIdx].setVisible(v, true, true);\\n                    }\\n                }\\n            }\\n        },\\n        getAttachedElements: function () {\\n            return this.connections;\\n        },\\n        applyType: function (t, doNotRepaint) {\\n            this.setPaintStyle(t.endpointStyle || t.paintStyle, doNotRepaint);\\n            this.setHoverPaintStyle(t.endpointHoverStyle || t.hoverPaintStyle, doNotRepaint);\\n            if (t.maxConnections != null) this._jsPlumb.maxConnections = t.maxConnections;\\n            if (t.scope) this.scope = t.scope;\\n            _jp.extend(this, t, typeParameters);\\n            if (t.cssClass != null && this.canvas) this._jsPlumb.instance.addClass(this.canvas, t.cssClass);\\n            _jp.OverlayCapableJsPlumbUIComponent.applyType(this, t);\\n        },\\n        isEnabled: function () {\\n            return this._jsPlumb.enabled;\\n        },\\n        setEnabled: function (e) {\\n            this._jsPlumb.enabled = e;\\n        },\\n        cleanup: function () {\\n            var anchorClass = this._jsPlumb.instance.endpointAnchorClassPrefix + (this._jsPlumb.currentAnchorClass ? \\\"-\\\" + this._jsPlumb.currentAnchorClass : \\\"\\\");\\n            jsPlumb.removeClass(this.element, anchorClass);\\n            this.anchor = null;\\n            this.endpoint.cleanup(true);\\n            this.endpoint.destroy();\\n            this.endpoint = null;\\n            // drag/drop\\n            this._jsPlumb.instance.destroyDraggable(this.canvas, \\\"internal\\\");\\n            this._jsPlumb.instance.destroyDroppable(this.canvas, \\\"internal\\\");\\n        },\\n        setHover: function (h) {\\n            if (this.endpoint && this._jsPlumb && !this._jsPlumb.instance.isConnectionBeingDragged())\\n                this.endpoint.setHover(h);\\n        },\\n        isFull: function () {\\n            return this._jsPlumb.maxConnections === 0 ? true : !(this.isFloating() || this._jsPlumb.maxConnections < 0 || this.connections.length < this._jsPlumb.maxConnections);\\n        },\\n        /**\\n         * private but needs to be exposed.\\n         */\\n        isFloating: function () {\\n            return this.anchor != null && this.anchor.isFloating;\\n        },\\n        isConnectedTo: function (endpoint) {\\n            var found = false;\\n            if (endpoint) {\\n                for (var i = 0; i < this.connections.length; i++) {\\n                    if (this.connections[i].endpoints[1] == endpoint || this.connections[i].endpoints[0] == endpoint) {\\n                        found = true;\\n                        break;\\n                    }\\n                }\\n            }\\n            return found;\\n        },\\n        getConnectionCost: function () {\\n            return this._jsPlumb.connectionCost;\\n        },\\n        setConnectionCost: function (c) {\\n            this._jsPlumb.connectionCost = c;\\n        },\\n        areConnectionsDirected: function () {\\n            return this._jsPlumb.connectionsDirected;\\n        },\\n        setConnectionsDirected: function (b) {\\n            this._jsPlumb.connectionsDirected = b;\\n        },\\n        setElementId: function (_elId) {\\n            this.elementId = _elId;\\n            this.anchor.elementId = _elId;\\n        },\\n        setReferenceElement: function (_el) {\\n            this.element = _jp.getElement(_el);\\n        },\\n        setDragAllowedWhenFull: function (allowed) {\\n            this.dragAllowedWhenFull = allowed;\\n        },\\n        equals: function (endpoint) {\\n            return this.anchor.equals(endpoint.anchor);\\n        },\\n        getUuid: function () {\\n            return this._jsPlumb.uuid;\\n        },\\n        computeAnchor: function (params) {\\n            return this.anchor.compute(params);\\n        }\\n    });\\n\\n    root.jsPlumbInstance.prototype.EndpointDropHandler = function (dhParams) {\\n        return function (e) {\\n\\n            var _jsPlumb = dhParams.jsPlumb;\\n\\n            // remove the classes that are added dynamically. drop is neither forbidden nor allowed now that\\n            // the drop is finishing.\\n            dhParams.removeClass(_jsPlumb.endpointDropAllowedClass);\\n            dhParams.removeClass(_jsPlumb.endpointDropForbiddenClass);\\n\\n            var originalEvent = _jsPlumb.getDropEvent(arguments),\\n                draggable = _jsPlumb.getDragObject(arguments),\\n                id = _jsPlumb.getAttribute(draggable, \\\"dragId\\\"),\\n                elId = _jsPlumb.getAttribute(draggable, \\\"elId\\\"),\\n                scope = _jsPlumb.getAttribute(draggable, \\\"originalScope\\\"),\\n                jpc = _jsPlumb.floatingConnections[id];\\n\\n            // if no active connection, bail.\\n            if (jpc == null) return;\\n\\n            // calculate if this is an existing connection.\\n            var existingConnection = jpc.suspendedEndpoint != null;\\n\\n            // if suspended endpoint exists but has been cleaned up, bail. This means it's an existing connection\\n            // that has been detached and will shortly be discarded.\\n            if (existingConnection && jpc.suspendedEndpoint._jsPlumb == null) return;\\n\\n            // get the drop endpoint. for a normal connection this is just the one that would replace the currently\\n            // floating endpoint. for a makeTarget this is a new endpoint that is created on drop. But we leave that to\\n            // the handler to figure out.\\n            var _ep = dhParams.getEndpoint(jpc);\\n\\n            // If we're not given an endpoint to use, bail.\\n            if (_ep == null) return;\\n\\n            // if this is a drop back where the connection came from, mark it force reattach and\\n            // return; the stop handler will reattach. without firing an event.\\n            if (dhParams.isRedrop(jpc, dhParams)) {\\n                jpc._forceReattach = true;\\n                jpc.setHover(false);\\n                if (dhParams.maybeCleanup) dhParams.maybeCleanup(_ep);\\n                return;\\n            }\\n\\n            // ensure we dont bother trying to drop sources on non-source eps, and same for target.\\n            var idx = _jsPlumb.getFloatingAnchorIndex(jpc);\\n            if ((idx === 0 && !dhParams.isSource)|| (idx === 1 && !dhParams.isTarget)){\\n                if (dhParams.maybeCleanup) dhParams.maybeCleanup(_ep);\\n                return;\\n            }\\n\\n            if (dhParams.onDrop) dhParams.onDrop(jpc);\\n\\n            // restore the original scope if necessary (issue 57)\\n            if (scope) _jsPlumb.setDragScope(draggable, scope);\\n\\n            // if the target of the drop is full, fire an event (we abort below)\\n            // makeTarget: keep.\\n            var isFull = dhParams.isFull(e);\\n            if (isFull) {\\n                _ep.fire(\\\"maxConnections\\\", {\\n                    endpoint: this,\\n                    connection: jpc,\\n                    maxConnections: _ep._jsPlumb.maxConnections\\n                }, originalEvent);\\n            }\\n            //\\n            // if endpoint enabled, not full, and matches the index of the floating endpoint...\\n            if (!isFull &&  dhParams.enabled()) {\\n                var _doContinue = true;\\n\\n                // before testing for beforeDrop, reset the connection's source/target to be the actual DOM elements\\n                // involved (that is, stash any temporary stuff used for dragging. but we need to keep it around in\\n                // order that the anchor manager can clean things up properly).\\n                if (idx === 0) {\\n                    jpc.floatingElement = jpc.source;\\n                    jpc.floatingId = jpc.sourceId;\\n                    jpc.floatingEndpoint = jpc.endpoints[0];\\n                    jpc.floatingIndex = 0;\\n                    jpc.source = dhParams.element;\\n                    jpc.sourceId = dhParams.elementId;\\n                } else {\\n                    jpc.floatingElement = jpc.target;\\n                    jpc.floatingId = jpc.targetId;\\n                    jpc.floatingEndpoint = jpc.endpoints[1];\\n                    jpc.floatingIndex = 1;\\n                    jpc.target = dhParams.element;\\n                    jpc.targetId = dhParams.elementId;\\n                }\\n\\n                // if this is an existing connection and detach is not allowed we won't continue. The connection's\\n                // endpoints have been reinstated; everything is back to how it was.\\n                if (existingConnection && jpc.suspendedEndpoint.id != _ep.id) {\\n\\n                    if (!jpc.isDetachAllowed(jpc) || !jpc.endpoints[idx].isDetachAllowed(jpc) || !jpc.suspendedEndpoint.isDetachAllowed(jpc) || !_jsPlumb.checkCondition(\\\"beforeDetach\\\", jpc))\\n                        _doContinue = false;\\n                }\\n\\n// ------------ wrap the execution path in a function so we can support asynchronous beforeDrop\\n\\n                var continueFunction = function (optionalData) {\\n                    // remove this jpc from the current endpoint, which is a floating endpoint that we will\\n                    // subsequently discard.\\n                    jpc.endpoints[idx].detachFromConnection(jpc);\\n\\n                    // if there's a suspended endpoint, detach it from the connection.\\n                    if (jpc.suspendedEndpoint) jpc.suspendedEndpoint.detachFromConnection(jpc);\\n\\n                    jpc.endpoints[idx] = _ep;\\n                    _ep.addConnection(jpc);\\n\\n                    // copy our parameters in to the connection:\\n                    var params = _ep.getParameters();\\n                    for (var aParam in params)\\n                        jpc.setParameter(aParam, params[aParam]);\\n\\n                    if (!existingConnection) {\\n                        // if not an existing connection and\\n                        if (params.draggable)\\n                            _jsPlumb.initDraggable(this.element, dragOptions, \\\"internal\\\", _jsPlumb);\\n                    }\\n                    else {\\n                        var suspendedElementId = jpc.suspendedEndpoint.elementId;\\n                        _jsPlumb.fireMoveEvent({\\n                            index: idx,\\n                            originalSourceId: idx === 0 ? suspendedElementId : jpc.sourceId,\\n                            newSourceId: idx === 0 ? _ep.elementId : jpc.sourceId,\\n                            originalTargetId: idx == 1 ? suspendedElementId : jpc.targetId,\\n                            newTargetId: idx == 1 ? _ep.elementId : jpc.targetId,\\n                            originalSourceEndpoint: idx === 0 ? jpc.suspendedEndpoint : jpc.endpoints[0],\\n                            newSourceEndpoint: idx === 0 ? _ep : jpc.endpoints[0],\\n                            originalTargetEndpoint: idx == 1 ? jpc.suspendedEndpoint : jpc.endpoints[1],\\n                            newTargetEndpoint: idx == 1 ? _ep : jpc.endpoints[1],\\n                            connection: jpc\\n                        }, originalEvent);\\n                    }\\n\\n                    if (idx == 1) {\\n                        _jsPlumb.anchorManager.updateOtherEndpoint(jpc.sourceId, jpc.floatingId, jpc.targetId, jpc);\\n                    }\\n                    else {\\n                        _jsPlumb.anchorManager.sourceChanged(jpc.floatingId, jpc.sourceId, jpc);\\n                    }\\n\\n                    // when makeSource has uniqueEndpoint:true, we want to create connections with new endpoints\\n                    // that are subsequently deleted. So makeSource sets `finalEndpoint`, which is the Endpoint to\\n                    // which the connection should be attached. The `detachFromConnection` call below results in the\\n                    // temporary endpoint being cleaned up.\\n                    if (jpc.endpoints[0].finalEndpoint) {\\n                        var _toDelete = jpc.endpoints[0];\\n                        _toDelete.detachFromConnection(jpc);\\n                        jpc.endpoints[0] = jpc.endpoints[0].finalEndpoint;\\n                        jpc.endpoints[0].addConnection(jpc);\\n                    }\\n\\n                    // if optionalData was given, merge it onto the connection's data.\\n                    if (jsPlumbUtil.isObject(optionalData)) {\\n                        jpc.mergeData(optionalData);\\n                    }\\n                    // finalise will inform the anchor manager and also add to\\n                    // connectionsByScope if necessary.\\n                    _jsPlumb.finaliseConnection(jpc, null, originalEvent, false);\\n                    jpc.setHover(false);\\n\\n                }.bind(this);\\n\\n                var dontContinueFunction = function () {\\n                    // otherwise just put it back on the endpoint it was on before the drag.\\n                    if (jpc.suspendedEndpoint) {\\n                        jpc.endpoints[idx] = jpc.suspendedEndpoint;\\n                        jpc.setHover(false);\\n                        jpc._forceDetach = true;\\n                        if (idx === 0) {\\n                            jpc.source = jpc.suspendedEndpoint.element;\\n                            jpc.sourceId = jpc.suspendedEndpoint.elementId;\\n                        } else {\\n                            jpc.target = jpc.suspendedEndpoint.element;\\n                            jpc.targetId = jpc.suspendedEndpoint.elementId;\\n                        }\\n                        jpc.suspendedEndpoint.addConnection(jpc);\\n\\n                        // TODO checkSanity\\n                        if (idx == 1) {\\n                            _jsPlumb.anchorManager.updateOtherEndpoint(jpc.sourceId, jpc.floatingId, jpc.targetId, jpc);\\n                        }\\n                        else {\\n                            _jsPlumb.anchorManager.sourceChanged(jpc.floatingId, jpc.sourceId, jpc);\\n                        }\\n\\n                        _jsPlumb.repaint(jpc.sourceId);\\n                        jpc._forceDetach = false;\\n                    }\\n                };\\n\\n// --------------------------------------\\n                // now check beforeDrop.  this will be available only on Endpoints that are setup to\\n                // have a beforeDrop condition (although, secretly, under the hood all Endpoints and\\n                // the Connection have them, because they are on jsPlumbUIComponent.  shhh!), because\\n                // it only makes sense to have it on a target endpoint.\\n                _doContinue = _doContinue && dhParams.isDropAllowed(jpc.sourceId, jpc.targetId, jpc.scope, jpc, _ep);// && jpc.pending;\\n\\n                if (_doContinue) {\\n                    continueFunction(_doContinue);\\n                    return true;\\n                }\\n                else {\\n                    dontContinueFunction();\\n                }\\n            }\\n\\n            if (dhParams.maybeCleanup) dhParams.maybeCleanup(_ep);\\n\\n            _jsPlumb.currentlyDragging = false;\\n        };\\n    };\\n}).call(this);\\n\\n/*\\n * jsPlumb\\n * \\n * Title:jsPlumb 2.1.0\\n * \\n * Provides a way to visually connect elements on an HTML page, using SVG.\\n * \\n * This file contains the code for Connections.\\n *\\n * Copyright (c) 2010 - 2015 jsPlumb (hello@jsplumbtoolkit.com)\\n * \\n * https://jsplumbtoolkit.com\\n * http://github.com/sporritt/jsplumb\\n * \\n * Dual licensed under the MIT and GPL2 licenses.\\n */\\n;\\n(function () {\\n\\n    \\\"use strict\\\";\\n    var root = this,\\n        _jp = root.jsPlumb,\\n        _ju = root.jsPlumbUtil;\\n\\n    var makeConnector = function (_jsPlumb, renderMode, connectorName, connectorArgs, forComponent) {\\n            if (!_jsPlumb.Defaults.DoNotThrowErrors && jsPlumb.Connectors[renderMode][connectorName] == null)\\n                throw { msg: \\\"jsPlumb: unknown connector type '\\\" + connectorName + \\\"'\\\" };\\n\\n            return new _jp.Connectors[renderMode][connectorName](connectorArgs, forComponent);\\n        },\\n        _makeAnchor = function (anchorParams, elementId, _jsPlumb) {\\n            return (anchorParams) ? _jsPlumb.makeAnchor(anchorParams, elementId, _jsPlumb) : null;\\n        },\\n        _updateConnectedClass = function (conn, element, _jsPlumb, remove) {\\n            if (element != null) {\\n                element._jsPlumbConnections = element._jsPlumbConnections || {};\\n                if (remove)\\n                    delete element._jsPlumbConnections[conn.id];\\n                else\\n                    element._jsPlumbConnections[conn.id] = true;\\n\\n                if (_ju.isEmpty(element._jsPlumbConnections)) {\\n                    _jsPlumb.removeClass(element, _jsPlumb.connectedClass);\\n                }\\n                else\\n                    _jsPlumb.addClass(element, _jsPlumb.connectedClass);\\n            }\\n        };\\n\\n    _jp.Connection = function (params) {\\n        var _newEndpoint = params.newEndpoint;\\n\\n        this.id = params.id;\\n        this.connector = null;\\n        this.idPrefix = \\\"_jsplumb_c_\\\";\\n        this.defaultLabelLocation = 0.5;\\n        this.defaultOverlayKeys = [\\\"Overlays\\\", \\\"ConnectionOverlays\\\"];\\n        // if a new connection is the result of moving some existing connection, params.previousConnection\\n        // will have that Connection in it. listeners for the jsPlumbConnection event can look for that\\n        // member and take action if they need to.\\n        this.previousConnection = params.previousConnection;\\n        this.source = _jp.getElement(params.source);\\n        this.target = _jp.getElement(params.target);\\n        // sourceEndpoint and targetEndpoint override source/target, if they are present. but \\n        // source is not overridden if the Endpoint has declared it is not the final target of a connection;\\n        // instead we use the source that the Endpoint declares will be the final source element.\\n        if (params.sourceEndpoint) this.source = params.sourceEndpoint.getElement();\\n        if (params.targetEndpoint) this.target = params.targetEndpoint.getElement();\\n\\n        _jp.OverlayCapableJsPlumbUIComponent.apply(this, arguments);\\n\\n        this.sourceId = this._jsPlumb.instance.getId(this.source);\\n        this.targetId = this._jsPlumb.instance.getId(this.target);\\n        this.scope = params.scope; // scope may have been passed in to the connect call. if it wasn't, we will pull it from the source endpoint, after having initialised the endpoints.            \\n        this.endpoints = [];\\n        this.endpointStyles = [];\\n\\n        var _jsPlumb = this._jsPlumb.instance;\\n\\n        _jsPlumb.manage(this.sourceId, this.source);\\n        _jsPlumb.manage(this.targetId, this.target);\\n\\n        this._jsPlumb.visible = true;\\n        this._jsPlumb.editable = params.editable === true;\\n        this._jsPlumb.params = {\\n            cssClass: params.cssClass,\\n            container: params.container,\\n            \\\"pointer-events\\\": params[\\\"pointer-events\\\"],\\n            editorParams: params.editorParams,\\n            overlays: params.overlays\\n        };\\n        this._jsPlumb.lastPaintedAt = null;\\n\\n        // listen to mouseover and mouseout events passed from the container delegate.\\n        this.bind(\\\"mouseover\\\", function () {\\n            this.setHover(true);\\n        }.bind(this));\\n        this.bind(\\\"mouseout\\\", function () {\\n            this.setHover(false);\\n        }.bind(this));\\n\\n        this.editableRequested = params.editable !== false;\\n        this.setEditable = function(e) {\\n            return this.connector ? this.connector.setEditable(e) : false;\\n        };\\n        this.isEditable = function() { return this.connector ? this.connector.isEditable() : false; };\\n        this.isEditing = function() { return this.connector ? this.connector.isEditing() : false; };\\n\\n// INITIALISATION CODE\\n\\n        this.makeEndpoint = function (isSource, el, elId, ep) {\\n            elId = elId || this._jsPlumb.instance.getId(el);\\n            return this.prepareEndpoint(_jsPlumb, _newEndpoint, this, ep, isSource ? 0 : 1, params, el, elId);\\n        };\\n\\n        // if type given, get the endpoint definitions mapping to that type from the jsplumb instance, and use those.\\n        // we apply types at the end of this constructor but endpoints are only honoured in a type definition at\\n        // create time.\\n        if (params.type) {\\n            params.endpoints = this._jsPlumb.instance.deriveEndpointAndAnchorSpec(params.type).endpoints;\\n        }\\n\\n        var eS = this.makeEndpoint(true, this.source, this.sourceId, params.sourceEndpoint),\\n            eT = this.makeEndpoint(false, this.target, this.targetId, params.targetEndpoint);\\n\\n        if (eS) _ju.addToList(params.endpointsByElement, this.sourceId, eS);\\n        if (eT) _ju.addToList(params.endpointsByElement, this.targetId, eT);\\n        // if scope not set, set it to be the scope for the source endpoint.\\n        if (!this.scope) this.scope = this.endpoints[0].scope;\\n\\n        // if explicitly told to (or not to) delete endpoints on detach, override endpoint's preferences\\n        if (params.deleteEndpointsOnDetach != null) {\\n            this.endpoints[0]._deleteOnDetach = params.deleteEndpointsOnDetach;\\n            this.endpoints[1]._deleteOnDetach = params.deleteEndpointsOnDetach;\\n        }\\n        else {\\n            // otherwise, unless the endpoints say otherwise, mark them for deletion.\\n            if (!this.endpoints[0]._doNotDeleteOnDetach) this.endpoints[0]._deleteOnDetach = true;\\n            if (!this.endpoints[1]._doNotDeleteOnDetach) this.endpoints[1]._deleteOnDetach = true;\\n        }\\n\\n// -------------------------- DEFAULT TYPE ---------------------------------------------\\n\\n        // DETACHABLE\\n        var _detachable = _jsPlumb.Defaults.ConnectionsDetachable;\\n        if (params.detachable === false) _detachable = false;\\n        if (this.endpoints[0].connectionsDetachable === false) _detachable = false;\\n        if (this.endpoints[1].connectionsDetachable === false) _detachable = false;\\n        // REATTACH\\n        var _reattach = params.reattach || this.endpoints[0].reattachConnections || this.endpoints[1].reattachConnections || _jsPlumb.Defaults.ReattachConnections;\\n\\n        this.appendToDefaultType({\\n            detachable: _detachable,\\n            reattach: _reattach,\\n            paintStyle:this.endpoints[0].connectorStyle || this.endpoints[1].connectorStyle || params.paintStyle || _jsPlumb.Defaults.PaintStyle || jsPlumb.Defaults.PaintStyle,\\n            hoverPaintStyle:this.endpoints[0].connectorHoverStyle || this.endpoints[1].connectorHoverStyle || params.hoverPaintStyle || _jsPlumb.Defaults.HoverPaintStyle || jsPlumb.Defaults.HoverPaintStyle\\n        });\\n\\n\\n        var _suspendedAt = _jsPlumb.getSuspendedAt();\\n        if (!_jsPlumb.isSuspendDrawing()) {\\n            // paint the endpoints\\n            var myInfo = _jsPlumb.getCachedData(this.sourceId),\\n                myOffset = myInfo.o, myWH = myInfo.s,\\n                otherInfo = _jsPlumb.getCachedData(this.targetId),\\n                otherOffset = otherInfo.o,\\n                otherWH = otherInfo.s,\\n                initialTimestamp = _suspendedAt || _jsPlumb.timestamp(),\\n                anchorLoc = this.endpoints[0].anchor.compute({\\n                    xy: [ myOffset.left, myOffset.top ], wh: myWH, element: this.endpoints[0],\\n                    elementId: this.endpoints[0].elementId,\\n                    txy: [ otherOffset.left, otherOffset.top ], twh: otherWH, tElement: this.endpoints[1],\\n                    timestamp: initialTimestamp\\n                });\\n\\n            this.endpoints[0].paint({ anchorLoc: anchorLoc, timestamp: initialTimestamp });\\n\\n            anchorLoc = this.endpoints[1].anchor.compute({\\n                xy: [ otherOffset.left, otherOffset.top ], wh: otherWH, element: this.endpoints[1],\\n                elementId: this.endpoints[1].elementId,\\n                txy: [ myOffset.left, myOffset.top ], twh: myWH, tElement: this.endpoints[0],\\n                timestamp: initialTimestamp\\n            });\\n            this.endpoints[1].paint({ anchorLoc: anchorLoc, timestamp: initialTimestamp });\\n        }\\n\\n        this.getTypeDescriptor = function () {\\n            return \\\"connection\\\";\\n        };\\n        this.getAttachedElements = function () {\\n            return this.endpoints;\\n        };\\n\\n        this.isDetachable = function () {\\n            return this._jsPlumb.detachable === true;\\n        };\\n        this.setDetachable = function (detachable) {\\n            this._jsPlumb.detachable = detachable === true;\\n        };\\n        this.isReattach = function () {\\n            return this._jsPlumb.reattach === true || this.endpoints[0].reattachConnections === true || this.endpoints[1].reattachConnections === true;\\n        };\\n        this.setReattach = function (reattach) {\\n            this._jsPlumb.reattach = reattach === true;\\n        };\\n\\n// END INITIALISATION CODE\\n\\n\\n// COST + DIRECTIONALITY\\n        // if cost not supplied, try to inherit from source endpoint\\n        this._jsPlumb.cost = params.cost || this.endpoints[0].getConnectionCost();\\n        this._jsPlumb.directed = params.directed;\\n        // inherit directed flag if set no source endpoint\\n        if (params.directed == null) this._jsPlumb.directed = this.endpoints[0].areConnectionsDirected();\\n// END COST + DIRECTIONALITY\\n\\n// PARAMETERS\\n        // merge all the parameters objects into the connection.  parameters set\\n        // on the connection take precedence; then source endpoint params, then\\n        // finally target endpoint params.\\n        var _p = jsPlumb.extend({}, this.endpoints[1].getParameters());\\n        _jp.extend(_p, this.endpoints[0].getParameters());\\n        _jp.extend(_p, this.getParameters());\\n        this.setParameters(_p);\\n// END PARAMETERS\\n\\n// PAINTING\\n\\n        this.setConnector(this.endpoints[0].connector || this.endpoints[1].connector || params.connector || _jsPlumb.Defaults.Connector || _jp.Defaults.Connector, true);\\n        if (params.geometry) {\\n            this.connector.setGeometry(params.geometry);\\n        }\\n        var data = params.data == null || !jsPlumbUtil.isObject(params.data) ? {} : params.data;\\n        this.getData = function() { return data; };\\n        this.setData = function(d) { data = d || {}; };\\n        this.mergeData = function(d) { data = jsPlumb.extend(data, d); };\\n\\n        // the very last thing we do is apply types, if there are any.\\n        var _types = [ \\\"default\\\", this.endpoints[0].connectionType, this.endpoints[1].connectionType,  params.type ].join(\\\" \\\");\\n        if (/[^\\\\s]/.test(_types))\\n            this.addType(_types, params.data, true);\\n\\n        this.updateConnectedClass();\\n\\n// END PAINTING    \\n    };\\n\\n    _ju.extend(_jp.Connection, _jp.OverlayCapableJsPlumbUIComponent, {\\n        applyType: function (t, doNotRepaint, typeMap) {\\n\\n            // none of these things result in the creation of objects so can be ignored.\\n            if (t.detachable != null) this.setDetachable(t.detachable);\\n            if (t.reattach != null) this.setReattach(t.reattach);\\n            if (t.scope) this.scope = t.scope;\\n\\n            if (t.cssClass != null && this.canvas) this._jsPlumb.instance.addClass(this.canvas, t.cssClass);\\n\\n            var _anchors = null;\\n            // this also results in the creation of objects.\\n            if (t.anchor) {\\n                // note that even if the param was anchor, we store `anchors`.\\n                _anchors = this.getCachedTypeItem(\\\"anchors\\\", typeMap.anchor);\\n                if (_anchors == null) {\\n                    _anchors = [ this._jsPlumb.instance.makeAnchor(t.anchor), this._jsPlumb.instance.makeAnchor(t.anchor) ];\\n                    this.cacheTypeItem(\\\"anchors\\\", _anchors, typeMap.anchor);\\n                }\\n            }\\n            else if (t.anchors) {\\n                _anchors = this.getCachedTypeItem(\\\"anchors\\\", typeMap.anchors);\\n                if (_anchors == null) {\\n                    _anchors = [\\n                        this._jsPlumb.instance.makeAnchor(t.anchors[0]),\\n                        this._jsPlumb.instance.makeAnchor(t.anchors[1])\\n                    ];\\n                    this.cacheTypeItem(\\\"anchors\\\", _anchors, typeMap.anchors);\\n                }\\n            }\\n            if (_anchors != null) {\\n                this.endpoints[0].anchor = _anchors[0];\\n                this.endpoints[1].anchor = _anchors[1];\\n                if (this.endpoints[1].anchor.isDynamic) this._jsPlumb.instance.repaint(this.endpoints[1].elementId);\\n            }\\n\\n            _jp.OverlayCapableJsPlumbUIComponent.applyType(this, t);\\n        },\\n        addClass: function (c, informEndpoints) {\\n            if (informEndpoints) {\\n                this.endpoints[0].addClass(c);\\n                this.endpoints[1].addClass(c);\\n                if (this.suspendedEndpoint) this.suspendedEndpoint.addClass(c);\\n            }\\n            if (this.connector) {\\n                this.connector.addClass(c);\\n            }\\n        },\\n        removeClass: function (c, informEndpoints) {\\n            if (informEndpoints) {\\n                this.endpoints[0].removeClass(c);\\n                this.endpoints[1].removeClass(c);\\n                if (this.suspendedEndpoint) this.suspendedEndpoint.removeClass(c);\\n            }\\n            if (this.connector) {\\n                this.connector.removeClass(c);\\n            }\\n        },\\n        isVisible: function () {\\n            return this._jsPlumb.visible;\\n        },\\n        setVisible: function (v) {\\n            this._jsPlumb.visible = v;\\n            if (this.connector)\\n                this.connector.setVisible(v);\\n            this.repaint();\\n        },\\n        cleanup: function () {\\n            this.updateConnectedClass(true);\\n            this.endpoints = null;\\n            this.source = null;\\n            this.target = null;\\n            if (this.connector != null) {\\n                this.connector.cleanup(true);\\n                this.connector.destroy(true);\\n            }\\n            this.connector = null;\\n        },\\n        updateConnectedClass:function(remove) {\\n            if (this._jsPlumb) {\\n                _updateConnectedClass(this, this.source, this._jsPlumb.instance, remove);\\n                _updateConnectedClass(this, this.target, this._jsPlumb.instance, remove);\\n            }\\n        },\\n        setHover: function (state) {\\n            if (this.connector && this._jsPlumb && !this._jsPlumb.instance.isConnectionBeingDragged()) {\\n                this.connector.setHover(state);\\n                root.jsPlumb[state ? \\\"addClass\\\" : \\\"removeClass\\\"](this.source, this._jsPlumb.instance.hoverSourceClass);\\n                root.jsPlumb[state ? \\\"addClass\\\" : \\\"removeClass\\\"](this.target, this._jsPlumb.instance.hoverTargetClass);\\n            }\\n        },\\n        getUuids:function() {\\n            return [ this.endpoints[0].getUuid(), this.endpoints[1].getUuid() ];\\n        },\\n        getCost: function () {\\n            return this._jsPlumb ? this._jsPlumb.cost : -Infinity;\\n        },\\n        setCost: function (c) {\\n            this._jsPlumb.cost = c;\\n        },\\n        isDirected: function () {\\n            return this._jsPlumb.directed === true;\\n        },\\n        getConnector: function () {\\n            return this.connector;\\n        },\\n        getGeometry : function() { return this.connector ? this.connector.getGeometry() : null; },\\n        setGeometry : function(g) { if (this.connector) this.connector.setGeometry(g); },\\n        prepareConnector:function(connectorSpec, typeId) {\\n            var connectorArgs = {\\n                    _jsPlumb: this._jsPlumb.instance,\\n                    cssClass: (this._jsPlumb.params.cssClass || \\\"\\\") + (this.isEditable() ? this._jsPlumb.instance.editableConnectorClass : \\\"\\\"),\\n                    container: this._jsPlumb.params.container,\\n                    \\\"pointer-events\\\": this._jsPlumb.params[\\\"pointer-events\\\"],\\n                    editable:this.editableRequested\\n                },\\n                renderMode = this._jsPlumb.instance.getRenderMode(),\\n                connector;\\n\\n            if (_ju.isString(connectorSpec))\\n                connector = makeConnector(this._jsPlumb.instance, renderMode, connectorSpec, connectorArgs, this); // lets you use a string as shorthand.\\n            else if (_ju.isArray(connectorSpec)) {\\n                if (connectorSpec.length == 1)\\n                    connector = makeConnector(this._jsPlumb.instance, renderMode, connectorSpec[0], connectorArgs, this);\\n                else\\n                    connector = makeConnector(this._jsPlumb.instance, renderMode, connectorSpec[0], _ju.merge(connectorSpec[1], connectorArgs), this);\\n            }\\n            if (typeId != null) connector.typeId = typeId;\\n            return connector;\\n        },\\n        setPreparedConnector: function(connector, doNotRepaint, doNotChangeListenerComponent, typeId) {\\n\\n            var previous, previousClasses = \\\"\\\";\\n            // the connector will not be cleaned up if it was set as part of a type, because `typeId` will be set on it\\n            // and we havent passed in `true` for \\\"force\\\" here.\\n            if (this.connector != null) {\\n                previous = this.connector;\\n                previousClasses = previous.getClass();\\n                this.connector.cleanup();\\n                this.connector.destroy();\\n            }\\n\\n            this.connector = connector;\\n            if (typeId) {\\n                this.cacheTypeItem(\\\"connector\\\", connector, typeId);\\n            }\\n\\n            this.canvas = this.connector.canvas;\\n            this.bgCanvas = this.connector.bgCanvas;\\n\\n            // put classes from prior connector onto the canvas\\n            this.addClass(previousClasses);\\n\\n            // new: instead of binding listeners per connector, we now just have one delegate on the container.\\n            // so for that handler we set the connection as the '_jsPlumb' member of the canvas element, and\\n            // bgCanvas, if it exists, which it does right now in the VML renderer, so it won't from v 2.0.0 onwards.\\n            if (this.canvas) this.canvas._jsPlumb = this;\\n            if (this.bgCanvas) this.bgCanvas._jsPlumb = this;\\n\\n            if (previous != null) {\\n                var o = this.getOverlays();\\n                for (var i = 0; i < o.length; i++) {\\n                    if (o[i].transfer) o[i].transfer(this.connector);\\n                }\\n            }\\n\\n            if (!doNotChangeListenerComponent) this.setListenerComponent(this.connector);\\n            if (!doNotRepaint) this.repaint();\\n        },\\n        setConnector: function (connectorSpec, doNotRepaint, doNotChangeListenerComponent, typeId) {\\n            var connector = this.prepareConnector(connectorSpec, typeId);\\n            this.setPreparedConnector(connector, doNotRepaint, doNotChangeListenerComponent, typeId);\\n        },\\n        paint: function (params) {\\n\\n            if (!this._jsPlumb.instance.isSuspendDrawing() && this._jsPlumb.visible) {\\n                params = params || {};\\n                var timestamp = params.timestamp,\\n                // if the moving object is not the source we must transpose the two references.\\n                    swap = false,\\n                    tId = swap ? this.sourceId : this.targetId, sId = swap ? this.targetId : this.sourceId,\\n                    tIdx = swap ? 0 : 1, sIdx = swap ? 1 : 0;\\n\\n                if (timestamp == null || timestamp != this._jsPlumb.lastPaintedAt) {\\n                    var sourceInfo = this._jsPlumb.instance.updateOffset({elId:sId}).o,\\n                        targetInfo = this._jsPlumb.instance.updateOffset({elId:tId}).o,\\n                        sE = this.endpoints[sIdx], tE = this.endpoints[tIdx];\\n\\n                    var sAnchorP = sE.anchor.getCurrentLocation({xy: [sourceInfo.left, sourceInfo.top], wh: [sourceInfo.width, sourceInfo.height], element: sE, timestamp: timestamp}),\\n                        tAnchorP = tE.anchor.getCurrentLocation({xy: [targetInfo.left, targetInfo.top], wh: [targetInfo.width, targetInfo.height], element: tE, timestamp: timestamp});\\n\\n                    this.connector.resetBounds();\\n\\n                    this.connector.compute({\\n                        sourcePos: sAnchorP,\\n                        targetPos: tAnchorP,\\n                        sourceEndpoint: this.endpoints[sIdx],\\n                        targetEndpoint: this.endpoints[tIdx],\\n                        lineWidth: this._jsPlumb.paintStyleInUse.lineWidth,\\n                        sourceInfo: sourceInfo,\\n                        targetInfo: targetInfo\\n                    });\\n\\n                    var overlayExtents = { minX: Infinity, minY: Infinity, maxX: -Infinity, maxY: -Infinity };\\n\\n                    // compute overlays. we do this first so we can get their placements, and adjust the\\n                    // container if needs be (if an overlay would be clipped)\\n                    for (var i in this._jsPlumb.overlays) {\\n                        if (this._jsPlumb.overlays.hasOwnProperty(i)) {\\n                            var o = this._jsPlumb.overlays[i];\\n                            if (o.isVisible()) {\\n                                this._jsPlumb.overlayPlacements[i] = o.draw(this.connector, this._jsPlumb.paintStyleInUse, this.getAbsoluteOverlayPosition(o));\\n                                overlayExtents.minX = Math.min(overlayExtents.minX, this._jsPlumb.overlayPlacements[i].minX);\\n                                overlayExtents.maxX = Math.max(overlayExtents.maxX, this._jsPlumb.overlayPlacements[i].maxX);\\n                                overlayExtents.minY = Math.min(overlayExtents.minY, this._jsPlumb.overlayPlacements[i].minY);\\n                                overlayExtents.maxY = Math.max(overlayExtents.maxY, this._jsPlumb.overlayPlacements[i].maxY);\\n                            }\\n                        }\\n                    }\\n\\n                    var lineWidth = parseFloat(this._jsPlumb.paintStyleInUse.lineWidth || 1) / 2,\\n                        outlineWidth = parseFloat(this._jsPlumb.paintStyleInUse.lineWidth || 0),\\n                        extents = {\\n                            xmin: Math.min(this.connector.bounds.minX - (lineWidth + outlineWidth), overlayExtents.minX),\\n                            ymin: Math.min(this.connector.bounds.minY - (lineWidth + outlineWidth), overlayExtents.minY),\\n                            xmax: Math.max(this.connector.bounds.maxX + (lineWidth + outlineWidth), overlayExtents.maxX),\\n                            ymax: Math.max(this.connector.bounds.maxY + (lineWidth + outlineWidth), overlayExtents.maxY)\\n                        };\\n                    // paint the connector.\\n                    this.connector.paint(this._jsPlumb.paintStyleInUse, null, extents);\\n                    // and then the overlays\\n                    for (var j in this._jsPlumb.overlays) {\\n                        if (this._jsPlumb.overlays.hasOwnProperty(j)) {\\n                            var p = this._jsPlumb.overlays[j];\\n                            if (p.isVisible()) {\\n                                p.paint(this._jsPlumb.overlayPlacements[j], extents);\\n                            }\\n                        }\\n                    }\\n                }\\n                this._jsPlumb.lastPaintedAt = timestamp;\\n            }\\n        },\\n        repaint: function (params) {\\n            params = params || {};\\n            this.paint({ elId: this.sourceId, recalc: !(params.recalc === false), timestamp: params.timestamp});\\n        },\\n        prepareEndpoint: function (_jsPlumb, _newEndpoint, conn, existing, index, params, element, elementId) {\\n            var e;\\n            if (existing) {\\n                conn.endpoints[index] = existing;\\n                existing.addConnection(conn);\\n            } else {\\n                if (!params.endpoints) params.endpoints = [ null, null ];\\n                var ep = params.endpoints[index] || params.endpoint || _jsPlumb.Defaults.Endpoints[index] || jsPlumb.Defaults.Endpoints[index] || _jsPlumb.Defaults.Endpoint || jsPlumb.Defaults.Endpoint;\\n                if (!params.endpointStyles) params.endpointStyles = [ null, null ];\\n                if (!params.endpointHoverStyles) params.endpointHoverStyles = [ null, null ];\\n                var es = params.endpointStyles[index] || params.endpointStyle || _jsPlumb.Defaults.EndpointStyles[index] || jsPlumb.Defaults.EndpointStyles[index] || _jsPlumb.Defaults.EndpointStyle || jsPlumb.Defaults.EndpointStyle;\\n                // Endpoints derive their fillStyle from the connector's strokeStyle, if no fillStyle was specified.\\n                if (es.fillStyle == null && params.paintStyle != null)\\n                    es.fillStyle = params.paintStyle.strokeStyle;\\n\\n                if (es.outlineColor == null && params.paintStyle != null)\\n                    es.outlineColor = params.paintStyle.outlineColor;\\n                if (es.outlineWidth == null && params.paintStyle != null)\\n                    es.outlineWidth = params.paintStyle.outlineWidth;\\n\\n                var ehs = params.endpointHoverStyles[index] || params.endpointHoverStyle || _jsPlumb.Defaults.EndpointHoverStyles[index] || jsPlumb.Defaults.EndpointHoverStyles[index] || _jsPlumb.Defaults.EndpointHoverStyle || jsPlumb.Defaults.EndpointHoverStyle;\\n                // endpoint hover fill style is derived from connector's hover stroke style\\n                if (params.hoverPaintStyle != null) {\\n                    if (ehs == null) ehs = {};\\n                    if (ehs.fillStyle == null) {\\n                        ehs.fillStyle = params.hoverPaintStyle.strokeStyle;\\n                    }\\n                }\\n                var a = params.anchors ? params.anchors[index] :\\n                        params.anchor ? params.anchor :\\n                            _makeAnchor(_jsPlumb.Defaults.Anchors[index], elementId, _jsPlumb) ||\\n                            _makeAnchor(_jp.Defaults.Anchors[index], elementId, _jsPlumb) ||\\n                            _makeAnchor(_jsPlumb.Defaults.Anchor, elementId, _jsPlumb) ||\\n                            _makeAnchor(_jp.Defaults.Anchor, elementId, _jsPlumb),\\n                    u = params.uuids ? params.uuids[index] : null;\\n\\n                e = _newEndpoint({\\n                    paintStyle: es, hoverPaintStyle: ehs, endpoint: ep, connections: [ conn ],\\n                    uuid: u, anchor: a, source: element, scope: params.scope,\\n                    reattach: params.reattach || _jsPlumb.Defaults.ReattachConnections,\\n                    detachable: params.detachable || _jsPlumb.Defaults.ConnectionsDetachable\\n                });\\n                conn.endpoints[index] = e;\\n\\n                if (params.drawEndpoints === false) e.setVisible(false, true, true);\\n\\n            }\\n            return e;\\n        }\\n\\n    }); // END Connection class            \\n}).call(this);\\n\\n/*\\n * jsPlumb\\n * \\n * Title:jsPlumb 2.0.2\\n * \\n * Provides a way to visually connect elements on an HTML page, using SVG.\\n * \\n * This file contains the code for creating and manipulating anchors.\\n *\\n * Copyright (c) 2010 - 2015 jsPlumb (hello@jsplumbtoolkit.com)\\n * \\n * http://jsplumbtoolkit.com\\n * http://github.com/sporritt/jsplumb\\n * \\n * Dual licensed under the MIT and GPL2 licenses.\\n */\\n;\\n(function () {\\n\\n    \\\"use strict\\\";\\n\\n    var root = this,\\n        _ju = root.jsPlumbUtil,\\n        _jp = root.jsPlumb;\\n\\n    //\\n    // manages anchors for all elements.\\n    //\\n    _jp.AnchorManager = function (params) {\\n        var _amEndpoints = {},\\n            continuousAnchorLocations = {},\\n            userDefinedContinuousAnchorLocations = {},\\n            continuousAnchorOrientations = {},\\n            Orientation = { HORIZONTAL: \\\"horizontal\\\", VERTICAL: \\\"vertical\\\", DIAGONAL: \\\"diagonal\\\", IDENTITY: \\\"identity\\\" },\\n            axes = [\\\"left\\\", \\\"top\\\", \\\"right\\\", \\\"bottom\\\"],\\n            connectionsByElementId = {},\\n            self = this,\\n            anchorLists = {},\\n            jsPlumbInstance = params.jsPlumbInstance,\\n            floatingConnections = {},\\n            calculateOrientation = function (sourceId, targetId, sd, td, sourceAnchor, targetAnchor) {\\n\\n                if (sourceId === targetId) return {\\n                    orientation: Orientation.IDENTITY,\\n                    a: [\\\"top\\\", \\\"top\\\"]\\n                };\\n\\n                var theta = Math.atan2((td.centery - sd.centery), (td.centerx - sd.centerx)),\\n                    theta2 = Math.atan2((sd.centery - td.centery), (sd.centerx - td.centerx));\\n\\n// --------------------------------------------------------------------------------------\\n\\n                // improved face calculation. get midpoints of each face for source and target, then put in an array with all combinations of\\n                // source/target faces. sort this array by distance between midpoints. the entry at index 0 is our preferred option. we can\\n                // go through the array one by one until we find an entry in which each requested face is supported.\\n                var candidates = [], midpoints = { };\\n                (function (types, dim) {\\n                    for (var i = 0; i < types.length; i++) {\\n                        midpoints[types[i]] = {\\n                            \\\"left\\\": [ dim[i].left, dim[i].centery ],\\n                            \\\"right\\\": [ dim[i].right, dim[i].centery ],\\n                            \\\"top\\\": [ dim[i].centerx, dim[i].top ],\\n                            \\\"bottom\\\": [ dim[i].centerx , dim[i].bottom]\\n                        };\\n                    }\\n                })([ \\\"source\\\", \\\"target\\\" ], [ sd, td ]);\\n\\n                for (var sf = 0; sf < axes.length; sf++) {\\n                    for (var tf = 0; tf < axes.length; tf++) {\\n                        candidates.push({\\n                            source: axes[sf],\\n                            target: axes[tf],\\n                            dist: Biltong.lineLength(midpoints.source[axes[sf]], midpoints.target[axes[tf]])\\n                        });\\n                    }\\n                }\\n\\n                candidates.sort(function (a, b) {\\n                    return a.dist < b.dist ? -1 : a.dist > b.dist ? 1 : 0;\\n                });\\n\\n                // now go through this list and try to get an entry that satisfies both (there will be one, unless one of the anchors\\n                // declares no available faces)\\n                var sourceEdge = candidates[0].source, targetEdge = candidates[0].target;\\n                for (var i = 0; i < candidates.length; i++) {\\n\\n                    if (!sourceAnchor.isContinuous || sourceAnchor.isEdgeSupported(candidates[i].source))\\n                        sourceEdge = candidates[i].source;\\n                    else\\n                        sourceEdge = null;\\n\\n                    if (!targetAnchor.isContinuous || targetAnchor.isEdgeSupported(candidates[i].target))\\n                        targetEdge = candidates[i].target;\\n                    else {\\n                        targetEdge = null;\\n                    }\\n\\n                    if (sourceEdge != null && targetEdge != null) break;\\n                }\\n\\n// --------------------------------------------------------------------------------------\\n\\n                return {\\n                    a: [ sourceEdge, targetEdge ],\\n                    theta: theta,\\n                    theta2: theta2\\n                };\\n            },\\n        // used by placeAnchors function\\n            placeAnchorsOnLine = function (desc, elementDimensions, elementPosition, connections, horizontal, otherMultiplier, reverse) {\\n                var a = [], step = elementDimensions[horizontal ? 0 : 1] / (connections.length + 1);\\n\\n                for (var i = 0; i < connections.length; i++) {\\n                    var val = (i + 1) * step, other = otherMultiplier * elementDimensions[horizontal ? 1 : 0];\\n                    if (reverse)\\n                        val = elementDimensions[horizontal ? 0 : 1] - val;\\n\\n                    var dx = (horizontal ? val : other), x = elementPosition[0] + dx, xp = dx / elementDimensions[0],\\n                        dy = (horizontal ? other : val), y = elementPosition[1] + dy, yp = dy / elementDimensions[1];\\n\\n                    a.push([ x, y, xp, yp, connections[i][1], connections[i][2] ]);\\n                }\\n\\n                return a;\\n            },\\n        // used by edgeSortFunctions\\n            currySort = function (reverseAngles) {\\n                return function (a, b) {\\n                    var r = true;\\n                    if (reverseAngles) {\\n                        r = a[0][0] < b[0][0];\\n                    }\\n                    else {\\n                        r = a[0][0] > b[0][0];\\n                    }\\n                    return r === false ? -1 : 1;\\n                };\\n            },\\n        // used by edgeSortFunctions\\n            leftSort = function (a, b) {\\n                // first get adjusted values\\n                var p1 = a[0][0] < 0 ? -Math.PI - a[0][0] : Math.PI - a[0][0],\\n                    p2 = b[0][0] < 0 ? -Math.PI - b[0][0] : Math.PI - b[0][0];\\n                if (p1 > p2) return 1;\\n                else return a[0][1] > b[0][1] ? 1 : -1;\\n            },\\n        // used by placeAnchors\\n            edgeSortFunctions = {\\n                \\\"top\\\": function (a, b) {\\n                    return a[0] > b[0] ? 1 : -1;\\n                },\\n                \\\"right\\\": currySort(true),\\n                \\\"bottom\\\": currySort(true),\\n                \\\"left\\\": leftSort\\n            },\\n        // used by placeAnchors\\n            _sortHelper = function (_array, _fn) {\\n                return _array.sort(_fn);\\n            },\\n        // used by AnchorManager.redraw\\n            placeAnchors = function (elementId, _anchorLists) {\\n                var cd = jsPlumbInstance.getCachedData(elementId), sS = cd.s, sO = cd.o,\\n                    placeSomeAnchors = function (desc, elementDimensions, elementPosition, unsortedConnections, isHorizontal, otherMultiplier, orientation) {\\n                        if (unsortedConnections.length > 0) {\\n                            var sc = _sortHelper(unsortedConnections, edgeSortFunctions[desc]), // puts them in order based on the target element's pos on screen\\n                                reverse = desc === \\\"right\\\" || desc === \\\"top\\\",\\n                                anchors = placeAnchorsOnLine(desc, elementDimensions,\\n                                    elementPosition, sc,\\n                                    isHorizontal, otherMultiplier, reverse);\\n\\n                            // takes a computed anchor position and adjusts it for parent offset and scroll, then stores it.\\n                            var _setAnchorLocation = function (endpoint, anchorPos) {\\n                                continuousAnchorLocations[endpoint.id] = [ anchorPos[0], anchorPos[1], anchorPos[2], anchorPos[3] ];\\n                                continuousAnchorOrientations[endpoint.id] = orientation;\\n                            };\\n\\n                            for (var i = 0; i < anchors.length; i++) {\\n                                var c = anchors[i][4], weAreSource = c.endpoints[0].elementId === elementId, weAreTarget = c.endpoints[1].elementId === elementId;\\n                                if (weAreSource)\\n                                    _setAnchorLocation(c.endpoints[0], anchors[i]);\\n                                if (weAreTarget)\\n                                    _setAnchorLocation(c.endpoints[1], anchors[i]);\\n                            }\\n                        }\\n                    };\\n\\n                placeSomeAnchors(\\\"bottom\\\", sS, [sO.left, sO.top], _anchorLists.bottom, true, 1, [0, 1]);\\n                placeSomeAnchors(\\\"top\\\", sS, [sO.left, sO.top], _anchorLists.top, true, 0, [0, -1]);\\n                placeSomeAnchors(\\\"left\\\", sS, [sO.left, sO.top], _anchorLists.left, false, 0, [-1, 0]);\\n                placeSomeAnchors(\\\"right\\\", sS, [sO.left, sO.top], _anchorLists.right, false, 1, [1, 0]);\\n            };\\n\\n        this.reset = function () {\\n            _amEndpoints = {};\\n            connectionsByElementId = {};\\n            anchorLists = {};\\n        };\\n        this.addFloatingConnection = function (key, conn) {\\n            floatingConnections[key] = conn;\\n        };\\n        this.removeFloatingConnection = function (key) {\\n            delete floatingConnections[key];\\n        };\\n        this.newConnection = function (conn) {\\n            var sourceId = conn.sourceId, targetId = conn.targetId,\\n                ep = conn.endpoints,\\n                doRegisterTarget = true,\\n                registerConnection = function (otherIndex, otherEndpoint, otherAnchor, elId, c) {\\n                    if ((sourceId == targetId) && otherAnchor.isContinuous) {\\n                        // remove the target endpoint's canvas.  we dont need it.\\n                        conn._jsPlumb.instance.removeElement(ep[1].canvas);\\n                        doRegisterTarget = false;\\n                    }\\n                    _ju.addToList(connectionsByElementId, elId, [c, otherEndpoint, otherAnchor.constructor == _jp.DynamicAnchor]);\\n                };\\n\\n            registerConnection(0, ep[0], ep[0].anchor, targetId, conn);\\n            if (doRegisterTarget)\\n                registerConnection(1, ep[1], ep[1].anchor, sourceId, conn);\\n        };\\n        var removeEndpointFromAnchorLists = function (endpoint) {\\n            (function (list, eId) {\\n                if (list) {  // transient anchors dont get entries in this list.\\n                    var f = function (e) {\\n                        return e[4] == eId;\\n                    };\\n                    _ju.removeWithFunction(list.top, f);\\n                    _ju.removeWithFunction(list.left, f);\\n                    _ju.removeWithFunction(list.bottom, f);\\n                    _ju.removeWithFunction(list.right, f);\\n                }\\n            })(anchorLists[endpoint.elementId], endpoint.id);\\n        };\\n        this.connectionDetached = function (connInfo, doNotRedraw) {\\n            var connection = connInfo.connection || connInfo,\\n                sourceId = connInfo.sourceId,\\n                targetId = connInfo.targetId,\\n                ep = connection.endpoints,\\n                removeConnection = function (otherIndex, otherEndpoint, otherAnchor, elId, c) {\\n                   _ju.removeWithFunction(connectionsByElementId[elId], function (_c) {\\n                        return _c[0].id == c.id;\\n                    });\\n                };\\n\\n            removeConnection(1, ep[1], ep[1].anchor, sourceId, connection);\\n            removeConnection(0, ep[0], ep[0].anchor, targetId, connection);\\n            if (connection.floatingId) {\\n                removeConnection(connection.floatingIndex, connection.floatingEndpoint, connection.floatingEndpoint.anchor, connection.floatingId, connection);\\n                removeEndpointFromAnchorLists(connection.floatingEndpoint);\\n            }\\n\\n            // remove from anchorLists            \\n            removeEndpointFromAnchorLists(connection.endpoints[0]);\\n            removeEndpointFromAnchorLists(connection.endpoints[1]);\\n\\n            if (!doNotRedraw) {\\n                self.redraw(connection.sourceId);\\n                if (connection.targetId !== connection.sourceId)\\n                    self.redraw(connection.targetId);\\n            }\\n        };\\n        this.add = function (endpoint, elementId) {\\n            _ju.addToList(_amEndpoints, elementId, endpoint);\\n        };\\n        this.changeId = function (oldId, newId) {\\n            connectionsByElementId[newId] = connectionsByElementId[oldId];\\n            _amEndpoints[newId] = _amEndpoints[oldId];\\n            delete connectionsByElementId[oldId];\\n            delete _amEndpoints[oldId];\\n        };\\n        this.getConnectionsFor = function (elementId) {\\n            return connectionsByElementId[elementId] || [];\\n        };\\n        this.getEndpointsFor = function (elementId) {\\n            return _amEndpoints[elementId] || [];\\n        };\\n        this.deleteEndpoint = function (endpoint) {\\n            _ju.removeWithFunction(_amEndpoints[endpoint.elementId], function (e) {\\n                return e.id == endpoint.id;\\n            });\\n            removeEndpointFromAnchorLists(endpoint);\\n        };\\n        this.clearFor = function (elementId) {\\n            delete _amEndpoints[elementId];\\n            _amEndpoints[elementId] = [];\\n        };\\n        // updates the given anchor list by either updating an existing anchor's info, or adding it. this function\\n        // also removes the anchor from its previous list, if the edge it is on has changed.\\n        // all connections found along the way (those that are connected to one of the faces this function\\n        // operates on) are added to the connsToPaint list, as are their endpoints. in this way we know to repaint\\n        // them wthout having to calculate anything else about them.\\n        var _updateAnchorList = function (lists, theta, order, conn, aBoolean, otherElId, idx, reverse, edgeId, elId, connsToPaint, endpointsToPaint) {\\n            // first try to find the exact match, but keep track of the first index of a matching element id along the way.s\\n            var exactIdx = -1,\\n                firstMatchingElIdx = -1,\\n                endpoint = conn.endpoints[idx],\\n                endpointId = endpoint.id,\\n                oIdx = [1, 0][idx],\\n                values = [\\n                    [ theta, order ],\\n                    conn,\\n                    aBoolean,\\n                    otherElId,\\n                    endpointId\\n                ],\\n                listToAddTo = lists[edgeId],\\n                listToRemoveFrom = endpoint._continuousAnchorEdge ? lists[endpoint._continuousAnchorEdge] : null,\\n                i,\\n                candidate;\\n\\n            if (listToRemoveFrom) {\\n                var rIdx = _ju.findWithFunction(listToRemoveFrom, function (e) {\\n                    return e[4] == endpointId;\\n                });\\n                if (rIdx != -1) {\\n                    listToRemoveFrom.splice(rIdx, 1);\\n                    // get all connections from this list\\n                    for (i = 0; i < listToRemoveFrom.length; i++) {\\n                        candidate = listToRemoveFrom[i][1];\\n                        _ju.addWithFunction(connsToPaint, candidate, function (c) {\\n                            return c.id == candidate.id;\\n                        });\\n                        _ju.addWithFunction(endpointsToPaint, listToRemoveFrom[i][1].endpoints[idx], function (e) {\\n                            return e.id == candidate.endpoints[idx].id;\\n                        });\\n                        _ju.addWithFunction(endpointsToPaint, listToRemoveFrom[i][1].endpoints[oIdx], function (e) {\\n                            return e.id == candidate.endpoints[oIdx].id;\\n                        });\\n                    }\\n                }\\n            }\\n\\n            for (i = 0; i < listToAddTo.length; i++) {\\n                candidate = listToAddTo[i][1];\\n                if (params.idx == 1 && listToAddTo[i][3] === otherElId && firstMatchingElIdx == -1)\\n                    firstMatchingElIdx = i;\\n                _ju.addWithFunction(connsToPaint, candidate, function (c) {\\n                    return c.id == candidate.id;\\n                });\\n                _ju.addWithFunction(endpointsToPaint, listToAddTo[i][1].endpoints[idx], function (e) {\\n                    return e.id == candidate.endpoints[idx].id;\\n                });\\n                _ju.addWithFunction(endpointsToPaint, listToAddTo[i][1].endpoints[oIdx], function (e) {\\n                    return e.id == candidate.endpoints[oIdx].id;\\n                });\\n            }\\n            if (exactIdx != -1) {\\n                listToAddTo[exactIdx] = values;\\n            }\\n            else {\\n                var insertIdx = reverse ? firstMatchingElIdx != -1 ? firstMatchingElIdx : 0 : listToAddTo.length; // of course we will get this from having looked through the array shortly.\\n                listToAddTo.splice(insertIdx, 0, values);\\n            }\\n\\n            // store this for next time.\\n            endpoint._continuousAnchorEdge = edgeId;\\n        };\\n\\n        //\\n        // find the entry in an endpoint's list for this connection and update its target endpoint\\n        // with the current target in the connection.\\n        // \\n        //\\n        this.updateOtherEndpoint = function (elId, oldTargetId, newTargetId, connection) {\\n            var sIndex = _ju.findWithFunction(connectionsByElementId[elId], function (i) {\\n                    return i[0].id === connection.id;\\n                }),\\n                tIndex = _ju.findWithFunction(connectionsByElementId[oldTargetId], function (i) {\\n                    return i[0].id === connection.id;\\n                });\\n\\n            // update or add data for source\\n            if (sIndex != -1) {\\n                connectionsByElementId[elId][sIndex][0] = connection;\\n                connectionsByElementId[elId][sIndex][1] = connection.endpoints[1];\\n                connectionsByElementId[elId][sIndex][2] = connection.endpoints[1].anchor.constructor == _jp.DynamicAnchor;\\n            }\\n\\n            // remove entry for previous target (if there)\\n            if (tIndex > -1) {\\n                connectionsByElementId[oldTargetId].splice(tIndex, 1);\\n                // add entry for new target\\n                _ju.addToList(connectionsByElementId, newTargetId, [connection, connection.endpoints[0], connection.endpoints[0].anchor.constructor == _jp.DynamicAnchor]);\\n            }\\n\\n            connection.updateConnectedClass();\\n        };\\n\\n        //\\n        // notification that the connection given has changed source from the originalId to the newId.\\n        // This involves:\\n        // 1. removing the connection from the list of connections stored for the originalId\\n        // 2. updating the source information for the target of the connection\\n        // 3. re-registering the connection in connectionsByElementId with the newId\\n        //\\n        this.sourceChanged = function (originalId, newId, connection) {\\n            if (originalId !== newId) {\\n                // remove the entry that points from the old source to the target\\n                _ju.removeWithFunction(connectionsByElementId[originalId], function (info) {\\n                    return info[0].id === connection.id;\\n                });\\n                // find entry for target and update it\\n                var tIdx = _ju.findWithFunction(connectionsByElementId[connection.targetId], function (i) {\\n                    return i[0].id === connection.id;\\n                });\\n                if (tIdx > -1) {\\n                    connectionsByElementId[connection.targetId][tIdx][0] = connection;\\n                    connectionsByElementId[connection.targetId][tIdx][1] = connection.endpoints[0];\\n                    connectionsByElementId[connection.targetId][tIdx][2] = connection.endpoints[0].anchor.constructor == _jp.DynamicAnchor;\\n                }\\n                // add entry for new source\\n                _ju.addToList(connectionsByElementId, newId, [connection, connection.endpoints[1], connection.endpoints[1].anchor.constructor == _jp.DynamicAnchor]);\\n\\n                // TODO SP not final on this yet. when a user drags an existing connection and it turns into a self\\n                // loop, then this code hides the target endpoint (by removing it from the DOM) But I think this should\\n                // occur only if the anchor is Continuous\\n                if (connection.endpoints[1].anchor.isContinuous) {\\n                    if (connection.source === connection.target) {\\n                        connection._jsPlumb.instance.removeElement(connection.endpoints[1].canvas);\\n                    }\\n                    else {\\n                        if (connection.endpoints[1].canvas.parentNode == null) {\\n                            connection._jsPlumb.instance.appendElement(connection.endpoints[1].canvas);\\n                        }\\n                    }\\n                }\\n\\n                connection.updateConnectedClass();\\n            }\\n        };\\n\\n        //\\n        // moves the given endpoint from `currentId` to `element`.\\n        // This involves:\\n        //\\n        // 1. changing the key in _amEndpoints under which the endpoint is stored\\n        // 2. changing the source or target values in all of the endpoint's connections\\n        // 3. changing the array in connectionsByElementId in which the endpoint's connections\\n        //    are stored (done by either sourceChanged or updateOtherEndpoint)\\n        //\\n        this.rehomeEndpoint = function (ep, currentId, element) {\\n            var eps = _amEndpoints[currentId] || [],\\n                elementId = jsPlumbInstance.getId(element);\\n\\n            if (elementId !== currentId) {\\n                var idx = eps.indexOf(ep);\\n                if (idx > -1) {\\n                    var _ep = eps.splice(idx, 1)[0];\\n                    self.add(_ep, elementId);\\n                }\\n            }\\n\\n            for (var i = 0; i < ep.connections.length; i++) {\\n                if (ep.connections[i].sourceId == currentId) {\\n                    ep.connections[i].sourceId = ep.elementId;\\n                    ep.connections[i].source = ep.element;\\n                    self.sourceChanged(currentId, ep.elementId, ep.connections[i]);\\n                }\\n                else if (ep.connections[i].targetId == currentId) {\\n                    ep.connections[i].targetId = ep.elementId;\\n                    ep.connections[i].target = ep.element;\\n                    self.updateOtherEndpoint(ep.connections[i].sourceId, currentId, ep.elementId, ep.connections[i]);\\n                }\\n            }\\n        };\\n\\n        this.redraw = function (elementId, ui, timestamp, offsetToUI, clearEdits, doNotRecalcEndpoint) {\\n\\n            if (!jsPlumbInstance.isSuspendDrawing()) {\\n                // get all the endpoints for this element\\n                var ep = _amEndpoints[elementId] || [],\\n                    endpointConnections = connectionsByElementId[elementId] || [],\\n                    connectionsToPaint = [],\\n                    endpointsToPaint = [],\\n                    anchorsToUpdate = [];\\n\\n                timestamp = timestamp || jsPlumbInstance.timestamp();\\n                // offsetToUI are values that would have been calculated in the dragManager when registering\\n                // an endpoint for an element that had a parent (somewhere in the hierarchy) that had been\\n                // registered as draggable.\\n                offsetToUI = offsetToUI || {left: 0, top: 0};\\n                if (ui) {\\n                    ui = {\\n                        left: ui.left + offsetToUI.left,\\n                        top: ui.top + offsetToUI.top\\n                    };\\n                }\\n\\n                // valid for one paint cycle.\\n                var myOffset = jsPlumbInstance.updateOffset({ elId: elementId, offset: ui, recalc: false, timestamp: timestamp }),\\n                    orientationCache = {};\\n\\n                // actually, first we should compute the orientation of this element to all other elements to which\\n                // this element is connected with a continuous anchor (whether both ends of the connection have\\n                // a continuous anchor or just one)\\n\\n                for (var i = 0; i < endpointConnections.length; i++) {\\n                    var conn = endpointConnections[i][0],\\n                        sourceId = conn.sourceId,\\n                        targetId = conn.targetId,\\n                        sourceContinuous = conn.endpoints[0].anchor.isContinuous,\\n                        targetContinuous = conn.endpoints[1].anchor.isContinuous;\\n\\n                    if (sourceContinuous || targetContinuous) {\\n                        var oKey = sourceId + \\\"_\\\" + targetId,\\n                            o = orientationCache[oKey],\\n                            oIdx = conn.sourceId == elementId ? 1 : 0;\\n\\n                        if (sourceContinuous && !anchorLists[sourceId]) anchorLists[sourceId] = { top: [], right: [], bottom: [], left: [] };\\n                        if (targetContinuous && !anchorLists[targetId]) anchorLists[targetId] = { top: [], right: [], bottom: [], left: [] };\\n\\n                        if (elementId != targetId) jsPlumbInstance.updateOffset({ elId: targetId, timestamp: timestamp });\\n                        if (elementId != sourceId) jsPlumbInstance.updateOffset({ elId: sourceId, timestamp: timestamp });\\n\\n                        var td = jsPlumbInstance.getCachedData(targetId),\\n                            sd = jsPlumbInstance.getCachedData(sourceId);\\n\\n                        if (targetId == sourceId && (sourceContinuous || targetContinuous)) {\\n                            // here we may want to improve this by somehow determining the face we'd like\\n                            // to put the connector on.  ideally, when drawing, the face should be calculated\\n                            // by determining which face is closest to the point at which the mouse button\\n                            // was released.  for now, we're putting it on the top face.\\n                            _updateAnchorList( anchorLists[sourceId], -Math.PI / 2, 0, conn, false, targetId, 0, false, \\\"top\\\", sourceId, connectionsToPaint, endpointsToPaint);\\n                            _updateAnchorList( anchorLists[targetId], -Math.PI / 2, 0, conn, false, sourceId, 1, false, \\\"top\\\", targetId, connectionsToPaint, endpointsToPaint);\\n                        }\\n                        else {\\n                            if (!o) {\\n                                o = calculateOrientation(sourceId, targetId, sd.o, td.o, conn.endpoints[0].anchor, conn.endpoints[1].anchor);\\n                                orientationCache[oKey] = o;\\n                                // this would be a performance enhancement, but the computed angles need to be clamped to\\n                                //the (-PI/2 -> PI/2) range in order for the sorting to work properly.\\n                                /*  orientationCache[oKey2] = {\\n                                 orientation:o.orientation,\\n                                 a:[o.a[1], o.a[0]],\\n                                 theta:o.theta + Math.PI,\\n                                 theta2:o.theta2 + Math.PI\\n                                 };*/\\n                            }\\n                            if (sourceContinuous) _updateAnchorList(anchorLists[sourceId], o.theta, 0, conn, false, targetId, 0, false, o.a[0], sourceId, connectionsToPaint, endpointsToPaint);\\n                            if (targetContinuous) _updateAnchorList(anchorLists[targetId], o.theta2, -1, conn, true, sourceId, 1, true, o.a[1], targetId, connectionsToPaint, endpointsToPaint);\\n                        }\\n\\n                        if (sourceContinuous) _ju.addWithFunction(anchorsToUpdate, sourceId, function (a) {\\n                            return a === sourceId;\\n                        });\\n                        if (targetContinuous) _ju.addWithFunction(anchorsToUpdate, targetId, function (a) {\\n                            return a === targetId;\\n                        });\\n                        _ju.addWithFunction(connectionsToPaint, conn, function (c) {\\n                            return c.id == conn.id;\\n                        });\\n                        if ((sourceContinuous && oIdx === 0) || (targetContinuous && oIdx === 1))\\n                            _ju.addWithFunction(endpointsToPaint, conn.endpoints[oIdx], function (e) {\\n                                return e.id == conn.endpoints[oIdx].id;\\n                            });\\n                    }\\n                }\\n\\n                // place Endpoints whose anchors are continuous but have no Connections\\n                for (i = 0; i < ep.length; i++) {\\n                    if (ep[i].connections.length === 0 && ep[i].anchor.isContinuous) {\\n                        if (!anchorLists[elementId]) anchorLists[elementId] = { top: [], right: [], bottom: [], left: [] };\\n                        _updateAnchorList(anchorLists[elementId], -Math.PI / 2, 0, {endpoints: [ep[i], ep[i]], paint: function () {\\n                        }}, false, elementId, 0, false, ep[i].anchor.getDefaultFace(), elementId, connectionsToPaint, endpointsToPaint);\\n                        _ju.addWithFunction(anchorsToUpdate, elementId, function (a) {\\n                            return a === elementId;\\n                        });\\n                    }\\n                }\\n\\n\\n                // now place all the continuous anchors we need to;\\n                for (i = 0; i < anchorsToUpdate.length; i++) {\\n                    placeAnchors(anchorsToUpdate[i], anchorLists[anchorsToUpdate[i]]);\\n                }\\n\\n                // now that continuous anchors have been placed, paint all the endpoints for this element\\n                // TODO performance: add the endpoint ids to a temp array, and then when iterating in the next\\n                // loop, check that we didn't just paint that endpoint. we can probably shave off a few more milliseconds this way.\\n                for (i = 0; i < ep.length; i++) {\\n                    ep[i].paint({ timestamp: timestamp, offset: myOffset, dimensions: myOffset.s, recalc: doNotRecalcEndpoint !== true });\\n                }\\n\\n                // ... and any other endpoints we came across as a result of the continuous anchors.\\n                for (i = 0; i < endpointsToPaint.length; i++) {\\n                    var cd = jsPlumbInstance.getCachedData(endpointsToPaint[i].elementId);\\n                    endpointsToPaint[i].paint({ timestamp: timestamp, offset: cd, dimensions: cd.s });\\n                }\\n\\n                // paint all the standard and \\\"dynamic connections\\\", which are connections whose other anchor is\\n                // static and therefore does need to be recomputed; we make sure that happens only one time.\\n\\n                // TODO we could have compiled a list of these in the first pass through connections; might save some time.\\n                for (i = 0; i < endpointConnections.length; i++) {\\n                    var otherEndpoint = endpointConnections[i][1];\\n                    if (otherEndpoint.anchor.constructor == _jp.DynamicAnchor) {\\n                        otherEndpoint.paint({ elementWithPrecedence: elementId, timestamp: timestamp });\\n                        _ju.addWithFunction(connectionsToPaint, endpointConnections[i][0], function (c) {\\n                            return c.id == endpointConnections[i][0].id;\\n                        });\\n                        // all the connections for the other endpoint now need to be repainted\\n                        for (var k = 0; k < otherEndpoint.connections.length; k++) {\\n                            if (otherEndpoint.connections[k] !== endpointConnections[i][0])\\n                                _ju.addWithFunction(connectionsToPaint, otherEndpoint.connections[k], function (c) {\\n                                    return c.id == otherEndpoint.connections[k].id;\\n                                });\\n                        }\\n                    } else if (otherEndpoint.anchor.constructor == _jp.Anchor) {\\n                        _ju.addWithFunction(connectionsToPaint, endpointConnections[i][0], function (c) {\\n                            return c.id == endpointConnections[i][0].id;\\n                        });\\n                    }\\n                }\\n\\n                // paint current floating connection for this element, if there is one.\\n                var fc = floatingConnections[elementId];\\n                if (fc)\\n                    fc.paint({timestamp: timestamp, recalc: false, elId: elementId});\\n\\n                // paint all the connections\\n                for (i = 0; i < connectionsToPaint.length; i++) {\\n                    connectionsToPaint[i].paint({elId: elementId, timestamp: timestamp, recalc: false, clearEdits: clearEdits});\\n                }\\n            }\\n        };\\n\\n        var ContinuousAnchor = function (anchorParams) {\\n            _ju.EventGenerator.apply(this);\\n            this.type = \\\"Continuous\\\";\\n            this.isDynamic = true;\\n            this.isContinuous = true;\\n            var faces = anchorParams.faces || [\\\"top\\\", \\\"right\\\", \\\"bottom\\\", \\\"left\\\"],\\n                clockwise = !(anchorParams.clockwise === false),\\n                availableFaces = { },\\n                opposites = { \\\"top\\\": \\\"bottom\\\", \\\"right\\\": \\\"left\\\", \\\"left\\\": \\\"right\\\", \\\"bottom\\\": \\\"top\\\" },\\n                clockwiseOptions = { \\\"top\\\": \\\"right\\\", \\\"right\\\": \\\"bottom\\\", \\\"left\\\": \\\"top\\\", \\\"bottom\\\": \\\"left\\\" },\\n                antiClockwiseOptions = { \\\"top\\\": \\\"left\\\", \\\"right\\\": \\\"top\\\", \\\"left\\\": \\\"bottom\\\", \\\"bottom\\\": \\\"right\\\" },\\n                secondBest = clockwise ? clockwiseOptions : antiClockwiseOptions,\\n                lastChoice = clockwise ? antiClockwiseOptions : clockwiseOptions,\\n                cssClass = anchorParams.cssClass || \\\"\\\";\\n\\n            for (var i = 0; i < faces.length; i++) {\\n                availableFaces[faces[i]] = true;\\n            }\\n\\n            this.getDefaultFace = function () {\\n                return faces.length === 0 ? \\\"top\\\" : faces[0];\\n            };\\n\\n            // if the given edge is supported, returns it. otherwise looks for a substitute that _is_\\n            // supported. if none supported we also return the request edge.\\n            this.verifyEdge = function (edge) {\\n                if (availableFaces[edge]) return edge;\\n                else if (availableFaces[opposites[edge]]) return opposites[edge];\\n                else if (availableFaces[secondBest[edge]]) return secondBest[edge];\\n                else if (availableFaces[lastChoice[edge]]) return lastChoice[edge];\\n                return edge; // we have to give them something.\\n            };\\n\\n            this.isEdgeSupported = function (edge) {\\n                return availableFaces[edge] === true;\\n            };\\n\\n            this.compute = function (params) {\\n                return userDefinedContinuousAnchorLocations[params.element.id] || continuousAnchorLocations[params.element.id] || [0, 0];\\n            };\\n            this.getCurrentLocation = function (params) {\\n                return userDefinedContinuousAnchorLocations[params.element.id] || continuousAnchorLocations[params.element.id] || [0, 0];\\n            };\\n            this.getOrientation = function (endpoint) {\\n                return continuousAnchorOrientations[endpoint.id] || [0, 0];\\n            };\\n            this.clearUserDefinedLocation = function () {\\n                delete userDefinedContinuousAnchorLocations[anchorParams.elementId];\\n            };\\n            this.setUserDefinedLocation = function (loc) {\\n                userDefinedContinuousAnchorLocations[anchorParams.elementId] = loc;\\n            };\\n            this.getCssClass = function () {\\n                return cssClass;\\n            };\\n        };\\n\\n        // continuous anchors\\n        jsPlumbInstance.continuousAnchorFactory = {\\n            get: function (params) {\\n                return new ContinuousAnchor(params);\\n            },\\n            clear: function (elementId) {\\n                delete userDefinedContinuousAnchorLocations[elementId];\\n                delete continuousAnchorLocations[elementId];\\n            }\\n        };\\n    };\\n\\n    /**\\n     * Anchors model a position on some element at which an Endpoint may be located.  They began as a first class citizen of jsPlumb, ie. a user\\n     * was required to create these themselves, but over time this has been replaced by the concept of referring to them either by name (eg. \\\"TopMiddle\\\"),\\n     * or by an array describing their coordinates (eg. [ 0, 0.5, 0, -1 ], which is the same as \\\"TopMiddle\\\").  jsPlumb now handles all of the\\n     * creation of Anchors without user intervention.\\n     */\\n    _jp.Anchor = function (params) {\\n        this.x = params.x || 0;\\n        this.y = params.y || 0;\\n        this.elementId = params.elementId;\\n        this.cssClass = params.cssClass || \\\"\\\";\\n        this.userDefinedLocation = null;\\n        this.orientation = params.orientation || [ 0, 0 ];\\n        this.lastReturnValue = null;\\n        this.offsets = params.offsets || [ 0, 0 ];\\n        this.timestamp = null;\\n\\n        _ju.EventGenerator.apply(this);\\n\\n        this.compute = function (params) {\\n\\n            var xy = params.xy, wh = params.wh, timestamp = params.timestamp;\\n\\n            if (params.clearUserDefinedLocation)\\n                this.userDefinedLocation = null;\\n\\n            if (timestamp && timestamp === self.timestamp)\\n                return this.lastReturnValue;\\n\\n            if (this.userDefinedLocation != null) {\\n                this.lastReturnValue = this.userDefinedLocation;\\n            }\\n            else {\\n                this.lastReturnValue = [ xy[0] + (this.x * wh[0]) + this.offsets[0], xy[1] + (this.y * wh[1]) + this.offsets[1] ];\\n            }\\n\\n            this.timestamp = timestamp;\\n            return this.lastReturnValue;\\n        };\\n\\n        this.getCurrentLocation = function (params) {\\n            params = params || {};\\n            return (this.lastReturnValue == null || (params.timestamp != null && this.timestamp != params.timestamp)) ? this.compute(params) : this.lastReturnValue;\\n        };\\n    };\\n    _ju.extend(_jp.Anchor, _ju.EventGenerator, {\\n        equals: function (anchor) {\\n            if (!anchor) return false;\\n            var ao = anchor.getOrientation(),\\n                o = this.getOrientation();\\n            return this.x == anchor.x && this.y == anchor.y && this.offsets[0] == anchor.offsets[0] && this.offsets[1] == anchor.offsets[1] && o[0] == ao[0] && o[1] == ao[1];\\n        },\\n        getUserDefinedLocation: function () {\\n            return this.userDefinedLocation;\\n        },\\n        setUserDefinedLocation: function (l) {\\n            this.userDefinedLocation = l;\\n        },\\n        clearUserDefinedLocation: function () {\\n            this.userDefinedLocation = null;\\n        },\\n        getOrientation: function () {\\n            return this.orientation;\\n        },\\n        getCssClass: function () {\\n            return this.cssClass;\\n        }\\n    });\\n\\n    /**\\n     * An Anchor that floats. its orientation is computed dynamically from\\n     * its position relative to the anchor it is floating relative to.  It is used when creating\\n     * a connection through drag and drop.\\n     *\\n     * TODO FloatingAnchor could totally be refactored to extend Anchor just slightly.\\n     */\\n    _jp.FloatingAnchor = function (params) {\\n\\n        _jp.Anchor.apply(this, arguments);\\n\\n        // this is the anchor that this floating anchor is referenced to for\\n        // purposes of calculating the orientation.\\n        var ref = params.reference,\\n            // the canvas this refers to.\\n            refCanvas = params.referenceCanvas,\\n            size = _jp.getSize(refCanvas),\\n            // these are used to store the current relative position of our\\n            // anchor wrt the reference anchor. they only indicate\\n            // direction, so have a value of 1 or -1 (or, very rarely, 0). these\\n            // values are written by the compute method, and read\\n            // by the getOrientation method.\\n            xDir = 0, yDir = 0,\\n            // temporary member used to store an orientation when the floating\\n            // anchor is hovering over another anchor.\\n            orientation = null,\\n            _lastResult = null;\\n\\n        // clear from parent. we want floating anchor orientation to always be computed.\\n        this.orientation = null;\\n\\n        // set these to 0 each; they are used by certain types of connectors in the loopback case,\\n        // when the connector is trying to clear the element it is on. but for floating anchor it's not\\n        // very important.\\n        this.x = 0;\\n        this.y = 0;\\n\\n        this.isFloating = true;\\n\\n        this.compute = function (params) {\\n            var xy = params.xy,\\n                result = [ xy[0] + (size[0] / 2), xy[1] + (size[1] / 2) ]; // return origin of the element. we may wish to improve this so that any object can be the drag proxy.\\n            _lastResult = result;\\n            return result;\\n        };\\n\\n        this.getOrientation = function (_endpoint) {\\n            if (orientation) return orientation;\\n            else {\\n                var o = ref.getOrientation(_endpoint);\\n                // here we take into account the orientation of the other\\n                // anchor: if it declares zero for some direction, we declare zero too. this might not be the most awesome. perhaps we can come\\n                // up with a better way. it's just so that the line we draw looks like it makes sense. maybe this wont make sense.\\n                return [ Math.abs(o[0]) * xDir * -1,\\n                        Math.abs(o[1]) * yDir * -1 ];\\n            }\\n        };\\n\\n        /**\\n         * notification the endpoint associated with this anchor is hovering\\n         * over another anchor; we want to assume that anchor's orientation\\n         * for the duration of the hover.\\n         */\\n        this.over = function (anchor, endpoint) {\\n            orientation = anchor.getOrientation(endpoint);\\n        };\\n\\n        /**\\n         * notification the endpoint associated with this anchor is no\\n         * longer hovering over another anchor; we should resume calculating\\n         * orientation as we normally do.\\n         */\\n        this.out = function () {\\n            orientation = null;\\n        };\\n\\n        this.getCurrentLocation = function (params) {\\n            return _lastResult == null ? this.compute(params) : _lastResult;\\n        };\\n    };\\n    _ju.extend(_jp.FloatingAnchor, _jp.Anchor);\\n\\n    var _convertAnchor = function (anchor, jsPlumbInstance, elementId) {\\n        return anchor.constructor == _jp.Anchor ? anchor : jsPlumbInstance.makeAnchor(anchor, elementId, jsPlumbInstance);\\n    };\\n\\n    /* \\n     * A DynamicAnchor is an Anchor that contains a list of other Anchors, which it cycles\\n     * through at compute time to find the one that is located closest to\\n     * the center of the target element, and returns that Anchor's compute\\n     * method result. this causes endpoints to follow each other with\\n     * respect to the orientation of their target elements, which is a useful\\n     * feature for some applications.\\n     * \\n     */\\n    _jp.DynamicAnchor = function (params) {\\n        _jp.Anchor.apply(this, arguments);\\n\\n        this.isDynamic = true;\\n        this.anchors = [];\\n        this.elementId = params.elementId;\\n        this.jsPlumbInstance = params.jsPlumbInstance;\\n\\n        for (var i = 0; i < params.anchors.length; i++)\\n            this.anchors[i] = _convertAnchor(params.anchors[i], this.jsPlumbInstance, this.elementId);\\n\\n        this.getAnchors = function () {\\n            return this.anchors;\\n        };\\n        this.locked = false;\\n        var _curAnchor = this.anchors.length > 0 ? this.anchors[0] : null,\\n            _lastAnchor = _curAnchor,\\n            self = this,\\n\\n        // helper method to calculate the distance between the centers of the two elements.\\n            _distance = function (anchor, cx, cy, xy, wh) {\\n                var ax = xy[0] + (anchor.x * wh[0]), ay = xy[1] + (anchor.y * wh[1]),\\n                    acx = xy[0] + (wh[0] / 2), acy = xy[1] + (wh[1] / 2);\\n                return (Math.sqrt(Math.pow(cx - ax, 2) + Math.pow(cy - ay, 2)) +\\n                    Math.sqrt(Math.pow(acx - ax, 2) + Math.pow(acy - ay, 2)));\\n            },\\n        // default method uses distance between element centers.  you can provide your own method in the dynamic anchor\\n        // constructor (and also to jsPlumb.makeDynamicAnchor). the arguments to it are four arrays:\\n        // xy - xy loc of the anchor's element\\n        // wh - anchor's element's dimensions\\n        // txy - xy loc of the element of the other anchor in the connection\\n        // twh - dimensions of the element of the other anchor in the connection.\\n        // anchors - the list of selectable anchors\\n            _anchorSelector = params.selector || function (xy, wh, txy, twh, anchors) {\\n                var cx = txy[0] + (twh[0] / 2), cy = txy[1] + (twh[1] / 2);\\n                var minIdx = -1, minDist = Infinity;\\n                for (var i = 0; i < anchors.length; i++) {\\n                    var d = _distance(anchors[i], cx, cy, xy, wh);\\n                    if (d < minDist) {\\n                        minIdx = i + 0;\\n                        minDist = d;\\n                    }\\n                }\\n                return anchors[minIdx];\\n            };\\n\\n        this.compute = function (params) {\\n            var xy = params.xy, wh = params.wh, txy = params.txy, twh = params.twh;\\n\\n            this.timestamp = params.timestamp;\\n\\n            var udl = self.getUserDefinedLocation();\\n            if (udl != null) {\\n                return udl;\\n            }\\n\\n            // if anchor is locked or an opposite element was not given, we\\n            // maintain our state. anchor will be locked\\n            // if it is the source of a drag and drop.\\n            if (this.locked || txy == null || twh == null)\\n                return _curAnchor.compute(params);\\n            else\\n                params.timestamp = null; // otherwise clear this, i think. we want the anchor to compute.\\n\\n            _curAnchor = _anchorSelector(xy, wh, txy, twh, this.anchors);\\n            this.x = _curAnchor.x;\\n            this.y = _curAnchor.y;\\n\\n            if (_curAnchor != _lastAnchor)\\n                this.fire(\\\"anchorChanged\\\", _curAnchor);\\n\\n            _lastAnchor = _curAnchor;\\n\\n            return _curAnchor.compute(params);\\n        };\\n\\n        this.getCurrentLocation = function (params) {\\n            return this.getUserDefinedLocation() || (_curAnchor != null ? _curAnchor.getCurrentLocation(params) : null);\\n        };\\n\\n        this.getOrientation = function (_endpoint) {\\n            return _curAnchor != null ? _curAnchor.getOrientation(_endpoint) : [ 0, 0 ];\\n        };\\n        this.over = function (anchor, endpoint) {\\n            if (_curAnchor != null) _curAnchor.over(anchor, endpoint);\\n        };\\n        this.out = function () {\\n            if (_curAnchor != null) _curAnchor.out();\\n        };\\n\\n        this.getCssClass = function () {\\n            return (_curAnchor && _curAnchor.getCssClass()) || \\\"\\\";\\n        };\\n    };\\n    _ju.extend(_jp.DynamicAnchor, _jp.Anchor);\\n\\n// -------- basic anchors ------------------    \\n    var _curryAnchor = function (x, y, ox, oy, type, fnInit) {\\n        _jp.Anchors[type] = function (params) {\\n            var a = params.jsPlumbInstance.makeAnchor([ x, y, ox, oy, 0, 0 ], params.elementId, params.jsPlumbInstance);\\n            a.type = type;\\n            if (fnInit) fnInit(a, params);\\n            return a;\\n        };\\n    };\\n\\n    _curryAnchor(0.5, 0, 0, -1, \\\"TopCenter\\\");\\n    _curryAnchor(0.5, 1, 0, 1, \\\"BottomCenter\\\");\\n    _curryAnchor(0, 0.5, -1, 0, \\\"LeftMiddle\\\");\\n    _curryAnchor(1, 0.5, 1, 0, \\\"RightMiddle\\\");\\n\\n    _curryAnchor(0.5, 0, 0, -1, \\\"Top\\\");\\n    _curryAnchor(0.5, 1, 0, 1, \\\"Bottom\\\");\\n    _curryAnchor(0, 0.5, -1, 0, \\\"Left\\\");\\n    _curryAnchor(1, 0.5, 1, 0, \\\"Right\\\");\\n    _curryAnchor(0.5, 0.5, 0, 0, \\\"Center\\\");\\n    _curryAnchor(1, 0, 0, -1, \\\"TopRight\\\");\\n    _curryAnchor(1, 1, 0, 1, \\\"BottomRight\\\");\\n    _curryAnchor(0, 0, 0, -1, \\\"TopLeft\\\");\\n    _curryAnchor(0, 1, 0, 1, \\\"BottomLeft\\\");\\n\\n// ------- dynamic anchors -------------------    \\n\\n    // default dynamic anchors chooses from Top, Right, Bottom, Left\\n    _jp.Defaults.DynamicAnchors = function (params) {\\n        return params.jsPlumbInstance.makeAnchors([\\\"TopCenter\\\", \\\"RightMiddle\\\", \\\"BottomCenter\\\", \\\"LeftMiddle\\\"], params.elementId, params.jsPlumbInstance);\\n    };\\n\\n    // default dynamic anchors bound to name 'AutoDefault'\\n    _jp.Anchors.AutoDefault = function (params) {\\n        var a = params.jsPlumbInstance.makeDynamicAnchor(_jp.Defaults.DynamicAnchors(params));\\n        a.type = \\\"AutoDefault\\\";\\n        return a;\\n    };\\n\\n// ------- continuous anchors -------------------    \\n\\n    var _curryContinuousAnchor = function (type, faces) {\\n        _jp.Anchors[type] = function (params) {\\n            var a = params.jsPlumbInstance.makeAnchor([\\\"Continuous\\\", { faces: faces }], params.elementId, params.jsPlumbInstance);\\n            a.type = type;\\n            return a;\\n        };\\n    };\\n\\n    _jp.Anchors.Continuous = function (params) {\\n        return params.jsPlumbInstance.continuousAnchorFactory.get(params);\\n    };\\n\\n    _curryContinuousAnchor(\\\"ContinuousLeft\\\", [\\\"left\\\"]);\\n    _curryContinuousAnchor(\\\"ContinuousTop\\\", [\\\"top\\\"]);\\n    _curryContinuousAnchor(\\\"ContinuousBottom\\\", [\\\"bottom\\\"]);\\n    _curryContinuousAnchor(\\\"ContinuousRight\\\", [\\\"right\\\"]);\\n\\n// ------- position assign anchors -------------------    \\n\\n    // this anchor type lets you assign the position at connection time.\\n    _curryAnchor(0, 0, 0, 0, \\\"Assign\\\", function (anchor, params) {\\n        // find what to use as the \\\"position finder\\\". the user may have supplied a String which represents\\n        // the id of a position finder in jsPlumb.AnchorPositionFinders, or the user may have supplied the\\n        // position finder as a function.  we find out what to use and then set it on the anchor.\\n        var pf = params.position || \\\"Fixed\\\";\\n        anchor.positionFinder = pf.constructor == String ? params.jsPlumbInstance.AnchorPositionFinders[pf] : pf;\\n        // always set the constructor params; the position finder might need them later (the Grid one does,\\n        // for example)\\n        anchor.constructorParams = params;\\n    });\\n\\n    // these are the default anchor positions finders, which are used by the makeTarget function.  supplying\\n    // a position finder argument to that function allows you to specify where the resulting anchor will\\n    // be located\\n    jsPlumbInstance.prototype.AnchorPositionFinders = {\\n        \\\"Fixed\\\": function (dp, ep, es) {\\n            return [ (dp.left - ep.left) / es[0], (dp.top - ep.top) / es[1] ];\\n        },\\n        \\\"Grid\\\": function (dp, ep, es, params) {\\n            var dx = dp.left - ep.left, dy = dp.top - ep.top,\\n                gx = es[0] / (params.grid[0]), gy = es[1] / (params.grid[1]),\\n                mx = Math.floor(dx / gx), my = Math.floor(dy / gy);\\n            return [ ((mx * gx) + (gx / 2)) / es[0], ((my * gy) + (gy / 2)) / es[1] ];\\n        }\\n    };\\n\\n// ------- perimeter anchors -------------------    \\n\\n    _jp.Anchors.Perimeter = function (params) {\\n        params = params || {};\\n        var anchorCount = params.anchorCount || 60,\\n            shape = params.shape;\\n\\n        if (!shape) throw new Error(\\\"no shape supplied to Perimeter Anchor type\\\");\\n\\n        var _circle = function () {\\n                var r = 0.5, step = Math.PI * 2 / anchorCount, current = 0, a = [];\\n                for (var i = 0; i < anchorCount; i++) {\\n                    var x = r + (r * Math.sin(current)),\\n                        y = r + (r * Math.cos(current));\\n                    a.push([ x, y, 0, 0 ]);\\n                    current += step;\\n                }\\n                return a;\\n            },\\n            _path = function (segments) {\\n                var anchorsPerFace = anchorCount / segments.length, a = [],\\n                    _computeFace = function (x1, y1, x2, y2, fractionalLength) {\\n                        anchorsPerFace = anchorCount * fractionalLength;\\n                        var dx = (x2 - x1) / anchorsPerFace, dy = (y2 - y1) / anchorsPerFace;\\n                        for (var i = 0; i < anchorsPerFace; i++) {\\n                            a.push([\\n                                    x1 + (dx * i),\\n                                    y1 + (dy * i),\\n                                0,\\n                                0\\n                            ]);\\n                        }\\n                    };\\n\\n                for (var i = 0; i < segments.length; i++)\\n                    _computeFace.apply(null, segments[i]);\\n\\n                return a;\\n            },\\n            _shape = function (faces) {\\n                var s = [];\\n                for (var i = 0; i < faces.length; i++) {\\n                    s.push([faces[i][0], faces[i][1], faces[i][2], faces[i][3], 1 / faces.length]);\\n                }\\n                return _path(s);\\n            },\\n            _rectangle = function () {\\n                return _shape([\\n                    [ 0, 0, 1, 0 ],\\n                    [ 1, 0, 1, 1 ],\\n                    [ 1, 1, 0, 1 ],\\n                    [ 0, 1, 0, 0 ]\\n                ]);\\n            };\\n\\n        var _shapes = {\\n                \\\"Circle\\\": _circle,\\n                \\\"Ellipse\\\": _circle,\\n                \\\"Diamond\\\": function () {\\n                    return _shape([\\n                        [ 0.5, 0, 1, 0.5 ],\\n                        [ 1, 0.5, 0.5, 1 ],\\n                        [ 0.5, 1, 0, 0.5 ],\\n                        [ 0, 0.5, 0.5, 0 ]\\n                    ]);\\n                },\\n                \\\"Rectangle\\\": _rectangle,\\n                \\\"Square\\\": _rectangle,\\n                \\\"Triangle\\\": function () {\\n                    return _shape([\\n                        [ 0.5, 0, 1, 1 ],\\n                        [ 1, 1, 0, 1 ],\\n                        [ 0, 1, 0.5, 0]\\n                    ]);\\n                },\\n                \\\"Path\\\": function (params) {\\n                    var points = params.points, p = [], tl = 0;\\n                    for (var i = 0; i < points.length - 1; i++) {\\n                        var l = Math.sqrt(Math.pow(points[i][2] - points[i][0]) + Math.pow(points[i][3] - points[i][1]));\\n                        tl += l;\\n                        p.push([points[i][0], points[i][1], points[i + 1][0], points[i + 1][1], l]);\\n                    }\\n                    for (var j = 0; j < p.length; j++) {\\n                        p[j][4] = p[j][4] / tl;\\n                    }\\n                    return _path(p);\\n                }\\n            },\\n            _rotate = function (points, amountInDegrees) {\\n                var o = [], theta = amountInDegrees / 180 * Math.PI;\\n                for (var i = 0; i < points.length; i++) {\\n                    var _x = points[i][0] - 0.5,\\n                        _y = points[i][1] - 0.5;\\n\\n                    o.push([\\n                            0.5 + ((_x * Math.cos(theta)) - (_y * Math.sin(theta))),\\n                            0.5 + ((_x * Math.sin(theta)) + (_y * Math.cos(theta))),\\n                        points[i][2],\\n                        points[i][3]\\n                    ]);\\n                }\\n                return o;\\n            };\\n\\n        if (!_shapes[shape]) throw new Error(\\\"Shape [\\\" + shape + \\\"] is unknown by Perimeter Anchor type\\\");\\n\\n        var da = _shapes[shape](params);\\n        if (params.rotation) da = _rotate(da, params.rotation);\\n        var a = params.jsPlumbInstance.makeDynamicAnchor(da);\\n        a.type = \\\"Perimeter\\\";\\n        return a;\\n    };\\n}).call(this);\\n/*\\n * jsPlumb\\n * \\n * Title:jsPlumb 2.0.2\\n * \\n * Provides a way to visually connect elements on an HTML page, using SVG.\\n * \\n * This file contains the default Connectors, Endpoint and Overlay definitions.\\n *\\n * Copyright (c) 2010 - 2015 jsPlumb (hello@jsplumbtoolkit.com)\\n * \\n * http://jsplumbtoolkit.com\\n * http://github.com/sporritt/jsplumb\\n * \\n * Dual licensed under the MIT and GPL2 licenses.\\n */\\n;\\n(function () {\\n\\n    \\\"use strict\\\";\\n    var root = this, _jp = root.jsPlumb, _ju = root.jsPlumbUtil, _jg = root.Biltong;\\n\\n    _jp.Segments = {\\n\\n        /*\\n         * Class: AbstractSegment\\n         * A Connector is made up of 1..N Segments, each of which has a Type, such as 'Straight', 'Arc',\\n         * 'Bezier'. This is new from 1.4.2, and gives us a lot more flexibility when drawing connections: things such\\n         * as rounded corners for flowchart connectors, for example, or a straight line stub for Bezier connections, are\\n         * much easier to do now.\\n         *\\n         * A Segment is responsible for providing coordinates for painting it, and also must be able to report its length.\\n         * \\n         */\\n        AbstractSegment: function (params) {\\n            this.params = params;\\n\\n            /**\\n             * Function: findClosestPointOnPath\\n             * Finds the closest point on this segment to the given [x, y],\\n             * returning both the x and y of the point plus its distance from\\n             * the supplied point, and its location along the length of the\\n             * path inscribed by the segment.  This implementation returns\\n             * Infinity for distance and null values for everything else;\\n             * subclasses are expected to override.\\n             */\\n            this.findClosestPointOnPath = function (x, y) {\\n                return {\\n                    d: Infinity,\\n                    x: null,\\n                    y: null,\\n                    l: null\\n                };\\n            };\\n\\n            this.getBounds = function () {\\n                return {\\n                    minX: Math.min(params.x1, params.x2),\\n                    minY: Math.min(params.y1, params.y2),\\n                    maxX: Math.max(params.x1, params.x2),\\n                    maxY: Math.max(params.y1, params.y2)\\n                };\\n            };\\n        },\\n        Straight: function (params) {\\n            var _super = _jp.Segments.AbstractSegment.apply(this, arguments),\\n                length, m, m2, x1, x2, y1, y2,\\n                _recalc = function () {\\n                    length = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\\n                    m = _jg.gradient({x: x1, y: y1}, {x: x2, y: y2});\\n                    m2 = -1 / m;\\n                };\\n\\n            this.type = \\\"Straight\\\";\\n\\n            this.getLength = function () {\\n                return length;\\n            };\\n            this.getGradient = function () {\\n                return m;\\n            };\\n\\n            this.getCoordinates = function () {\\n                return { x1: x1, y1: y1, x2: x2, y2: y2 };\\n            };\\n            this.setCoordinates = function (coords) {\\n                x1 = coords.x1;\\n                y1 = coords.y1;\\n                x2 = coords.x2;\\n                y2 = coords.y2;\\n                _recalc();\\n            };\\n            this.setCoordinates({x1: params.x1, y1: params.y1, x2: params.x2, y2: params.y2});\\n\\n            this.getBounds = function () {\\n                return {\\n                    minX: Math.min(x1, x2),\\n                    minY: Math.min(y1, y2),\\n                    maxX: Math.max(x1, x2),\\n                    maxY: Math.max(y1, y2)\\n                };\\n            };\\n\\n            /**\\n             * returns the point on the segment's path that is 'location' along the length of the path, where 'location' is a decimal from\\n             * 0 to 1 inclusive. for the straight line segment this is simple maths.\\n             */\\n            this.pointOnPath = function (location, absolute) {\\n                if (location === 0 && !absolute)\\n                    return { x: x1, y: y1 };\\n                else if (location == 1 && !absolute)\\n                    return { x: x2, y: y2 };\\n                else {\\n                    var l = absolute ? location > 0 ? location : length + location : location * length;\\n                    return _jg.pointOnLine({x: x1, y: y1}, {x: x2, y: y2}, l);\\n                }\\n            };\\n\\n            /**\\n             * returns the gradient of the segment at the given point - which for us is constant.\\n             */\\n            this.gradientAtPoint = function (_) {\\n                return m;\\n            };\\n\\n            /**\\n             * returns the point on the segment's path that is 'distance' along the length of the path from 'location', where\\n             * 'location' is a decimal from 0 to 1 inclusive, and 'distance' is a number of pixels.\\n             * this hands off to jsPlumbUtil to do the maths, supplying two points and the distance.\\n             */\\n            this.pointAlongPathFrom = function (location, distance, absolute) {\\n                var p = this.pointOnPath(location, absolute),\\n                    farAwayPoint = distance <= 0 ? {x: x1, y: y1} : {x: x2, y: y2 };\\n\\n                /*\\n                 location == 1 ? {\\n                 x:x1 + ((x2 - x1) * 10),\\n                 y:y1 + ((y1 - y2) * 10)\\n                 } :\\n                 */\\n\\n                if (distance <= 0 && Math.abs(distance) > 1) distance *= -1;\\n\\n                return _jg.pointOnLine(p, farAwayPoint, distance);\\n            };\\n\\n            // is c between a and b?\\n            var within = function (a, b, c) {\\n                return c >= Math.min(a, b) && c <= Math.max(a, b);\\n            };\\n            // find which of a and b is closest to c\\n            var closest = function (a, b, c) {\\n                return Math.abs(c - a) < Math.abs(c - b) ? a : b;\\n            };\\n\\n            /**\\n             Function: findClosestPointOnPath\\n             Finds the closest point on this segment to [x,y]. See\\n             notes on this method in AbstractSegment.\\n             */\\n            this.findClosestPointOnPath = function (x, y) {\\n                var out = {\\n                    d: Infinity,\\n                    x: null,\\n                    y: null,\\n                    l: null,\\n                    x1: x1,\\n                    x2: x2,\\n                    y1: y1,\\n                    y2: y2\\n                };\\n\\n                if (m === 0) {\\n                    out.y = y1;\\n                    out.x = within(x1, x2, x) ? x : closest(x1, x2, x);\\n                }\\n                else if (m == Infinity || m == -Infinity) {\\n                    out.x = x1;\\n                    out.y = within(y1, y2, y) ? y : closest(y1, y2, y);\\n                }\\n                else {\\n                    // closest point lies on normal from given point to this line.  \\n                    var b = y1 - (m * x1),\\n                        b2 = y - (m2 * x),\\n                    // y1 = m.x1 + b and y1 = m2.x1 + b2\\n                    // so m.x1 + b = m2.x1 + b2\\n                    // x1(m - m2) = b2 - b\\n                    // x1 = (b2 - b) / (m - m2)\\n                        _x1 = (b2 - b) / (m - m2),\\n                        _y1 = (m * _x1) + b;\\n\\n                    out.x = within(x1, x2, _x1) ? _x1 : closest(x1, x2, _x1);//_x1;\\n                    out.y = within(y1, y2, _y1) ? _y1 : closest(y1, y2, _y1);//_y1;\\n                }\\n\\n                var fractionInSegment = _jg.lineLength([ out.x, out.y ], [ x1, y1 ]);\\n                out.d = _jg.lineLength([x, y], [out.x, out.y]);\\n                out.l = fractionInSegment / length;\\n                return out;\\n            };\\n        },\\n\\n        /*\\n         Arc Segment. You need to supply:\\n\\n         r   -   radius\\n         cx  -   center x for the arc\\n         cy  -   center y for the arc\\n         ac  -   whether the arc is anticlockwise or not. default is clockwise.\\n\\n         and then either:\\n\\n         startAngle  -   startAngle for the arc.\\n         endAngle    -   endAngle for the arc.\\n\\n         or:\\n\\n         x1          -   x for start point\\n         y1          -   y for start point\\n         x2          -   x for end point\\n         y2          -   y for end point\\n\\n         */\\n        Arc: function (params) {\\n            var _super = _jp.Segments.AbstractSegment.apply(this, arguments),\\n                _calcAngle = function (_x, _y) {\\n                    return _jg.theta([params.cx, params.cy], [_x, _y]);\\n                },\\n                _calcAngleForLocation = function (segment, location) {\\n                    if (segment.anticlockwise) {\\n                        var sa = segment.startAngle < segment.endAngle ? segment.startAngle + TWO_PI : segment.startAngle,\\n                            s = Math.abs(sa - segment.endAngle);\\n                        return sa - (s * location);\\n                    }\\n                    else {\\n                        var ea = segment.endAngle < segment.startAngle ? segment.endAngle + TWO_PI : segment.endAngle,\\n                            ss = Math.abs(ea - segment.startAngle);\\n\\n                        return segment.startAngle + (ss * location);\\n                    }\\n                },\\n                TWO_PI = 2 * Math.PI;\\n\\n            this.radius = params.r;\\n            this.anticlockwise = params.ac;\\n            this.type = \\\"Arc\\\";\\n\\n            if (params.startAngle && params.endAngle) {\\n                this.startAngle = params.startAngle;\\n                this.endAngle = params.endAngle;\\n                this.x1 = params.cx + (this.radius * Math.cos(params.startAngle));\\n                this.y1 = params.cy + (this.radius * Math.sin(params.startAngle));\\n                this.x2 = params.cx + (this.radius * Math.cos(params.endAngle));\\n                this.y2 = params.cy + (this.radius * Math.sin(params.endAngle));\\n            }\\n            else {\\n                this.startAngle = _calcAngle(params.x1, params.y1);\\n                this.endAngle = _calcAngle(params.x2, params.y2);\\n                this.x1 = params.x1;\\n                this.y1 = params.y1;\\n                this.x2 = params.x2;\\n                this.y2 = params.y2;\\n            }\\n\\n            if (this.endAngle < 0) this.endAngle += TWO_PI;\\n            if (this.startAngle < 0) this.startAngle += TWO_PI;\\n\\n            // segment is used by vml     \\n            //this.segment = _jg.quadrant([this.x1, this.y1], [this.x2, this.y2]);\\n\\n            // we now have startAngle and endAngle as positive numbers, meaning the\\n            // absolute difference (|d|) between them is the sweep (s) of this arc, unless the\\n            // arc is 'anticlockwise' in which case 's' is given by 2PI - |d|.\\n\\n            var ea = this.endAngle < this.startAngle ? this.endAngle + TWO_PI : this.endAngle;\\n            this.sweep = Math.abs(ea - this.startAngle);\\n            if (this.anticlockwise) this.sweep = TWO_PI - this.sweep;\\n            var circumference = 2 * Math.PI * this.radius,\\n                frac = this.sweep / TWO_PI,\\n                length = circumference * frac;\\n\\n            this.getLength = function () {\\n                return length;\\n            };\\n\\n            this.getBounds = function () {\\n                return {\\n                    minX: params.cx - params.r,\\n                    maxX: params.cx + params.r,\\n                    minY: params.cy - params.r,\\n                    maxY: params.cy + params.r\\n                };\\n            };\\n\\n            var VERY_SMALL_VALUE = 0.0000000001,\\n                gentleRound = function (n) {\\n                    var f = Math.floor(n), r = Math.ceil(n);\\n                    if (n - f < VERY_SMALL_VALUE)\\n                        return f;\\n                    else if (r - n < VERY_SMALL_VALUE)\\n                        return r;\\n                    return n;\\n                };\\n\\n            /**\\n             * returns the point on the segment's path that is 'location' along the length of the path, where 'location' is a decimal from\\n             * 0 to 1 inclusive.\\n             */\\n            this.pointOnPath = function (location, absolute) {\\n\\n                if (location === 0) {\\n                    return { x: this.x1, y: this.y1, theta: this.startAngle };\\n                }\\n                else if (location == 1) {\\n                    return { x: this.x2, y: this.y2, theta: this.endAngle };\\n                }\\n\\n                if (absolute) {\\n                    location = location / length;\\n                }\\n\\n                var angle = _calcAngleForLocation(this, location),\\n                    _x = params.cx + (params.r * Math.cos(angle)),\\n                    _y = params.cy + (params.r * Math.sin(angle));\\n\\n                return { x: gentleRound(_x), y: gentleRound(_y), theta: angle };\\n            };\\n\\n            /**\\n             * returns the gradient of the segment at the given point.\\n             */\\n            this.gradientAtPoint = function (location, absolute) {\\n                var p = this.pointOnPath(location, absolute);\\n                var m = _jg.normal([ params.cx, params.cy ], [p.x, p.y ]);\\n                if (!this.anticlockwise && (m == Infinity || m == -Infinity)) m *= -1;\\n                return m;\\n            };\\n\\n            this.pointAlongPathFrom = function (location, distance, absolute) {\\n                var p = this.pointOnPath(location, absolute),\\n                    arcSpan = distance / circumference * 2 * Math.PI,\\n                    dir = this.anticlockwise ? -1 : 1,\\n                    startAngle = p.theta + (dir * arcSpan),\\n                    startX = params.cx + (this.radius * Math.cos(startAngle)),\\n                    startY = params.cy + (this.radius * Math.sin(startAngle));\\n\\n                return {x: startX, y: startY};\\n            };\\n        },\\n\\n        Bezier: function (params) {\\n            this.curve = [\\n                { x: params.x1, y: params.y1},\\n                { x: params.cp1x, y: params.cp1y },\\n                { x: params.cp2x, y: params.cp2y },\\n                { x: params.x2, y: params.y2 }\\n            ];\\n\\n            var _super = _jp.Segments.AbstractSegment.apply(this, arguments);\\n            // although this is not a strictly rigorous determination of bounds\\n            // of a bezier curve, it works for the types of curves that this segment\\n            // type produces.\\n            this.bounds = {\\n                minX: Math.min(params.x1, params.x2, params.cp1x, params.cp2x),\\n                minY: Math.min(params.y1, params.y2, params.cp1y, params.cp2y),\\n                maxX: Math.max(params.x1, params.x2, params.cp1x, params.cp2x),\\n                maxY: Math.max(params.y1, params.y2, params.cp1y, params.cp2y)\\n            };\\n\\n            this.type = \\\"Bezier\\\";\\n\\n            var _translateLocation = function (_curve, location, absolute) {\\n                if (absolute)\\n                    location = root.jsBezier.locationAlongCurveFrom(_curve, location > 0 ? 0 : 1, location);\\n\\n                return location;\\n            };\\n\\n            /**\\n             * returns the point on the segment's path that is 'location' along the length of the path, where 'location' is a decimal from\\n             * 0 to 1 inclusive.\\n             */\\n            this.pointOnPath = function (location, absolute) {\\n                location = _translateLocation(this.curve, location, absolute);\\n                return root.jsBezier.pointOnCurve(this.curve, location);\\n            };\\n\\n            /**\\n             * returns the gradient of the segment at the given point.\\n             */\\n            this.gradientAtPoint = function (location, absolute) {\\n                location = _translateLocation(this.curve, location, absolute);\\n                return root.jsBezier.gradientAtPoint(this.curve, location);\\n            };\\n\\n            this.pointAlongPathFrom = function (location, distance, absolute) {\\n                location = _translateLocation(this.curve, location, absolute);\\n                return root.jsBezier.pointAlongCurveFrom(this.curve, location, distance);\\n            };\\n\\n            this.getLength = function () {\\n                return root.jsBezier.getLength(this.curve);\\n            };\\n\\n            this.getBounds = function () {\\n                return this.bounds;\\n            };\\n        }\\n    };\\n\\n    /*\\n     Class: AbstractComponent\\n     Superclass for AbstractConnector and AbstractEndpoint.\\n     */\\n    var AbstractComponent = function () {\\n        this.resetBounds = function () {\\n            this.bounds = { minX: Infinity, minY: Infinity, maxX: -Infinity, maxY: -Infinity };\\n        };\\n        this.resetBounds();\\n    };\\n\\n    /*\\n     * Class: AbstractConnector\\n     * Superclass for all Connectors; here is where Segments are managed.  This is exposed on jsPlumb just so it\\n     * can be accessed from other files. You should not try to instantiate one of these directly.\\n     *\\n     * When this class is asked for a pointOnPath, or gradient etc, it must first figure out which segment to dispatch\\n     * that request to. This is done by keeping track of the total connector length as segments are added, and also\\n     * their cumulative ratios to the total length.  Then when the right segment is found it is a simple case of dispatching\\n     * the request to it (and adjusting 'location' so that it is relative to the beginning of that segment.)\\n     */\\n    _jp.Connectors.AbstractConnector = function (params) {\\n\\n        AbstractComponent.apply(this, arguments);\\n\\n        var segments = [],\\n            totalLength = 0,\\n            segmentProportions = [],\\n            segmentProportionalLengths = [],\\n            stub = params.stub || 0,\\n            sourceStub = _ju.isArray(stub) ? stub[0] : stub,\\n            targetStub = _ju.isArray(stub) ? stub[1] : stub,\\n            gap = params.gap || 0,\\n            sourceGap = _ju.isArray(gap) ? gap[0] : gap,\\n            targetGap = _ju.isArray(gap) ? gap[1] : gap,\\n            userProvidedSegments = null,\\n            edited = false,\\n            paintInfo = null,\\n            geometry = null,\\n            editable = params.editable !== false && jsPlumb.ConnectorEditors != null && jsPlumb.ConnectorEditors[this.type] != null;\\n\\n        var _setGeometry = this.setGeometry = function(g, internallyComputed) {\\n            edited = (!internallyComputed);\\n            geometry = g;\\n        };\\n        var _getGeometry = this.getGeometry = function() {\\n            return geometry;\\n        };\\n\\n        this.hasBeenEdited = function() { return edited; };\\n        this.isEditing = function() { return this.editor != null && this.editor.isActive(); };\\n        this.setEditable = function(e) {\\n            // if this connector has an editor already, or\\n            // if an editor for this connector's type is available, or\\n            // if the child declares an overrideSetEditable and it does not return false, editable is true.\\n            if (e && jsPlumb.ConnectorEditors != null && jsPlumb.ConnectorEditors[this.type] != null && (this.overrideSetEditable == null || this.overrideSetEditable())) {\\n                editable = e;\\n            } else {\\n                editable = false;\\n            }\\n            return editable;\\n        };\\n        this.isEditable = function() { return editable; };\\n\\n        /**\\n         * Function: findSegmentForPoint\\n         * Returns the segment that is closest to the given [x,y],\\n         * null if nothing found.  This function returns a JS\\n         * object with:\\n         *\\n         *   d   -   distance from segment\\n         *   l   -   proportional location in segment\\n         *   x   -   x point on the segment\\n         *   y   -   y point on the segment\\n         *   s   -   the segment itself.\\n         */\\n        this.findSegmentForPoint = function (x, y) {\\n            var out = { d: Infinity, s: null, x: null, y: null, l: null };\\n            for (var i = 0; i < segments.length; i++) {\\n                var _s = segments[i].findClosestPointOnPath(x, y);\\n                if (_s.d < out.d) {\\n                    out.d = _s.d;\\n                    out.l = _s.l;\\n                    out.x = _s.x;\\n                    out.y = _s.y;\\n                    out.s = segments[i];\\n                    out.x1 = _s.x1;\\n                    out.x2 = _s.x2;\\n                    out.y1 = _s.y1;\\n                    out.y2 = _s.y2;\\n                    out.index = i;\\n                }\\n            }\\n\\n            return out;\\n        };\\n\\n        var _updateSegmentProportions = function () {\\n                var curLoc = 0;\\n                for (var i = 0; i < segments.length; i++) {\\n                    var sl = segments[i].getLength();\\n                    segmentProportionalLengths[i] = sl / totalLength;\\n                    segmentProportions[i] = [curLoc, (curLoc += (sl / totalLength)) ];\\n                }\\n            },\\n\\n            /**\\n             * returns [segment, proportion of travel in segment, segment index] for the segment\\n             * that contains the point which is 'location' distance along the entire path, where\\n             * 'location' is a decimal between 0 and 1 inclusive. in this connector type, paths\\n             * are made up of a list of segments, each of which contributes some fraction to\\n             * the total length.\\n             * From 1.3.10 this also supports the 'absolute' property, which lets us specify a location\\n             * as the absolute distance in pixels, rather than a proportion of the total path.\\n             */\\n            _findSegmentForLocation = function (location, absolute) {\\n                if (absolute) {\\n                    location = location > 0 ? location / totalLength : (totalLength + location) / totalLength;\\n                }\\n                var idx = segmentProportions.length - 1, inSegmentProportion = 1;\\n                for (var i = 0; i < segmentProportions.length; i++) {\\n                    if (segmentProportions[i][1] >= location) {\\n                        idx = i;\\n                        // todo is this correct for all connector path types?\\n                        inSegmentProportion = location == 1 ? 1 : location === 0 ? 0 : (location - segmentProportions[i][0]) / segmentProportionalLengths[i];\\n                        break;\\n                    }\\n                }\\n                return { segment: segments[idx], proportion: inSegmentProportion, index: idx };\\n            },\\n            _addSegment = function (conn, type, params) {\\n                if (params.x1 == params.x2 && params.y1 == params.y2) return;\\n                var s = new _jp.Segments[type](params);\\n                segments.push(s);\\n                totalLength += s.getLength();\\n                conn.updateBounds(s);\\n            },\\n            _clearSegments = function () {\\n                totalLength = segments.length = segmentProportions.length = segmentProportionalLengths.length = 0;\\n            };\\n\\n        this.setSegments = function (_segs) {\\n            userProvidedSegments = [];\\n            totalLength = 0;\\n            for (var i = 0; i < _segs.length; i++) {\\n                userProvidedSegments.push(_segs[i]);\\n                totalLength += _segs[i].getLength();\\n            }\\n        };\\n\\n        this.getLength = function() {\\n            return totalLength;\\n        };\\n\\n        var _prepareCompute = function (params) {\\n            this.lineWidth = params.lineWidth;\\n            var segment = _jg.quadrant(params.sourcePos, params.targetPos),\\n                swapX = params.targetPos[0] < params.sourcePos[0],\\n                swapY = params.targetPos[1] < params.sourcePos[1],\\n                lw = params.lineWidth || 1,\\n                so = params.sourceEndpoint.anchor.getOrientation(params.sourceEndpoint),\\n                to = params.targetEndpoint.anchor.getOrientation(params.targetEndpoint),\\n                x = swapX ? params.targetPos[0] : params.sourcePos[0],\\n                y = swapY ? params.targetPos[1] : params.sourcePos[1],\\n                w = Math.abs(params.targetPos[0] - params.sourcePos[0]),\\n                h = Math.abs(params.targetPos[1] - params.sourcePos[1]);\\n\\n            // if either anchor does not have an orientation set, we derive one from their relative\\n            // positions.  we fix the axis to be the one in which the two elements are further apart, and\\n            // point each anchor at the other element.  this is also used when dragging a new connection.\\n            if (so[0] === 0 && so[1] === 0 || to[0] === 0 && to[1] === 0) {\\n                var index = w > h ? 0 : 1, oIndex = [1, 0][index];\\n                so = [];\\n                to = [];\\n                so[index] = params.sourcePos[index] > params.targetPos[index] ? -1 : 1;\\n                to[index] = params.sourcePos[index] > params.targetPos[index] ? 1 : -1;\\n                so[oIndex] = 0;\\n                to[oIndex] = 0;\\n            }\\n\\n            var sx = swapX ? w + (sourceGap * so[0]) : sourceGap * so[0],\\n                sy = swapY ? h + (sourceGap * so[1]) : sourceGap * so[1],\\n                tx = swapX ? targetGap * to[0] : w + (targetGap * to[0]),\\n                ty = swapY ? targetGap * to[1] : h + (targetGap * to[1]),\\n                oProduct = ((so[0] * to[0]) + (so[1] * to[1]));\\n\\n            var result = {\\n                sx: sx, sy: sy, tx: tx, ty: ty, lw: lw,\\n                xSpan: Math.abs(tx - sx),\\n                ySpan: Math.abs(ty - sy),\\n                mx: (sx + tx) / 2,\\n                my: (sy + ty) / 2,\\n                so: so, to: to, x: x, y: y, w: w, h: h,\\n                segment: segment,\\n                startStubX: sx + (so[0] * sourceStub),\\n                startStubY: sy + (so[1] * sourceStub),\\n                endStubX: tx + (to[0] * targetStub),\\n                endStubY: ty + (to[1] * targetStub),\\n                isXGreaterThanStubTimes2: Math.abs(sx - tx) > (sourceStub + targetStub),\\n                isYGreaterThanStubTimes2: Math.abs(sy - ty) > (sourceStub + targetStub),\\n                opposite: oProduct == -1,\\n                perpendicular: oProduct === 0,\\n                orthogonal: oProduct == 1,\\n                sourceAxis: so[0] === 0 ? \\\"y\\\" : \\\"x\\\",\\n                points: [x, y, w, h, sx, sy, tx, ty ]\\n            };\\n            result.anchorOrientation = result.opposite ? \\\"opposite\\\" : result.orthogonal ? \\\"orthogonal\\\" : \\\"perpendicular\\\";\\n            return result;\\n        };\\n\\n        this.getSegments = function () {\\n            return segments;\\n        };\\n\\n        this.updateBounds = function (segment) {\\n            var segBounds = segment.getBounds();\\n            this.bounds.minX = Math.min(this.bounds.minX, segBounds.minX);\\n            this.bounds.maxX = Math.max(this.bounds.maxX, segBounds.maxX);\\n            this.bounds.minY = Math.min(this.bounds.minY, segBounds.minY);\\n            this.bounds.maxY = Math.max(this.bounds.maxY, segBounds.maxY);\\n        };\\n\\n        var dumpSegmentsToConsole = function () {\\n            console.log(\\\"SEGMENTS:\\\");\\n            for (var i = 0; i < segments.length; i++) {\\n                console.log(segments[i].type, segments[i].getLength(), segmentProportions[i]);\\n            }\\n        };\\n\\n        this.pointOnPath = function (location, absolute) {\\n            var seg = _findSegmentForLocation(location, absolute);\\n            return seg.segment && seg.segment.pointOnPath(seg.proportion, false) || [0, 0];\\n        };\\n\\n        this.gradientAtPoint = function (location, absolute) {\\n            var seg = _findSegmentForLocation(location, absolute);\\n            return seg.segment && seg.segment.gradientAtPoint(seg.proportion, false) || 0;\\n        };\\n\\n        this.pointAlongPathFrom = function (location, distance, absolute) {\\n            var seg = _findSegmentForLocation(location, absolute);\\n            // TODO what happens if this crosses to the next segment?\\n            return seg.segment && seg.segment.pointAlongPathFrom(seg.proportion, distance, false) || [0, 0];\\n        };\\n\\n        this.compute = function (params) {\\n            paintInfo = _prepareCompute.call(this, params);\\n\\n            _clearSegments();\\n            this._compute(paintInfo, params);\\n            this.x = paintInfo.points[0];\\n            this.y = paintInfo.points[1];\\n            this.w = paintInfo.points[2];\\n            this.h = paintInfo.points[3];\\n            this.segment = paintInfo.segment;\\n            _updateSegmentProportions();\\n        };\\n\\n        return {\\n            addSegment: _addSegment,\\n            prepareCompute: _prepareCompute,\\n            sourceStub: sourceStub,\\n            targetStub: targetStub,\\n            maxStub: Math.max(sourceStub, targetStub),\\n            sourceGap: sourceGap,\\n            targetGap: targetGap,\\n            maxGap: Math.max(sourceGap, targetGap),\\n            setGeometry:_setGeometry,\\n            getGeometry:_getGeometry\\n        };\\n    };\\n    _ju.extend(_jp.Connectors.AbstractConnector, AbstractComponent);\\n\\n    /**\\n     * Class: Connectors.Straight\\n     * The Straight connector draws a simple straight line between the two anchor points.  It does not have any constructor parameters.\\n     */\\n    var Straight = _jp.Connectors.Straight = function () {\\n        this.type = \\\"Straight\\\";\\n        var _super = _jp.Connectors.AbstractConnector.apply(this, arguments);\\n\\n        this._compute = function (paintInfo, _) {\\n            _super.addSegment(this, \\\"Straight\\\", {x1: paintInfo.sx, y1: paintInfo.sy, x2: paintInfo.startStubX, y2: paintInfo.startStubY});\\n            _super.addSegment(this, \\\"Straight\\\", {x1: paintInfo.startStubX, y1: paintInfo.startStubY, x2: paintInfo.endStubX, y2: paintInfo.endStubY});\\n            _super.addSegment(this, \\\"Straight\\\", {x1: paintInfo.endStubX, y1: paintInfo.endStubY, x2: paintInfo.tx, y2: paintInfo.ty});\\n        };\\n    };\\n    _ju.extend(_jp.Connectors.Straight, _jp.Connectors.AbstractConnector);\\n    _jp.registerConnectorType(Straight, \\\"Straight\\\");\\n\\n\\n    // ********************************* END OF CONNECTOR TYPES *******************************************************************\\n\\n    // ********************************* ENDPOINT TYPES *******************************************************************\\n\\n    _jp.Endpoints.AbstractEndpoint = function (params) {\\n        AbstractComponent.apply(this, arguments);\\n        var compute = this.compute = function (anchorPoint, orientation, endpointStyle, connectorPaintStyle) {\\n            var out = this._compute.apply(this, arguments);\\n            this.x = out[0];\\n            this.y = out[1];\\n            this.w = out[2];\\n            this.h = out[3];\\n            this.bounds.minX = this.x;\\n            this.bounds.minY = this.y;\\n            this.bounds.maxX = this.x + this.w;\\n            this.bounds.maxY = this.y + this.h;\\n            return out;\\n        };\\n        return {\\n            compute: compute,\\n            cssClass: params.cssClass\\n        };\\n    };\\n    _ju.extend(_jp.Endpoints.AbstractEndpoint, AbstractComponent);\\n\\n    /**\\n     * Class: Endpoints.Dot\\n     * A round endpoint, with default radius 10 pixels.\\n     */\\n\\n    /**\\n     * Function: Constructor\\n     *\\n     * Parameters:\\n     *\\n     *    radius    -    radius of the endpoint.  defaults to 10 pixels.\\n     */\\n    _jp.Endpoints.Dot = function (params) {\\n        this.type = \\\"Dot\\\";\\n        var _super = _jp.Endpoints.AbstractEndpoint.apply(this, arguments);\\n        params = params || {};\\n        this.radius = params.radius || 10;\\n        this.defaultOffset = 0.5 * this.radius;\\n        this.defaultInnerRadius = this.radius / 3;\\n\\n        this._compute = function (anchorPoint, orientation, endpointStyle, connectorPaintStyle) {\\n            this.radius = endpointStyle.radius || this.radius;\\n            var x = anchorPoint[0] - this.radius,\\n                y = anchorPoint[1] - this.radius,\\n                w = this.radius * 2,\\n                h = this.radius * 2;\\n\\n            if (endpointStyle.strokeStyle) {\\n                var lw = endpointStyle.lineWidth || 1;\\n                x -= lw;\\n                y -= lw;\\n                w += (lw * 2);\\n                h += (lw * 2);\\n            }\\n            return [ x, y, w, h, this.radius ];\\n        };\\n    };\\n    _ju.extend(_jp.Endpoints.Dot, _jp.Endpoints.AbstractEndpoint);\\n\\n    _jp.Endpoints.Rectangle = function (params) {\\n        this.type = \\\"Rectangle\\\";\\n        var _super = _jp.Endpoints.AbstractEndpoint.apply(this, arguments);\\n        params = params || {};\\n        this.width = params.width || 20;\\n        this.height = params.height || 20;\\n\\n        this._compute = function (anchorPoint, orientation, endpointStyle, connectorPaintStyle) {\\n            var width = endpointStyle.width || this.width,\\n                height = endpointStyle.height || this.height,\\n                x = anchorPoint[0] - (width / 2),\\n                y = anchorPoint[1] - (height / 2);\\n\\n            return [ x, y, width, height];\\n        };\\n    };\\n    _ju.extend(_jp.Endpoints.Rectangle, _jp.Endpoints.AbstractEndpoint);\\n\\n    var DOMElementEndpoint = function (params) {\\n        _jp.jsPlumbUIComponent.apply(this, arguments);\\n        this._jsPlumb.displayElements = [];\\n    };\\n    _ju.extend(DOMElementEndpoint, _jp.jsPlumbUIComponent, {\\n        getDisplayElements: function () {\\n            return this._jsPlumb.displayElements;\\n        },\\n        appendDisplayElement: function (el) {\\n            this._jsPlumb.displayElements.push(el);\\n        }\\n    });\\n\\n    /**\\n     * Class: Endpoints.Image\\n     * Draws an image as the Endpoint.\\n     */\\n    /**\\n     * Function: Constructor\\n     *\\n     * Parameters:\\n     *\\n     *    src    -    location of the image to use.\\n\\n     TODO: multiple references to self. not sure quite how to get rid of them entirely. perhaps self = null in the cleanup\\n     function will suffice\\n\\n     TODO this class still might leak memory.\\n\\n     */\\n    _jp.Endpoints.Image = function (params) {\\n\\n        this.type = \\\"Image\\\";\\n        DOMElementEndpoint.apply(this, arguments);\\n        _jp.Endpoints.AbstractEndpoint.apply(this, arguments);\\n\\n        var _onload = params.onload,\\n            src = params.src || params.url,\\n            clazz = params.cssClass ? \\\" \\\" + params.cssClass : \\\"\\\";\\n\\n        this._jsPlumb.img = new Image();\\n        this._jsPlumb.ready = false;\\n        this._jsPlumb.initialized = false;\\n        this._jsPlumb.deleted = false;\\n        this._jsPlumb.widthToUse = params.width;\\n        this._jsPlumb.heightToUse = params.height;\\n        this._jsPlumb.endpoint = params.endpoint;\\n\\n        this._jsPlumb.img.onload = function () {\\n            if (this._jsPlumb != null) {\\n                this._jsPlumb.ready = true;\\n                this._jsPlumb.widthToUse = this._jsPlumb.widthToUse || this._jsPlumb.img.width;\\n                this._jsPlumb.heightToUse = this._jsPlumb.heightToUse || this._jsPlumb.img.height;\\n                if (_onload) {\\n                    _onload(this);\\n                }\\n            }\\n        }.bind(this);\\n\\n        /*\\n         Function: setImage\\n         Sets the Image to use in this Endpoint.\\n\\n         Parameters:\\n         img         -   may be a URL or an Image object\\n         onload      -   optional; a callback to execute once the image has loaded.\\n         */\\n        this._jsPlumb.endpoint.setImage = function (_img, onload) {\\n            var s = _img.constructor == String ? _img : _img.src;\\n            _onload = onload;\\n            this._jsPlumb.img.src = s;\\n\\n            if (this.canvas != null)\\n                this.canvas.setAttribute(\\\"src\\\", this._jsPlumb.img.src);\\n        }.bind(this);\\n\\n        this._jsPlumb.endpoint.setImage(src, _onload);\\n        this._compute = function (anchorPoint, orientation, endpointStyle, connectorPaintStyle) {\\n            this.anchorPoint = anchorPoint;\\n            if (this._jsPlumb.ready) return [anchorPoint[0] - this._jsPlumb.widthToUse / 2, anchorPoint[1] - this._jsPlumb.heightToUse / 2,\\n                this._jsPlumb.widthToUse, this._jsPlumb.heightToUse];\\n            else return [0, 0, 0, 0];\\n        };\\n\\n        this.canvas = jsPlumb.createElement(\\\"img\\\", {\\n            position:\\\"absolute\\\",\\n            margin:0,\\n            padding:0,\\n            outline:0\\n        }, this._jsPlumb.instance.endpointClass + clazz);\\n\\n        if (this._jsPlumb.widthToUse) this.canvas.setAttribute(\\\"width\\\", this._jsPlumb.widthToUse);\\n        if (this._jsPlumb.heightToUse) this.canvas.setAttribute(\\\"height\\\", this._jsPlumb.heightToUse);\\n        this._jsPlumb.instance.appendElement(this.canvas);\\n\\n        this.actuallyPaint = function (d, style, anchor) {\\n            if (!this._jsPlumb.deleted) {\\n                if (!this._jsPlumb.initialized) {\\n                    this.canvas.setAttribute(\\\"src\\\", this._jsPlumb.img.src);\\n                    this.appendDisplayElement(this.canvas);\\n                    this._jsPlumb.initialized = true;\\n                }\\n                var x = this.anchorPoint[0] - (this._jsPlumb.widthToUse / 2),\\n                    y = this.anchorPoint[1] - (this._jsPlumb.heightToUse / 2);\\n                _ju.sizeElement(this.canvas, x, y, this._jsPlumb.widthToUse, this._jsPlumb.heightToUse);\\n            }\\n        };\\n\\n        this.paint = function (style, anchor) {\\n            if (this._jsPlumb != null) {  // may have been deleted\\n                if (this._jsPlumb.ready) {\\n                    this.actuallyPaint(style, anchor);\\n                }\\n                else {\\n                    root.setTimeout(function () {\\n                        this.paint(style, anchor);\\n                    }.bind(this), 200);\\n                }\\n            }\\n        };\\n    };\\n    _ju.extend(_jp.Endpoints.Image, [ DOMElementEndpoint, _jp.Endpoints.AbstractEndpoint ], {\\n        cleanup: function (force) {\\n            if (force) {\\n                this._jsPlumb.deleted = true;\\n                if (this.canvas) this.canvas.parentNode.removeChild(this.canvas);\\n                this.canvas = null;\\n            }\\n        }\\n    });\\n\\n    /*\\n     * Class: Endpoints.Blank\\n     * An Endpoint that paints nothing (visible) on the screen.  Supports cssClass and hoverClass parameters like all Endpoints.\\n     */\\n    _jp.Endpoints.Blank = function (params) {\\n        var _super = _jp.Endpoints.AbstractEndpoint.apply(this, arguments);\\n        this.type = \\\"Blank\\\";\\n        DOMElementEndpoint.apply(this, arguments);\\n        this._compute = function (anchorPoint, orientation, endpointStyle, connectorPaintStyle) {\\n            return [anchorPoint[0], anchorPoint[1], 10, 0];\\n        };\\n\\n        var clazz = params.cssClass ? \\\" \\\" + params.cssClass : \\\"\\\";\\n\\n        this.canvas = jsPlumb.createElement(\\\"div\\\", {\\n            display: \\\"block\\\",\\n            width: \\\"1px\\\",\\n            height: \\\"1px\\\",\\n            background: \\\"transparent\\\",\\n            position: \\\"absolute\\\"\\n        }, this._jsPlumb.instance.endpointClass + clazz);\\n\\n        this._jsPlumb.instance.appendElement(this.canvas);\\n\\n        this.paint = function (style, anchor) {\\n            _ju.sizeElement(this.canvas, this.x, this.y, this.w, this.h);\\n        };\\n    };\\n    _ju.extend(_jp.Endpoints.Blank, [_jp.Endpoints.AbstractEndpoint, DOMElementEndpoint], {\\n        cleanup: function () {\\n            if (this.canvas && this.canvas.parentNode) {\\n                this.canvas.parentNode.removeChild(this.canvas);\\n            }\\n        }\\n    });\\n\\n    /*\\n     * Class: Endpoints.Triangle\\n     * A triangular Endpoint.\\n     */\\n    /*\\n     * Function: Constructor\\n     *\\n     * Parameters:\\n     *\\n     * \\twidth\\t-\\twidth of the triangle's base.  defaults to 55 pixels.\\n     * \\theight\\t-\\theight of the triangle from base to apex.  defaults to 55 pixels.\\n     */\\n    _jp.Endpoints.Triangle = function (params) {\\n        this.type = \\\"Triangle\\\";\\n        _jp.Endpoints.AbstractEndpoint.apply(this, arguments);\\n        params = params || {  };\\n        params.width = params.width || 55;\\n        params.height = params.height || 55;\\n        this.width = params.width;\\n        this.height = params.height;\\n        this._compute = function (anchorPoint, orientation, endpointStyle, connectorPaintStyle) {\\n            var width = endpointStyle.width || self.width,\\n                height = endpointStyle.height || self.height,\\n                x = anchorPoint[0] - (width / 2),\\n                y = anchorPoint[1] - (height / 2);\\n            return [ x, y, width, height ];\\n        };\\n    };\\n// ********************************* END OF ENDPOINT TYPES *******************************************************************\\n\\n\\n// ********************************* OVERLAY DEFINITIONS ***********************************************************************    \\n\\n    var AbstractOverlay = _jp.Overlays.AbstractOverlay = function (params) {\\n        this.visible = true;\\n        this.isAppendedAtTopLevel = true;\\n        this.component = params.component;\\n        this.loc = params.location == null ? 0.5 : params.location;\\n        this.endpointLoc = params.endpointLocation == null ? [ 0.5, 0.5] : params.endpointLocation;\\n        this.visible = params.visible !== false;\\n    };\\n    AbstractOverlay.prototype = {\\n        cleanup: function (force) {\\n            if (force) {\\n                this.component = null;\\n                this.canvas = null;\\n                this.endpointLoc = null;\\n            }\\n        },\\n        reattach:function(instance) {\\n\\n        },\\n        setVisible: function (val) {\\n            this.visible = val;\\n            this.component.repaint();\\n        },\\n        isVisible: function () {\\n            return this.visible;\\n        },\\n        hide: function () {\\n            this.setVisible(false);\\n        },\\n        show: function () {\\n            this.setVisible(true);\\n        },\\n        incrementLocation: function (amount) {\\n            this.loc += amount;\\n            this.component.repaint();\\n        },\\n        setLocation: function (l) {\\n            this.loc = l;\\n            this.component.repaint();\\n        },\\n        getLocation: function () {\\n            return this.loc;\\n        },\\n        updateFrom:function() { }\\n    };\\n\\n\\n    /*\\n     * Class: Overlays.Arrow\\n     *\\n     * An arrow overlay, defined by four points: the head, the two sides of the tail, and a 'foldback' point at some distance along the length\\n     * of the arrow that lines from each tail point converge into.  The foldback point is defined using a decimal that indicates some fraction\\n     * of the length of the arrow and has a default value of 0.623.  A foldback point value of 1 would mean that the arrow had a straight line\\n     * across the tail.\\n     */\\n    /*\\n     * Function: Constructor\\n     *\\n     * Parameters:\\n     *\\n     * \\tlength - distance in pixels from head to tail baseline. default 20.\\n     * \\twidth - width in pixels of the tail baseline. default 20.\\n     * \\tfillStyle - style to use when filling the arrow.  defaults to \\\"black\\\".\\n     * \\tstrokeStyle - style to use when stroking the arrow. defaults to null, which means the arrow is not stroked.\\n     * \\tlineWidth - line width to use when stroking the arrow. defaults to 1, but only used if strokeStyle is not null.\\n     * \\tfoldback - distance (as a decimal from 0 to 1 inclusive) along the length of the arrow marking the point the tail points should fold back to.  defaults to 0.623.\\n     * \\tlocation - distance (as a decimal from 0 to 1 inclusive) marking where the arrow should sit on the connector. defaults to 0.5.\\n     * \\tdirection - indicates the direction the arrow points in. valid values are -1 and 1; 1 is default.\\n     */\\n    _jp.Overlays.Arrow = function (params) {\\n        this.type = \\\"Arrow\\\";\\n        AbstractOverlay.apply(this, arguments);\\n        this.isAppendedAtTopLevel = false;\\n        params = params || {};\\n\\n        this.length = params.length || 20;\\n        this.width = params.width || 20;\\n        this.id = params.id;\\n        var direction = (params.direction || 1) < 0 ? -1 : 1,\\n            paintStyle = params.paintStyle || { lineWidth: 1 },\\n        // how far along the arrow the lines folding back in come to. default is 62.3%.\\n            foldback = params.foldback || 0.623;\\n\\n        this.computeMaxSize = function () {\\n            return self.width * 1.5;\\n        };\\n\\n        this.elementCreated = function(p, component) {\\n            this.path = p;\\n            if (params.events) {\\n                for (var i in params.events) {\\n                    jsPlumb.on(p, i, params.events[i]);\\n                }\\n            }\\n        };\\n\\n        this.draw = function (component, currentConnectionPaintStyle) {\\n\\n            var hxy, mid, txy, tail, cxy;\\n            if (component.pointAlongPathFrom) {\\n\\n                if (_ju.isString(this.loc) || this.loc > 1 || this.loc < 0) {\\n                    var l = parseInt(this.loc, 10),\\n                        fromLoc = this.loc < 0 ? 1 : 0;\\n                    hxy = component.pointAlongPathFrom(fromLoc, l, false);\\n                    mid = component.pointAlongPathFrom(fromLoc, l - (direction * this.length / 2), false);\\n                    txy = _jg.pointOnLine(hxy, mid, this.length);\\n                }\\n                else if (this.loc == 1) {\\n                    hxy = component.pointOnPath(this.loc);\\n                    mid = component.pointAlongPathFrom(this.loc, -(this.length));\\n                    txy = _jg.pointOnLine(hxy, mid, this.length);\\n\\n                    if (direction == -1) {\\n                        var _ = txy;\\n                        txy = hxy;\\n                        hxy = _;\\n                    }\\n                }\\n                else if (this.loc === 0) {\\n                    txy = component.pointOnPath(this.loc);\\n                    mid = component.pointAlongPathFrom(this.loc, this.length);\\n                    hxy = _jg.pointOnLine(txy, mid, this.length);\\n                    if (direction == -1) {\\n                        var __ = txy;\\n                        txy = hxy;\\n                        hxy = __;\\n                    }\\n                }\\n                else {\\n                    hxy = component.pointAlongPathFrom(this.loc, direction * this.length / 2);\\n                    mid = component.pointOnPath(this.loc);\\n                    txy = _jg.pointOnLine(hxy, mid, this.length);\\n                }\\n\\n                tail = _jg.perpendicularLineTo(hxy, txy, this.width);\\n                cxy = _jg.pointOnLine(hxy, txy, foldback * this.length);\\n\\n                var d = { hxy: hxy, tail: tail, cxy: cxy },\\n                    strokeStyle = paintStyle.strokeStyle || currentConnectionPaintStyle.strokeStyle,\\n                    fillStyle = paintStyle.fillStyle || currentConnectionPaintStyle.strokeStyle,\\n                    lineWidth = paintStyle.lineWidth || currentConnectionPaintStyle.lineWidth;\\n\\n                return {\\n                    component: component,\\n                    d: d,\\n                    lineWidth: lineWidth,\\n                    strokeStyle: strokeStyle,\\n                    fillStyle: fillStyle,\\n                    minX: Math.min(hxy.x, tail[0].x, tail[1].x),\\n                    maxX: Math.max(hxy.x, tail[0].x, tail[1].x),\\n                    minY: Math.min(hxy.y, tail[0].y, tail[1].y),\\n                    maxY: Math.max(hxy.y, tail[0].y, tail[1].y)\\n                };\\n            }\\n            else return {component: component, minX: 0, maxX: 0, minY: 0, maxY: 0};\\n        };\\n    };\\n    _ju.extend(_jp.Overlays.Arrow, AbstractOverlay, {\\n        updateFrom:function(d) {\\n            this.length = d.length || this.length;\\n            this.width = d.width|| this.width;\\n            this.direction = d.direction != null ? d.direction : this.direction;\\n            this.foldback = d.foldback|| this.foldback;\\n        }\\n    });\\n\\n    /*\\n     * Class: Overlays.PlainArrow\\n     *\\n     * A basic arrow.  This is in fact just one instance of the more generic case in which the tail folds back on itself to some\\n     * point along the length of the arrow: in this case, that foldback point is the full length of the arrow.  so it just does\\n     * a 'call' to Arrow with foldback set appropriately.\\n     */\\n    /*\\n     * Function: Constructor\\n     * See <Overlays.Arrow> for allowed parameters for this overlay.\\n     */\\n    _jp.Overlays.PlainArrow = function (params) {\\n        params = params || {};\\n        var p = _jp.extend(params, {foldback: 1});\\n        _jp.Overlays.Arrow.call(this, p);\\n        this.type = \\\"PlainArrow\\\";\\n    };\\n    _ju.extend(_jp.Overlays.PlainArrow, _jp.Overlays.Arrow);\\n\\n    /*\\n     * Class: Overlays.Diamond\\n     * \\n     * A diamond. Like PlainArrow, this is a concrete case of the more generic case of the tail points converging on some point...it just\\n     * happens that in this case, that point is greater than the length of the the arrow.\\n     *\\n     *      this could probably do with some help with positioning...due to the way it reuses the Arrow paint code, what Arrow thinks is the\\n     *      center is actually 1/4 of the way along for this guy.  but we don't have any knowledge of pixels at this point, so we're kind of\\n     *      stuck when it comes to helping out the Arrow class. possibly we could pass in a 'transpose' parameter or something. the value\\n     *      would be -l/4 in this case - move along one quarter of the total length.\\n     */\\n    /*\\n     * Function: Constructor\\n     * See <Overlays.Arrow> for allowed parameters for this overlay.\\n     */\\n    _jp.Overlays.Diamond = function (params) {\\n        params = params || {};\\n        var l = params.length || 40,\\n            p = jsPlumb.extend(params, {length: l / 2, foldback: 2});\\n        _jp.Overlays.Arrow.call(this, p);\\n        this.type = \\\"Diamond\\\";\\n    };\\n    _ju.extend(_jp.Overlays.Diamond, _jp.Overlays.Arrow);\\n\\n    var _getDimensions = function (component, forceRefresh) {\\n        if (component._jsPlumb.cachedDimensions == null || forceRefresh)\\n            component._jsPlumb.cachedDimensions = component.getDimensions();\\n        return component._jsPlumb.cachedDimensions;\\n    };\\n\\n    // abstract superclass for overlays that add an element to the DOM.\\n    var AbstractDOMOverlay = function (params) {\\n        _jp.jsPlumbUIComponent.apply(this, arguments);\\n        AbstractOverlay.apply(this, arguments);\\n\\n        // hand off fired events to associated component.\\n        var _f = this.fire;\\n        this.fire = function () {\\n            _f.apply(this, arguments);\\n            if (this.component) this.component.fire.apply(this.component, arguments);\\n        };\\n\\n        this.detached=false;\\n        this.id = params.id;\\n        this._jsPlumb.div = null;\\n        this._jsPlumb.initialised = false;\\n        this._jsPlumb.component = params.component;\\n        this._jsPlumb.cachedDimensions = null;\\n        this._jsPlumb.create = params.create;\\n        this._jsPlumb.initiallyInvisible = params.visible === false;\\n\\n        this.getElement = function () {\\n            if (this._jsPlumb.div == null) {\\n                var div = this._jsPlumb.div = jsPlumb.getElement(this._jsPlumb.create(this._jsPlumb.component));\\n                div.style.position = \\\"absolute\\\";\\n                div.className = this._jsPlumb.instance.overlayClass + \\\" \\\" +\\n                    (this.cssClass ? this.cssClass :\\n                        params.cssClass ? params.cssClass : \\\"\\\");\\n                this._jsPlumb.instance.appendElement(div);\\n                this._jsPlumb.instance.getId(div);\\n                this.canvas = div;\\n\\n                // in IE the top left corner is what it placed at the desired location.  This will not\\n                // be fixed. IE8 is not going to be supported for much longer.\\n                var ts = \\\"translate(-50%, -50%)\\\";\\n                div.style.webkitTransform = ts;\\n                div.style.mozTransform = ts;\\n                div.style.msTransform = ts;\\n                div.style.oTransform = ts;\\n                div.style.transform = ts;\\n\\n                // write the related component into the created element\\n                div._jsPlumb = this;\\n\\n                if (params.visible === false)\\n                    div.style.display = \\\"none\\\";\\n            }\\n            return this._jsPlumb.div;\\n        };\\n\\n        this.draw = function (component, currentConnectionPaintStyle, absolutePosition) {\\n            var td = _getDimensions(this);\\n            if (td != null && td.length == 2) {\\n                var cxy = { x: 0, y: 0 };\\n\\n                // absolutePosition would have been set by a call to connection.setAbsoluteOverlayPosition.\\n                if (absolutePosition) {\\n                    cxy = { x: absolutePosition[0], y: absolutePosition[1] };\\n                }\\n                else if (component.pointOnPath) {\\n                    var loc = this.loc, absolute = false;\\n                    if (_ju.isString(this.loc) || this.loc < 0 || this.loc > 1) {\\n                        loc = parseInt(this.loc, 10);\\n                        absolute = true;\\n                    }\\n                    cxy = component.pointOnPath(loc, absolute);  // a connection\\n                }\\n                else {\\n                    var locToUse = this.loc.constructor == Array ? this.loc : this.endpointLoc;\\n                    cxy = { x: locToUse[0] * component.w,\\n                        y: locToUse[1] * component.h };\\n                }\\n\\n                var minx = cxy.x - (td[0] / 2),\\n                    miny = cxy.y - (td[1] / 2);\\n\\n                return {\\n                    component: component,\\n                    d: { minx: minx, miny: miny, td: td, cxy: cxy },\\n                    minX: minx,\\n                    maxX: minx + td[0],\\n                    minY: miny,\\n                    maxY: miny + td[1]\\n                };\\n            }\\n            else return {minX: 0, maxX: 0, minY: 0, maxY: 0};\\n        };\\n    };\\n    _ju.extend(AbstractDOMOverlay, [_jp.jsPlumbUIComponent, AbstractOverlay], {\\n        getDimensions: function () {\\n            return [1,1];\\n        },\\n        setVisible: function (state) {\\n            if (this._jsPlumb.div) {\\n                this._jsPlumb.div.style.display = state ? \\\"block\\\" : \\\"none\\\";\\n                // if initially invisible, dimensions are 0,0 and never get updated\\n                if (state && this._jsPlumb.initiallyInvisible) {\\n                    _getDimensions(this, true);\\n                    this.component.repaint();\\n                    this._jsPlumb.initiallyInvisible = false;\\n                }\\n            }\\n        },\\n        /*\\n         * Function: clearCachedDimensions\\n         * Clears the cached dimensions for the label. As a performance enhancement, label dimensions are\\n         * cached from 1.3.12 onwards. The cache is cleared when you change the label text, of course, but\\n         * there are other reasons why the text dimensions might change - if you make a change through CSS, for\\n         * example, you might change the font size.  in that case you should explicitly call this method.\\n         */\\n        clearCachedDimensions: function () {\\n            this._jsPlumb.cachedDimensions = null;\\n        },\\n        cleanup: function (force) {\\n            if (force) {\\n                if (this._jsPlumb.div != null) {\\n                    this._jsPlumb.div._jsPlumb = null;\\n                    this._jsPlumb.instance.removeElement(this._jsPlumb.div);\\n                }\\n            }\\n            else {\\n                // if not a forced cleanup, just detach child from parent for now.\\n                if (this._jsPlumb && this._jsPlumb.div && this._jsPlumb.div.parentNode)\\n                    this._jsPlumb.div.parentNode.removeChild(this._jsPlumb.div);\\n                this.detached = true;\\n            }\\n\\n        },\\n        reattach:function(instance) {\\n            if (this._jsPlumb.div != null) instance.getContainer().appendChild(this._jsPlumb.div);\\n            this.detached = false;\\n        },\\n        computeMaxSize: function () {\\n            var td = _getDimensions(this);\\n            return Math.max(td[0], td[1]);\\n        },\\n        paint: function (p, containerExtents) {\\n            if (!this._jsPlumb.initialised) {\\n                this.getElement();\\n                p.component.appendDisplayElement(this._jsPlumb.div);\\n                this._jsPlumb.initialised = true;\\n                if (this.detached) this._jsPlumb.div.parentNode.removeChild(this._jsPlumb.div);\\n            }\\n            this._jsPlumb.div.style.left = (p.component.x + p.d.minx) + \\\"px\\\";\\n            this._jsPlumb.div.style.top = (p.component.y + p.d.miny) + \\\"px\\\";\\n        }\\n    });\\n\\n    /*\\n     * Class: Overlays.Custom\\n     * A Custom overlay. You supply a 'create' function which returns some DOM element, and jsPlumb positions it.\\n     * The 'create' function is passed a Connection or Endpoint.\\n     */\\n    /*\\n     * Function: Constructor\\n     * \\n     * Parameters:\\n     * \\tcreate - function for jsPlumb to call that returns a DOM element.\\n     * \\tlocation - distance (as a decimal from 0 to 1 inclusive) marking where the label should sit on the connector. defaults to 0.5.\\n     * \\tid - optional id to use for later retrieval of this overlay.\\n     * \\t\\n     */\\n    _jp.Overlays.Custom = function (params) {\\n        this.type = \\\"Custom\\\";\\n        AbstractDOMOverlay.apply(this, arguments);\\n    };\\n    _ju.extend(_jp.Overlays.Custom, AbstractDOMOverlay);\\n\\n    _jp.Overlays.GuideLines = function () {\\n        var self = this;\\n        self.length = 50;\\n        self.lineWidth = 5;\\n        this.type = \\\"GuideLines\\\";\\n        AbstractOverlay.apply(this, arguments);\\n        _jp.jsPlumbUIComponent.apply(this, arguments);\\n        this.draw = function (connector, currentConnectionPaintStyle) {\\n\\n            var head = connector.pointAlongPathFrom(self.loc, self.length / 2),\\n                mid = connector.pointOnPath(self.loc),\\n                tail = _jg.pointOnLine(head, mid, self.length),\\n                tailLine = _jg.perpendicularLineTo(head, tail, 40),\\n                headLine = _jg.perpendicularLineTo(tail, head, 20);\\n\\n            return {\\n                connector: connector,\\n                head: head,\\n                tail: tail,\\n                headLine: headLine,\\n                tailLine: tailLine,\\n                minX: Math.min(head.x, tail.x, headLine[0].x, headLine[1].x),\\n                minY: Math.min(head.y, tail.y, headLine[0].y, headLine[1].y),\\n                maxX: Math.max(head.x, tail.x, headLine[0].x, headLine[1].x),\\n                maxY: Math.max(head.y, tail.y, headLine[0].y, headLine[1].y)\\n            };\\n        };\\n\\n        // this.cleanup = function() { };  // nothing to clean up for GuideLines\\n    };\\n\\n    /*\\n     * Class: Overlays.Label\\n\\n     */\\n    /*\\n     * Function: Constructor\\n     * \\n     * Parameters:\\n     * \\tcssClass - optional css class string to append to css class. This string is appended \\\"as-is\\\", so you can of course have multiple classes\\n     *             defined.  This parameter is preferred to using labelStyle, borderWidth and borderStyle.\\n     * \\tlabel - the label to paint.  May be a string or a function that returns a string.  Nothing will be painted if your label is null or your\\n     *         label function returns null.  empty strings _will_ be painted.\\n     * \\tlocation - distance (as a decimal from 0 to 1 inclusive) marking where the label should sit on the connector. defaults to 0.5.\\n     * \\tid - optional id to use for later retrieval of this overlay.\\n     * \\n     * \\t\\n     */\\n    _jp.Overlays.Label = function (params) {\\n        this.labelStyle = params.labelStyle;\\n\\n        var labelWidth = null, labelHeight = null, labelText = null, labelPadding = null;\\n        this.cssClass = this.labelStyle != null ? this.labelStyle.cssClass : null;\\n        var p = _jp.extend({\\n            create: function () {\\n                return jsPlumb.createElement(\\\"div\\\");\\n            }}, params);\\n        _jp.Overlays.Custom.call(this, p);\\n        this.type = \\\"Label\\\";\\n        this.label = params.label || \\\"\\\";\\n        this.labelText = null;\\n        if (this.labelStyle) {\\n            var el = this.getElement();\\n            this.labelStyle.font = this.labelStyle.font || \\\"12px sans-serif\\\";\\n            el.style.font = this.labelStyle.font;\\n            el.style.color = this.labelStyle.color || \\\"black\\\";\\n            if (this.labelStyle.fillStyle) el.style.background = this.labelStyle.fillStyle;\\n            if (this.labelStyle.borderWidth > 0) {\\n                var dStyle = this.labelStyle.borderStyle ? this.labelStyle.borderStyle : \\\"black\\\";\\n                el.style.border = this.labelStyle.borderWidth + \\\"px solid \\\" + dStyle;\\n            }\\n            if (this.labelStyle.padding) el.style.padding = this.labelStyle.padding;\\n        }\\n\\n    };\\n    _ju.extend(_jp.Overlays.Label, _jp.Overlays.Custom, {\\n        cleanup: function (force) {\\n            if (force) {\\n                this.div = null;\\n                this.label = null;\\n                this.labelText = null;\\n                this.cssClass = null;\\n                this.labelStyle = null;\\n            }\\n        },\\n        getLabel: function () {\\n            return this.label;\\n        },\\n        /*\\n         * Function: setLabel\\n         * sets the label's, um, label.  you would think i'd call this function\\n         * 'setText', but you can pass either a Function or a String to this, so\\n         * it makes more sense as 'setLabel'. This uses innerHTML on the label div, so keep\\n         * that in mind if you need escaped HTML.\\n         */\\n        setLabel: function (l) {\\n            this.label = l;\\n            this.labelText = null;\\n            this.clearCachedDimensions();\\n            this.update();\\n            this.component.repaint();\\n        },\\n        getDimensions: function () {\\n            this.update();\\n            return AbstractDOMOverlay.prototype.getDimensions.apply(this, arguments);\\n        },\\n        update: function () {\\n            if (typeof this.label == \\\"function\\\") {\\n                var lt = this.label(this);\\n                this.getElement().innerHTML = lt.replace(/\\\\r\\\\n/g, \\\"<br/>\\\");\\n            }\\n            else {\\n                if (this.labelText == null) {\\n                    this.labelText = this.label;\\n                    this.getElement().innerHTML = this.labelText.replace(/\\\\r\\\\n/g, \\\"<br/>\\\");\\n                }\\n            }\\n        },\\n        updateFrom:function(d) {\\n            if(d.label) this.setLabel(d.label);\\n        }\\n    });\\n\\n    // ********************************* END OF OVERLAY DEFINITIONS ***********************************************************************\\n\\n}).call(this);\\n\\n/*\\n * jsPlumb\\n *\\n * Title:jsPlumb 2.0.2\\n *\\n * Provides a way to visually connect elements on an HTML page, using SVG.\\n *\\n * This file contains the base class for library adapters.\\n *\\n * Copyright (c) 2010 - 2015 jsPlumb (hello@jsplumbtoolkit.com)\\n *\\n * http://jsplumbtoolkit.com\\n * http://github.com/sporritt/jsplumb\\n *\\n * Dual licensed under the MIT and GPL2 licenses.\\n */\\n;(function() {\\n    \\\"use strict\\\";\\n    var root = this,\\n        _jp = root.jsPlumb;\\n\\n    var _getEventManager = function(instance) {\\n        var e = instance._mottle;\\n        if (!e) {\\n            e = instance._mottle = new root.Mottle();\\n        }\\n        return e;\\n    };\\n\\n    _jp.extend(root.jsPlumbInstance.prototype, {\\n        getEventManager:function() {\\n            return _getEventManager(this);\\n        },\\n        on : function(el, event, callback) {\\n            // TODO: here we would like to map the tap event if we know its\\n            // an internal bind to a click. we have to know its internal because only\\n            // then can we be sure that the UP event wont be consumed (tap is a synthesized\\n            // event from a mousedown followed by a mouseup).\\n            //event = { \\\"click\\\":\\\"tap\\\", \\\"dblclick\\\":\\\"dbltap\\\"}[event] || event;\\n            this.getEventManager().on.apply(this, arguments);\\n            return this;\\n        },\\n        off : function(el, event, callback) {\\n            this.getEventManager().off.apply(this, arguments);\\n            return this;\\n        }\\n    });\\n\\n\\n}).call(this);\\n/*\\n * jsPlumb\\n * \\n * Title:jsPlumb 2.0.2\\n * \\n * Provides a way to visually connect elements on an HTML page, using SVG.\\n * \\n * This file contains the 'flowchart' connectors, consisting of vertical and horizontal line segments.\\n *\\n * Copyright (c) 2010 - 2015 jsPlumb (hello@jsplumbtoolkit.com)\\n * \\n * http://jsplumbtoolkit.com\\n * http://github.com/sporritt/jsplumb\\n * \\n * Dual licensed under the MIT and GPL2 licenses.\\n */\\n;\\n(function () {\\n\\n    \\\"use strict\\\";\\n    var root = this, _jp = root.jsPlumb, _ju = root.jsPlumbUtil;\\n\\n    var Flowchart = function (params) {\\n        this.type = \\\"Flowchart\\\";\\n        params = params || {};\\n        params.stub = params.stub == null ? 30 : params.stub;\\n        var segments,\\n            _super = _jp.Connectors.AbstractConnector.apply(this, arguments),\\n            midpoint = params.midpoint == null ? 0.5 : params.midpoint,\\n            alwaysRespectStubs = params.alwaysRespectStubs === true,\\n            lastx = null, lasty = null, lastOrientation,\\n            cornerRadius = params.cornerRadius != null ? params.cornerRadius : 0,\\n\\n            // TODO now common between this and AbstractBezierEditor; refactor into superclass?\\n            loopbackRadius = params.loopbackRadius || 25,\\n            isLoopbackCurrently = false,\\n\\n            sgn = function (n) {\\n                return n < 0 ? -1 : n === 0 ? 0 : 1;\\n            },\\n            /**\\n             * helper method to add a segment.\\n             */\\n            addSegment = function (segments, x, y, paintInfo) {\\n                if (lastx == x && lasty == y) return;\\n                var lx = lastx == null ? paintInfo.sx : lastx,\\n                    ly = lasty == null ? paintInfo.sy : lasty,\\n                    o = lx == x ? \\\"v\\\" : \\\"h\\\",\\n                    sgnx = sgn(x - lx),\\n                    sgny = sgn(y - ly);\\n\\n                lastx = x;\\n                lasty = y;\\n                segments.push([lx, ly, x, y, o, sgnx, sgny]);\\n            },\\n            segLength = function (s) {\\n                return Math.sqrt(Math.pow(s[0] - s[2], 2) + Math.pow(s[1] - s[3], 2));\\n            },\\n            _cloneArray = function (a) {\\n                var _a = [];\\n                _a.push.apply(_a, a);\\n                return _a;\\n            },\\n            writeSegments = function (conn, segments, paintInfo) {\\n                var current = null, next;\\n                for (var i = 0; i < segments.length - 1; i++) {\\n\\n                    current = current || _cloneArray(segments[i]);\\n                    next = _cloneArray(segments[i + 1]);\\n                    if (cornerRadius > 0 && current[4] != next[4]) {\\n                        var radiusToUse = Math.min(cornerRadius, segLength(current), segLength(next));\\n                        // right angle. adjust current segment's end point, and next segment's start point.\\n                        current[2] -= current[5] * radiusToUse;\\n                        current[3] -= current[6] * radiusToUse;\\n                        next[0] += next[5] * radiusToUse;\\n                        next[1] += next[6] * radiusToUse;\\n                        var ac = (current[6] == next[5] && next[5] == 1) ||\\n                                ((current[6] == next[5] && next[5] === 0) && current[5] != next[6]) ||\\n                                (current[6] == next[5] && next[5] == -1),\\n                            sgny = next[1] > current[3] ? 1 : -1,\\n                            sgnx = next[0] > current[2] ? 1 : -1,\\n                            sgnEqual = sgny == sgnx,\\n                            cx = (sgnEqual && ac || (!sgnEqual && !ac)) ? next[0] : current[2],\\n                            cy = (sgnEqual && ac || (!sgnEqual && !ac)) ? current[3] : next[1];\\n\\n                        _super.addSegment(conn, \\\"Straight\\\", {\\n                            x1: current[0], y1: current[1], x2: current[2], y2: current[3]\\n                        });\\n\\n                        _super.addSegment(conn, \\\"Arc\\\", {\\n                            r: radiusToUse,\\n                            x1: current[2],\\n                            y1: current[3],\\n                            x2: next[0],\\n                            y2: next[1],\\n                            cx: cx,\\n                            cy: cy,\\n                            ac: ac\\n                        });\\n                    }\\n                    else {\\n                        // dx + dy are used to adjust for line width.\\n                        var dx = (current[2] == current[0]) ? 0 : (current[2] > current[0]) ? (paintInfo.lw / 2) : -(paintInfo.lw / 2),\\n                            dy = (current[3] == current[1]) ? 0 : (current[3] > current[1]) ? (paintInfo.lw / 2) : -(paintInfo.lw / 2);\\n                        _super.addSegment(conn, \\\"Straight\\\", {\\n                            x1: current[0] - dx, y1: current[1] - dy, x2: current[2] + dx, y2: current[3] + dy\\n                        });\\n                    }\\n                    current = next;\\n                }\\n                if (next != null) {\\n                    // last segment\\n                    _super.addSegment(conn, \\\"Straight\\\", {\\n                        x1: next[0], y1: next[1], x2: next[2], y2: next[3]\\n                    });\\n                }\\n            };\\n\\n        this._compute = function (paintInfo, params) {\\n\\n            segments = [];\\n            lastx = null;\\n            lasty = null;\\n            lastOrientation = null;\\n\\n            var commonStubCalculator = function () {\\n                return [ paintInfo.startStubX, paintInfo.startStubY, paintInfo.endStubX, paintInfo.endStubY ];\\n            },\\n                stubCalculators = {\\n                    perpendicular: commonStubCalculator,\\n                    orthogonal: commonStubCalculator,\\n                    opposite: function (axis) {\\n                        var pi = paintInfo,\\n                            idx = axis == \\\"x\\\" ? 0 : 1,\\n                            areInProximity = {\\n                                \\\"x\\\": function () {\\n                                    return ( (pi.so[idx] == 1 && (\\n                                        ( (pi.startStubX > pi.endStubX) && (pi.tx > pi.startStubX) ) ||\\n                                        ( (pi.sx > pi.endStubX) && (pi.tx > pi.sx))))) ||\\n\\n                                        ( (pi.so[idx] == -1 && (\\n                                            ( (pi.startStubX < pi.endStubX) && (pi.tx < pi.startStubX) ) ||\\n                                            ( (pi.sx < pi.endStubX) && (pi.tx < pi.sx)))));\\n                                },\\n                                \\\"y\\\": function () {\\n                                    return ( (pi.so[idx] == 1 && (\\n                                        ( (pi.startStubY > pi.endStubY) && (pi.ty > pi.startStubY) ) ||\\n                                        ( (pi.sy > pi.endStubY) && (pi.ty > pi.sy))))) ||\\n\\n                                        ( (pi.so[idx] == -1 && (\\n                                            ( (pi.startStubY < pi.endStubY) && (pi.ty < pi.startStubY) ) ||\\n                                            ( (pi.sy < pi.endStubY) && (pi.ty < pi.sy)))));\\n                                }\\n                            };\\n\\n                        if (!alwaysRespectStubs && areInProximity[axis]()) {\\n                            return {\\n                                \\\"x\\\": [(paintInfo.sx + paintInfo.tx) / 2, paintInfo.startStubY, (paintInfo.sx + paintInfo.tx) / 2, paintInfo.endStubY],\\n                                \\\"y\\\": [paintInfo.startStubX, (paintInfo.sy + paintInfo.ty) / 2, paintInfo.endStubX, (paintInfo.sy + paintInfo.ty) / 2]\\n                            }[axis];\\n                        }\\n                        else {\\n                            return [ paintInfo.startStubX, paintInfo.startStubY, paintInfo.endStubX, paintInfo.endStubY ];\\n                        }\\n                    }\\n                };\\n\\n            // calculate Stubs.\\n            var stubs = stubCalculators[paintInfo.anchorOrientation](paintInfo.sourceAxis),\\n                idx = paintInfo.sourceAxis == \\\"x\\\" ? 0 : 1,\\n                oidx = paintInfo.sourceAxis == \\\"x\\\" ? 1 : 0,\\n                ss = stubs[idx],\\n                oss = stubs[oidx],\\n                es = stubs[idx + 2],\\n                oes = stubs[oidx + 2];\\n\\n            // add the start stub segment. use stubs for loopback as it will look better, with the loop spaced\\n            // away from the element.\\n            addSegment(segments, stubs[0], stubs[1], paintInfo);\\n\\n            // if its a loopback and we should treat it differently.\\n            if (false &&params.sourcePos[0] == params.targetPos[0] && params.sourcePos[1] == params.targetPos[1]) {\\n\\n                // we use loopbackRadius here, as statemachine connectors do.\\n                // so we go radius to the left from stubs[0], then upwards by 2*radius, to the right by 2*radius,\\n                // down by 2*radius, left by radius.\\n                addSegment(segments, stubs[0] - loopbackRadius, stubs[1], paintInfo);\\n                addSegment(segments, stubs[0] - loopbackRadius, stubs[1] - (2 * loopbackRadius), paintInfo);\\n                addSegment(segments, stubs[0] + loopbackRadius, stubs[1] - (2 * loopbackRadius), paintInfo);\\n                addSegment(segments, stubs[0] + loopbackRadius, stubs[1], paintInfo);\\n                addSegment(segments, stubs[0], stubs[1], paintInfo);\\n\\n            }\\n            else {\\n\\n\\n                var midx = paintInfo.startStubX + ((paintInfo.endStubX - paintInfo.startStubX) * midpoint),\\n                    midy = paintInfo.startStubY + ((paintInfo.endStubY - paintInfo.startStubY) * midpoint);\\n\\n                var orientations = { x: [ 0, 1 ], y: [ 1, 0 ] },\\n                    lineCalculators = {\\n                        perpendicular: function (axis) {\\n                            var pi = paintInfo,\\n                                sis = {\\n                                    x: [\\n                                        [ [ 1, 2, 3, 4 ], null, [ 2, 1, 4, 3 ] ],\\n                                        null,\\n                                        [ [ 4, 3, 2, 1 ], null, [ 3, 4, 1, 2 ] ]\\n                                    ],\\n                                    y: [\\n                                        [ [ 3, 2, 1, 4 ], null, [ 2, 3, 4, 1 ] ],\\n                                        null,\\n                                        [ [ 4, 1, 2, 3 ], null, [ 1, 4, 3, 2 ] ]\\n                                    ]\\n                                },\\n                                stubs = {\\n                                    x: [ [ pi.startStubX, pi.endStubX ], null, [ pi.endStubX, pi.startStubX ] ],\\n                                    y: [ [ pi.startStubY, pi.endStubY ], null, [ pi.endStubY, pi.startStubY ] ]\\n                                },\\n                                midLines = {\\n                                    x: [ [ midx, pi.startStubY ], [ midx, pi.endStubY ] ],\\n                                    y: [ [ pi.startStubX, midy ], [ pi.endStubX, midy ] ]\\n                                },\\n                                linesToEnd = {\\n                                    x: [ [ pi.endStubX, pi.startStubY ] ],\\n                                    y: [ [ pi.startStubX, pi.endStubY ] ]\\n                                },\\n                                startToEnd = {\\n                                    x: [ [ pi.startStubX, pi.endStubY ], [ pi.endStubX, pi.endStubY ] ],\\n                                    y: [ [ pi.endStubX, pi.startStubY ], [ pi.endStubX, pi.endStubY ] ]\\n                                },\\n                                startToMidToEnd = {\\n                                    x: [ [ pi.startStubX, midy ], [ pi.endStubX, midy ], [ pi.endStubX, pi.endStubY ] ],\\n                                    y: [ [ midx, pi.startStubY ], [ midx, pi.endStubY ], [ pi.endStubX, pi.endStubY ] ]\\n                                },\\n                                otherStubs = {\\n                                    x: [ pi.startStubY, pi.endStubY ],\\n                                    y: [ pi.startStubX, pi.endStubX ]\\n                                },\\n                                soIdx = orientations[axis][0], toIdx = orientations[axis][1],\\n                                _so = pi.so[soIdx] + 1,\\n                                _to = pi.to[toIdx] + 1,\\n                                otherFlipped = (pi.to[toIdx] == -1 && (otherStubs[axis][1] < otherStubs[axis][0])) || (pi.to[toIdx] == 1 && (otherStubs[axis][1] > otherStubs[axis][0])),\\n                                stub1 = stubs[axis][_so][0],\\n                                stub2 = stubs[axis][_so][1],\\n                                segmentIndexes = sis[axis][_so][_to];\\n\\n                            if (pi.segment == segmentIndexes[3] || (pi.segment == segmentIndexes[2] && otherFlipped)) {\\n                                return midLines[axis];\\n                            }\\n                            else if (pi.segment == segmentIndexes[2] && stub2 < stub1) {\\n                                return linesToEnd[axis];\\n                            }\\n                            else if ((pi.segment == segmentIndexes[2] && stub2 >= stub1) || (pi.segment == segmentIndexes[1] && !otherFlipped)) {\\n                                return startToMidToEnd[axis];\\n                            }\\n                            else if (pi.segment == segmentIndexes[0] || (pi.segment == segmentIndexes[1] && otherFlipped)) {\\n                                return startToEnd[axis];\\n                            }\\n                        },\\n                        orthogonal: function (axis, startStub, otherStartStub, endStub, otherEndStub) {\\n                            var pi = paintInfo,\\n                                extent = {\\n                                    \\\"x\\\": pi.so[0] == -1 ? Math.min(startStub, endStub) : Math.max(startStub, endStub),\\n                                    \\\"y\\\": pi.so[1] == -1 ? Math.min(startStub, endStub) : Math.max(startStub, endStub)\\n                                }[axis];\\n\\n                            return {\\n                                \\\"x\\\": [\\n                                    [ extent, otherStartStub ],\\n                                    [ extent, otherEndStub ],\\n                                    [ endStub, otherEndStub ]\\n                                ],\\n                                \\\"y\\\": [\\n                                    [ otherStartStub, extent ],\\n                                    [ otherEndStub, extent ],\\n                                    [ otherEndStub, endStub ]\\n                                ]\\n                            }[axis];\\n                        },\\n                        opposite: function (axis, ss, oss, es) {\\n                            var pi = paintInfo,\\n                                otherAxis = {\\\"x\\\": \\\"y\\\", \\\"y\\\": \\\"x\\\"}[axis],\\n                                dim = {\\\"x\\\": \\\"height\\\", \\\"y\\\": \\\"width\\\"}[axis],\\n                                comparator = pi[\\\"is\\\" + axis.toUpperCase() + \\\"GreaterThanStubTimes2\\\"];\\n\\n                            if (params.sourceEndpoint.elementId == params.targetEndpoint.elementId) {\\n                                var _val = oss + ((1 - params.sourceEndpoint.anchor[otherAxis]) * params.sourceInfo[dim]) + _super.maxStub;\\n                                return {\\n                                    \\\"x\\\": [\\n                                        [ ss, _val ],\\n                                        [ es, _val ]\\n                                    ],\\n                                    \\\"y\\\": [\\n                                        [ _val, ss ],\\n                                        [ _val, es ]\\n                                    ]\\n                                }[axis];\\n\\n                            }\\n                            else if (!comparator || (pi.so[idx] == 1 && ss > es) || (pi.so[idx] == -1 && ss < es)) {\\n                                return {\\n                                    \\\"x\\\": [\\n                                        [ ss, midy ],\\n                                        [ es, midy ]\\n                                    ],\\n                                    \\\"y\\\": [\\n                                        [ midx, ss ],\\n                                        [ midx, es ]\\n                                    ]\\n                                }[axis];\\n                            }\\n                            else if ((pi.so[idx] == 1 && ss < es) || (pi.so[idx] == -1 && ss > es)) {\\n                                return {\\n                                    \\\"x\\\": [\\n                                        [ midx, pi.sy ],\\n                                        [ midx, pi.ty ]\\n                                    ],\\n                                    \\\"y\\\": [\\n                                        [ pi.sx, midy ],\\n                                        [ pi.tx, midy ]\\n                                    ]\\n                                }[axis];\\n                            }\\n                        }\\n                    };\\n\\n                // compute the rest of the line\\n                var p = lineCalculators[paintInfo.anchorOrientation](paintInfo.sourceAxis, ss, oss, es, oes);\\n                if (p) {\\n                    for (var i = 0; i < p.length; i++) {\\n                        addSegment(segments, p[i][0], p[i][1], paintInfo);\\n                    }\\n                }\\n\\n                // line to end stub\\n                addSegment(segments, stubs[2], stubs[3], paintInfo);\\n\\n            }\\n\\n            // end stub to end (common)\\n            addSegment(segments, paintInfo.tx, paintInfo.ty, paintInfo);\\n\\n            // write out the segments.\\n            writeSegments(this, segments, paintInfo);\\n        };\\n\\n        /*this.getPath = function () {\\n            var _last = null, _lastAxis = null, s = [], segs = segments;\\n            for (var i = 0; i < segs.length; i++) {\\n                var seg = segs[i], axis = seg[4], axisIndex = (axis == \\\"v\\\" ? 3 : 2);\\n                if (_last != null && _lastAxis === axis) {\\n                    _last[axisIndex] = seg[axisIndex];\\n                }\\n                else {\\n                    if (seg[0] != seg[2] || seg[1] != seg[3]) {\\n                        s.push({\\n                            start: [ seg[0], seg[1] ],\\n                            end: [ seg[2], seg[3] ]\\n                        });\\n                        _last = seg;\\n                        _lastAxis = seg[4];\\n                    }\\n                }\\n            }\\n            return s;\\n        };*/\\n    };\\n\\n    _ju.extend(Flowchart, _jp.Connectors.AbstractConnector);\\n    _jp.registerConnectorType(Flowchart, \\\"Flowchart\\\");\\n}).call(this);\\n/*\\n * This file contains the code for the Bezier connector type.\\n *\\n * Copyright (c) 2010 - 2015 jsPlumb (hello@jsplumbtoolkit.com)\\n * \\n * https://jsplumbtoolkit.com\\n * http://github.com/sporritt/jsplumb\\n * \\n * Dual licensed under the MIT and GPL2 licenses.\\n */\\n;\\n(function () {\\n\\n    \\\"use strict\\\";\\n    var root = this, _jp = root.jsPlumb, _ju = root.jsPlumbUtil;\\n\\n    _jp.Connectors.AbstractBezierConnector = function(params) {\\n        params = params || {};\\n        var showLoopback = params.showLoopback !== false,\\n            curviness = params.curviness || 10,\\n            margin = params.margin || 5,\\n            proximityLimit = params.proximityLimit || 80,\\n            clockwise = params.orientation && params.orientation === \\\"clockwise\\\",\\n            loopbackRadius = params.loopbackRadius || 25,\\n            isLoopbackCurrently = false,\\n            _super;\\n\\n        this.overrideSetEditable = function() { return !isLoopbackCurrently; };\\n\\n        this._compute = function (paintInfo, p) {\\n\\n            var sp = p.sourcePos,\\n                tp = p.targetPos,\\n                _w = Math.abs(sp[0] - tp[0]),\\n                _h = Math.abs(sp[1] - tp[1]);\\n\\n            if (!showLoopback || (p.sourceEndpoint.elementId !== p.targetEndpoint.elementId)) {\\n                isLoopbackCurrently = false;\\n                this._computeBezier(paintInfo, p, sp, tp, _w, _h);\\n            } else {\\n                isLoopbackCurrently = true;\\n                // a loopback connector.  draw an arc from one anchor to the other.\\n                var x1 = p.sourcePos[0], y1 = p.sourcePos[1] - margin,\\n                    cx = x1, cy = y1 - loopbackRadius,\\n                // canvas sizing stuff, to ensure the whole painted area is visible.\\n                    _x = cx - loopbackRadius,\\n                    _y = cy - loopbackRadius;\\n\\n                _w = 2 * loopbackRadius;\\n                _h = 2 * loopbackRadius;\\n\\n                paintInfo.points[0] = _x;\\n                paintInfo.points[1] = _y;\\n                paintInfo.points[2] = _w;\\n                paintInfo.points[3] = _h;\\n\\n                // ADD AN ARC SEGMENT.\\n                _super.addSegment(this, \\\"Arc\\\", {\\n                    loopback: true,\\n                    x1: (x1 - _x) + 4,\\n                    y1: y1 - _y,\\n                    startAngle: 0,\\n                    endAngle: 2 * Math.PI,\\n                    r: loopbackRadius,\\n                    ac: !clockwise,\\n                    x2: (x1 - _x) - 4,\\n                    y2: y1 - _y,\\n                    cx: cx - _x,\\n                    cy: cy - _y\\n                });\\n            }\\n        };\\n\\n        _super = _jp.Connectors.AbstractConnector.apply(this, arguments);\\n        return _super;\\n    };\\n    _ju.extend(_jp.Connectors.AbstractBezierConnector, _jp.Connectors.AbstractConnector);\\n\\n    var Bezier = function (params) {\\n        params = params || {};\\n        this.type = \\\"Bezier\\\";\\n\\n        var _super = _jp.Connectors.AbstractBezierConnector.apply(this, arguments),\\n            majorAnchor = params.curviness || 150,\\n            minorAnchor = 10;\\n\\n        this.getCurviness = function () {\\n            return majorAnchor;\\n        };\\n\\n        this._findControlPoint = function (point, sourceAnchorPosition, targetAnchorPosition, sourceEndpoint, targetEndpoint, soo, too) {\\n            // determine if the two anchors are perpendicular to each other in their orientation.  we swap the control\\n            // points around if so (code could be tightened up)\\n            var perpendicular = soo[0] != too[0] || soo[1] == too[1],\\n                p = [];\\n\\n            if (!perpendicular) {\\n                if (soo[0] === 0) // X\\n                    p.push(sourceAnchorPosition[0] < targetAnchorPosition[0] ? point[0] + minorAnchor : point[0] - minorAnchor);\\n                else p.push(point[0] - (majorAnchor * soo[0]));\\n\\n                if (soo[1] === 0) // Y\\n                    p.push(sourceAnchorPosition[1] < targetAnchorPosition[1] ? point[1] + minorAnchor : point[1] - minorAnchor);\\n                else p.push(point[1] + (majorAnchor * too[1]));\\n            }\\n            else {\\n                if (too[0] === 0) // X\\n                    p.push(targetAnchorPosition[0] < sourceAnchorPosition[0] ? point[0] + minorAnchor : point[0] - minorAnchor);\\n                else p.push(point[0] + (majorAnchor * too[0]));\\n\\n                if (too[1] === 0) // Y\\n                    p.push(targetAnchorPosition[1] < sourceAnchorPosition[1] ? point[1] + minorAnchor : point[1] - minorAnchor);\\n                else p.push(point[1] + (majorAnchor * soo[1]));\\n            }\\n\\n            return p;\\n        };\\n\\n        this._computeBezier = function (paintInfo, p, sp, tp, _w, _h) {\\n\\n            var geometry = this.getGeometry(), _CP, _CP2,\\n                _sx = sp[0] < tp[0] ? _w : 0,\\n                _sy = sp[1] < tp[1] ? _h : 0,\\n                _tx = sp[0] < tp[0] ? 0 : _w,\\n                _ty = sp[1] < tp[1] ? 0 : _h;\\n\\n            if ((this.hasBeenEdited() || this.isEditing()) && geometry != null && geometry.controlPoints != null && geometry.controlPoints[0] != null && geometry.controlPoints[1] != null) {\\n                _CP = geometry.controlPoints[0];\\n                _CP2 = geometry.controlPoints[1];\\n            }\\n            else {\\n                _CP = this._findControlPoint([_sx, _sy], sp, tp, p.sourceEndpoint, p.targetEndpoint, paintInfo.so, paintInfo.to);\\n                _CP2 = this._findControlPoint([_tx, _ty], tp, sp, p.targetEndpoint, p.sourceEndpoint, paintInfo.to, paintInfo.so);\\n            }\\n\\n            _super.setGeometry({controlPoints:[_CP, _CP2]}, true);\\n\\n            _super.addSegment(this, \\\"Bezier\\\", {\\n                x1: _sx, y1: _sy, x2: _tx, y2: _ty,\\n                cp1x: _CP[0], cp1y: _CP[1], cp2x: _CP2[0], cp2y: _CP2[1]\\n            });\\n        };\\n\\n\\n    };\\n\\n    _ju.extend(Bezier, _jp.Connectors.AbstractBezierConnector);\\n    _jp.registerConnectorType(Bezier, \\\"Bezier\\\");\\n\\n}).call(this);\\n/*\\n * This file contains the state machine connectors, which extend AbstractBezierConnector.\\n *\\n * Copyright (c) 2010 - 2015 jsPlumb (hello@jsplumbtoolkit.com)\\n * \\n * https://jsplumbtoolkit.com\\n * http://github.com/sporritt/jsplumb\\n * \\n * Dual licensed under the MIT and GPL2 licenses.\\n */\\n;\\n(function () {\\n\\n    \\\"use strict\\\";\\n    var root = this, _jp = root.jsPlumb, _ju = root.jsPlumbUtil;\\n\\n    var _segment = function (x1, y1, x2, y2) {\\n            if (x1 <= x2 && y2 <= y1) return 1;\\n            else if (x1 <= x2 && y1 <= y2) return 2;\\n            else if (x2 <= x1 && y2 >= y1) return 3;\\n            return 4;\\n        },\\n\\n    // the control point we will use depends on the faces to which each end of the connection is assigned, specifically whether or not the\\n    // two faces are parallel or perpendicular.  if they are parallel then the control point lies on the midpoint of the axis in which they\\n    // are parellel and varies only in the other axis; this variation is proportional to the distance that the anchor points lie from the\\n    // center of that face.  if the two faces are perpendicular then the control point is at some distance from both the midpoints; the amount and\\n    // direction are dependent on the orientation of the two elements. 'seg', passed in to this method, tells you which segment the target element\\n    // lies in with respect to the source: 1 is top right, 2 is bottom right, 3 is bottom left, 4 is top left.\\n    //\\n    // sourcePos and targetPos are arrays of info about where on the source and target each anchor is located.  their contents are:\\n    //\\n    // 0 - absolute x\\n    // 1 - absolute y\\n    // 2 - proportional x in element (0 is left edge, 1 is right edge)\\n    // 3 - proportional y in element (0 is top edge, 1 is bottom edge)\\n    //\\n        _findControlPoint = function (midx, midy, segment, sourceEdge, targetEdge, dx, dy, distance, proximityLimit) {\\n            // TODO (maybe)\\n            // - if anchor pos is 0.5, make the control point take into account the relative position of the elements.\\n            if (distance <= proximityLimit) return [midx, midy];\\n\\n            if (segment === 1) {\\n                if (sourceEdge[3] <= 0 && targetEdge[3] >= 1) return [ midx + (sourceEdge[2] < 0.5 ? -1 * dx : dx), midy ];\\n                else if (sourceEdge[2] >= 1 && targetEdge[2] <= 0) return [ midx, midy + (sourceEdge[3] < 0.5 ? -1 * dy : dy) ];\\n                else return [ midx + (-1 * dx) , midy + (-1 * dy) ];\\n            }\\n            else if (segment === 2) {\\n                if (sourceEdge[3] >= 1 && targetEdge[3] <= 0) return [ midx + (sourceEdge[2] < 0.5 ? -1 * dx : dx), midy ];\\n                else if (sourceEdge[2] >= 1 && targetEdge[2] <= 0) return [ midx, midy + (sourceEdge[3] < 0.5 ? -1 * dy : dy) ];\\n                else return [ midx + dx, midy + (-1 * dy) ];\\n            }\\n            else if (segment === 3) {\\n                if (sourceEdge[3] >= 1 && targetEdge[3] <= 0) return [ midx + (sourceEdge[2] < 0.5 ? -1 * dx : dx), midy ];\\n                else if (sourceEdge[2] <= 0 && targetEdge[2] >= 1) return [ midx, midy + (sourceEdge[3] < 0.5 ? -1 * dy : dy) ];\\n                else return [ midx + (-1 * dx) , midy + (-1 * dy) ];\\n            }\\n            else if (segment === 4) {\\n                if (sourceEdge[3] <= 0 && targetEdge[3] >= 1) return [ midx + (sourceEdge[2] < 0.5 ? -1 * dx : dx), midy ];\\n                else if (sourceEdge[2] <= 0 && targetEdge[2] >= 1) return [ midx, midy + (sourceEdge[3] < 0.5 ? -1 * dy : dy) ];\\n                else return [ midx + dx , midy + (-1 * dy) ];\\n            }\\n\\n        };\\n\\n    var StateMachine = function (params) {\\n        params = params || {};\\n        this.type = \\\"StateMachine\\\";\\n\\n        var _super = _jp.Connectors.AbstractBezierConnector.apply(this, arguments),\\n            curviness = params.curviness || 10,\\n            margin = params.margin || 5,\\n            proximityLimit = params.proximityLimit || 80,\\n            clockwise = params.orientation && params.orientation === \\\"clockwise\\\",\\n            _controlPoint;\\n\\n        this._computeBezier = function(paintInfo, params, sp, tp, w, h) {\\n            var _sx = params.sourcePos[0] < params.targetPos[0] ? 0 : w,\\n                _sy = params.sourcePos[1] < params.targetPos[1] ? 0 : h,\\n                _tx = params.sourcePos[0] < params.targetPos[0] ? w : 0,\\n                _ty = params.sourcePos[1] < params.targetPos[1] ? h : 0;\\n\\n            // now adjust for the margin\\n            if (params.sourcePos[2] === 0) _sx -= margin;\\n            if (params.sourcePos[2] === 1) _sx += margin;\\n            if (params.sourcePos[3] === 0) _sy -= margin;\\n            if (params.sourcePos[3] === 1) _sy += margin;\\n            if (params.targetPos[2] === 0) _tx -= margin;\\n            if (params.targetPos[2] === 1) _tx += margin;\\n            if (params.targetPos[3] === 0) _ty -= margin;\\n            if (params.targetPos[3] === 1) _ty += margin;\\n\\n            //\\n            // these connectors are quadratic bezier curves, having a single control point. if both anchors\\n            // are located at 0.5 on their respective faces, the control point is set to the midpoint and you\\n            // get a straight line.  this is also the case if the two anchors are within 'proximityLimit', since\\n            // it seems to make good aesthetic sense to do that. outside of that, the control point is positioned\\n            // at 'curviness' pixels away along the normal to the straight line connecting the two anchors.\\n            //\\n            // there may be two improvements to this.  firstly, we might actually support the notion of avoiding nodes\\n            // in the UI, or at least making a good effort at doing so.  if a connection would pass underneath some node,\\n            // for example, we might increase the distance the control point is away from the midpoint in a bid to\\n            // steer it around that node.  this will work within limits, but i think those limits would also be the likely\\n            // limits for, once again, aesthetic good sense in the layout of a chart using these connectors.\\n            //\\n            // the second possible change is actually two possible changes: firstly, it is possible we should gradually\\n            // decrease the 'curviness' as the distance between the anchors decreases; start tailing it off to 0 at some\\n            // point (which should be configurable).  secondly, we might slightly increase the 'curviness' for connectors\\n            // with respect to how far their anchor is from the center of its respective face. this could either look cool,\\n            // or stupid, and may indeed work only in a way that is so subtle as to have been a waste of time.\\n            //\\n\\n            var _midx = (_sx + _tx) / 2,\\n                _midy = (_sy + _ty) / 2,\\n                segment = _segment(_sx, _sy, _tx, _ty),\\n                distance = Math.sqrt(Math.pow(_tx - _sx, 2) + Math.pow(_ty - _sy, 2)),\\n                cp1x, cp2x, cp1y, cp2y,\\n                geometry = _super.getGeometry();\\n\\n            if ((this.hasBeenEdited() || this.isEditing()) && geometry != null) {\\n                cp1x = geometry.controlPoints[0][0];\\n                cp1y = geometry.controlPoints[0][1];\\n                cp2x = geometry.controlPoints[1][0];\\n                cp2y = geometry.controlPoints[1][1];\\n            }\\n            else {\\n                // calculate the control point.  this code will be where we'll put in a rudimentary element avoidance scheme; it\\n                // will work by extending the control point to force the curve to be, um, curvier.\\n                _controlPoint = _findControlPoint(_midx,\\n                    _midy,\\n                    segment,\\n                    params.sourcePos,\\n                    params.targetPos,\\n                    curviness, curviness,\\n                    distance,\\n                    proximityLimit);\\n\\n                cp1x = _controlPoint[0];\\n                cp2x = _controlPoint[0];\\n                cp1y = _controlPoint[1];\\n                cp2y = _controlPoint[1];\\n\\n                _super.setGeometry({controlPoints:[_controlPoint, _controlPoint]}, true);\\n            }\\n\\n            _super.addSegment(this, \\\"Bezier\\\", {\\n                x1: _tx, y1: _ty, x2: _sx, y2: _sy,\\n                cp1x: cp1x, cp1y: cp1y,\\n                cp2x: cp2x, cp2y: cp2y\\n            });\\n        };\\n    };\\n\\n    _ju.extend(StateMachine, _jp.Connectors.AbstractBezierConnector);\\n    _jp.registerConnectorType(StateMachine, \\\"StateMachine\\\");\\n\\n}).call(this);\\n/*\\n * jsPlumb\\n * \\n * Title:jsPlumb 2.0.2\\n * \\n * Provides a way to visually connect elements on an HTML page, using SVG.\\n * \\n * This file contains the SVG renderers.\\n *\\n * Copyright (c) 2010 - 2015 jsPlumb (hello@jsplumbtoolkit.com)\\n * \\n * http://jsplumbtoolkit.com\\n * http://github.com/sporritt/jsplumb\\n * \\n * Dual licensed under the MIT and GPL2 licenses.\\n */\\n;\\n(function () {\\n\\n// ************************** SVG utility methods ********************************************\\t\\n\\n    \\\"use strict\\\";\\n    var root = this, _jp = root.jsPlumb, _ju = root.jsPlumbUtil;\\n\\n    var svgAttributeMap = {\\n            \\\"stroke-linejoin\\\": \\\"stroke-linejoin\\\",\\n            \\\"stroke-dashoffset\\\": \\\"stroke-dashoffset\\\",\\n            \\\"stroke-linecap\\\": \\\"stroke-linecap\\\"\\n        },\\n        STROKE_DASHARRAY = \\\"stroke-dasharray\\\",\\n        DASHSTYLE = \\\"dashstyle\\\",\\n        LINEAR_GRADIENT = \\\"linearGradient\\\",\\n        RADIAL_GRADIENT = \\\"radialGradient\\\",\\n        DEFS = \\\"defs\\\",\\n        FILL = \\\"fill\\\",\\n        STOP = \\\"stop\\\",\\n        STROKE = \\\"stroke\\\",\\n        STROKE_WIDTH = \\\"stroke-width\\\",\\n        STYLE = \\\"style\\\",\\n        NONE = \\\"none\\\",\\n        JSPLUMB_GRADIENT = \\\"jsplumb_gradient_\\\",\\n        LINE_WIDTH = \\\"lineWidth\\\",\\n        ns = {\\n            svg: \\\"http://www.w3.org/2000/svg\\\",\\n            xhtml: \\\"http://www.w3.org/1999/xhtml\\\"\\n        },\\n        _attr = function (node, attributes) {\\n            for (var i in attributes)\\n                node.setAttribute(i, \\\"\\\" + attributes[i]);\\n        },\\n        _node = function (name, attributes) {\\n            attributes = attributes || {};\\n            attributes.version = \\\"1.1\\\";\\n            attributes.xmlns = ns.xhtml;\\n            return jsPlumb.createElementNS(ns.svg, name, null, null, attributes);\\n        },\\n        _pos = function (d) {\\n            return \\\"position:absolute;left:\\\" + d[0] + \\\"px;top:\\\" + d[1] + \\\"px\\\";\\n        },\\n        _clearGradient = function (parent) {\\n            var els = parent.querySelectorAll(\\\" defs,linearGradient,radialGradient\\\");\\n            for (var i = 0; i < els.length; i++)\\n                els[i].parentNode.removeChild(els[i]);\\n        },\\n        _updateGradient = function (parent, node, style, dimensions, uiComponent) {\\n            var id = JSPLUMB_GRADIENT + uiComponent._jsPlumb.instance.idstamp();\\n            // first clear out any existing gradient\\n            _clearGradient(parent);\\n            // this checks for an 'offset' property in the gradient, and in the absence of it, assumes\\n            // we want a linear gradient. if it's there, we create a radial gradient.\\n            // it is possible that a more explicit means of defining the gradient type would be\\n            // better. relying on 'offset' means that we can never have a radial gradient that uses\\n            // some default offset, for instance.\\n            // issue 244 suggested the 'gradientUnits' attribute; without this, straight/flowchart connectors with gradients would\\n            // not show gradients when the line was perfectly horizontal or vertical.\\n            var g;\\n            if (!style.gradient.offset)\\n                g = _node(LINEAR_GRADIENT, {id: id, gradientUnits: \\\"userSpaceOnUse\\\"});\\n            else\\n                g = _node(RADIAL_GRADIENT, { id: id });\\n\\n            var defs = _node(DEFS);\\n            parent.appendChild(defs);\\n            defs.appendChild(g);\\n\\n            // the svg radial gradient seems to treat stops in the reverse\\n            // order to how canvas does it.  so we want to keep all the maths the same, but\\n            // iterate the actual style declarations in reverse order, if the x indexes are not in order.\\n            for (var i = 0; i < style.gradient.stops.length; i++) {\\n                var styleToUse = uiComponent.segment == 1 || uiComponent.segment == 2 ? i : style.gradient.stops.length - 1 - i,\\n                    //stopColor = _ju.convertStyle(style.gradient.stops[styleToUse][1], true),\\n                    stopColor = style.gradient.stops[styleToUse][1],\\n                    s = _node(STOP, {\\\"offset\\\": Math.floor(style.gradient.stops[i][0] * 100) + \\\"%\\\", \\\"stop-color\\\": stopColor});\\n\\n                g.appendChild(s);\\n            }\\n            var applyGradientTo = style.strokeStyle ? STROKE : FILL;\\n            node.setAttribute(applyGradientTo, \\\"url(#\\\" + id + \\\")\\\");\\n        },\\n        _applyStyles = function (parent, node, style, dimensions, uiComponent) {\\n\\n            node.setAttribute(FILL, style.fillStyle ? style.fillStyle : NONE);\\n            node.setAttribute(STROKE, style.strokeStyle ? style.strokeStyle : NONE);\\n\\n            if (style.gradient) {\\n                _updateGradient(parent, node, style, dimensions, uiComponent);\\n            }\\n            else {\\n                // make sure we clear any existing gradient\\n                _clearGradient(parent);\\n                node.setAttribute(STYLE, \\\"\\\");\\n            }\\n\\n            if (style.lineWidth) {\\n                node.setAttribute(STROKE_WIDTH, style.lineWidth);\\n            }\\n\\n            // in SVG there is a stroke-dasharray attribute we can set, and its syntax looks like\\n            // the syntax in VML but is actually kind of nasty: values are given in the pixel\\n            // coordinate space, whereas in VML they are multiples of the width of the stroked\\n            // line, which makes a lot more sense.  for that reason, jsPlumb is supporting both\\n            // the native svg 'stroke-dasharray' attribute, and also the 'dashstyle' concept from\\n            // VML, which will be the preferred method.  the code below this converts a dashstyle\\n            // attribute given in terms of stroke width into a pixel representation, by using the\\n            // stroke's lineWidth.\\n            if (style[DASHSTYLE] && style[LINE_WIDTH] && !style[STROKE_DASHARRAY]) {\\n                var sep = style[DASHSTYLE].indexOf(\\\",\\\") == -1 ? \\\" \\\" : \\\",\\\",\\n                    parts = style[DASHSTYLE].split(sep),\\n                    styleToUse = \\\"\\\";\\n                parts.forEach(function (p) {\\n                    styleToUse += (Math.floor(p * style.lineWidth) + sep);\\n                });\\n                node.setAttribute(STROKE_DASHARRAY, styleToUse);\\n            }\\n            else if (style[STROKE_DASHARRAY]) {\\n                node.setAttribute(STROKE_DASHARRAY, style[STROKE_DASHARRAY]);\\n            }\\n\\n            // extra attributes such as join type, dash offset.\\n            for (var i in svgAttributeMap) {\\n                if (style[i]) {\\n                    node.setAttribute(svgAttributeMap[i], style[i]);\\n                }\\n            }\\n        },\\n        _appendAtIndex = function (svg, path, idx) {\\n            if (svg.childNodes.length > idx) {\\n                svg.insertBefore(path, svg.childNodes[idx]);\\n            }\\n            else svg.appendChild(path);\\n        };\\n\\n    /**\\n     utility methods for other objects to use.\\n     */\\n    _ju.svg = {\\n        node: _node,\\n        attr: _attr,\\n        pos: _pos\\n    };\\n\\n    // ************************** / SVG utility methods ********************************************\\n\\n    /*\\n     * Base class for SVG components.\\n     */\\n    var SvgComponent = function (params) {\\n        var pointerEventsSpec = params.pointerEventsSpec || \\\"all\\\", renderer = {};\\n\\n        _jp.jsPlumbUIComponent.apply(this, params.originalArgs);\\n        this.canvas = null;\\n        this.path = null;\\n        this.svg = null;\\n        this.bgCanvas = null;\\n\\n        var clazz = params.cssClass + \\\" \\\" + (params.originalArgs[0].cssClass || \\\"\\\"),\\n            svgParams = {\\n                \\\"style\\\": \\\"\\\",\\n                \\\"width\\\": 0,\\n                \\\"height\\\": 0,\\n                \\\"pointer-events\\\": pointerEventsSpec,\\n                \\\"position\\\": \\\"absolute\\\"\\n            };\\n\\n        this.svg = _node(\\\"svg\\\", svgParams);\\n\\n        if (params.useDivWrapper) {\\n            this.canvas = jsPlumb.createElement(\\\"div\\\", { position : \\\"absolute\\\" });\\n            _ju.sizeElement(this.canvas, 0, 0, 1, 1);\\n            this.canvas.className = clazz;\\n        }\\n        else {\\n            _attr(this.svg, { \\\"class\\\": clazz });\\n            this.canvas = this.svg;\\n        }\\n\\n        params._jsPlumb.appendElement(this.canvas, params.originalArgs[0].parent);\\n        if (params.useDivWrapper) this.canvas.appendChild(this.svg);\\n\\n        var displayElements = [ this.canvas ];\\n        this.getDisplayElements = function () {\\n            return displayElements;\\n        };\\n\\n        this.appendDisplayElement = function (el) {\\n            displayElements.push(el);\\n        };\\n\\n        this.paint = function (style, anchor, extents) {\\n            if (style != null) {\\n\\n                var xy = [ this.x, this.y ], wh = [ this.w, this.h ], p;\\n                if (extents != null) {\\n                    if (extents.xmin < 0) xy[0] += extents.xmin;\\n                    if (extents.ymin < 0) xy[1] += extents.ymin;\\n                    wh[0] = extents.xmax + ((extents.xmin < 0) ? -extents.xmin : 0);\\n                    wh[1] = extents.ymax + ((extents.ymin < 0) ? -extents.ymin : 0);\\n                }\\n\\n                if (params.useDivWrapper) {\\n                    _ju.sizeElement(this.canvas, xy[0], xy[1], wh[0], wh[1]);\\n                    xy[0] = 0;\\n                    xy[1] = 0;\\n                    p = _pos([ 0, 0 ]);\\n                }\\n                else\\n                    p = _pos([ xy[0], xy[1] ]);\\n\\n                renderer.paint.apply(this, arguments);\\n\\n                _attr(this.svg, {\\n                    \\\"style\\\": p,\\n                    \\\"width\\\": wh[0] || 0,\\n                    \\\"height\\\": wh[1] || 0\\n                });\\n            }\\n        };\\n\\n        return {\\n            renderer: renderer\\n        };\\n    };\\n\\n    _ju.extend(SvgComponent, _jp.jsPlumbUIComponent, {\\n        cleanup: function (force) {\\n            if (force || this.typeId == null) {\\n                if (this.canvas) this.canvas._jsPlumb = null;\\n                if (this.svg) this.svg._jsPlumb = null;\\n                if (this.bgCanvas) this.bgCanvas._jsPlumb = null;\\n\\n                if (this.canvas && this.canvas.parentNode)\\n                    this.canvas.parentNode.removeChild(this.canvas);\\n                if (this.bgCanvas && this.bgCanvas.parentNode)\\n                    this.canvas.parentNode.removeChild(this.canvas);\\n\\n                this.svg = null;\\n                this.canvas = null;\\n                this.path = null;\\n                this.group = null;\\n            }\\n            else {\\n                // if not a forced cleanup, just detach from DOM for now.\\n                if (this.canvas && this.canvas.parentNode) this.canvas.parentNode.removeChild(this.canvas);\\n                if (this.bgCanvas && this.bgCanvas.parentNode) this.bgCanvas.parentNode.removeChild(this.bgCanvas);\\n            }\\n        },\\n        reattach:function(instance) {\\n            var c = instance.getContainer();\\n            if (this.canvas && this.canvas.parentNode == null) c.appendChild(this.canvas);\\n            if (this.bgCanvas && this.bgCanvas.parentNode == null) c.appendChild(this.bgCanvas);\\n        },\\n        setVisible: function (v) {\\n            if (this.canvas) {\\n                this.canvas.style.display = v ? \\\"block\\\" : \\\"none\\\";\\n            }\\n        }\\n    });\\n\\n    /*\\n     * Base class for SVG connectors.\\n     */\\n    _jp.ConnectorRenderers.svg = function (params) {\\n        var self = this,\\n            _super = SvgComponent.apply(this, [\\n                {\\n                    cssClass: params._jsPlumb.connectorClass + (this.isEditable() ? \\\" \\\" + params._jsPlumb.editableConnectorClass : \\\"\\\"),\\n                    originalArgs: arguments,\\n                    pointerEventsSpec: \\\"none\\\",\\n                    _jsPlumb: params._jsPlumb\\n                }\\n            ]);\\n\\n        var _superSetEditable = this.setEditable;\\n        this.setEditable = function(e) {\\n            var result = _superSetEditable.apply(this, [e]);\\n            jsPlumb[result ? \\\"addClass\\\" : \\\"removeClass\\\"](this.canvas, this._jsPlumb.instance.editableConnectorClass);\\n        };\\n\\n        _super.renderer.paint = function (style, anchor, extents) {\\n\\n            var segments = self.getSegments(), p = \\\"\\\", offset = [0, 0];\\n            if (extents.xmin < 0) offset[0] = -extents.xmin;\\n            if (extents.ymin < 0) offset[1] = -extents.ymin;\\n\\n            if (segments.length > 0) {\\n\\n                // create path from segments.\\n                for (var i = 0; i < segments.length; i++) {\\n                    p += _jp.Segments.svg.SegmentRenderer.getPath(segments[i]);\\n                    p += \\\" \\\";\\n                }\\n\\n                var a = {\\n                        d: p,\\n                        transform: \\\"translate(\\\" + offset[0] + \\\",\\\" + offset[1] + \\\")\\\",\\n                        \\\"pointer-events\\\": params[\\\"pointer-events\\\"] || \\\"visibleStroke\\\"\\n                    },\\n                    outlineStyle = null,\\n                    d = [self.x, self.y, self.w, self.h];\\n\\n                // outline style.  actually means drawing an svg object underneath the main one.\\n                if (style.outlineColor) {\\n                    var outlineWidth = style.outlineWidth || 1,\\n                        outlineStrokeWidth = style.lineWidth + (2 * outlineWidth);\\n                    outlineStyle = _jp.extend({}, style);\\n                    delete outlineStyle.gradient;\\n                    outlineStyle.strokeStyle = style.outlineColor;\\n                    outlineStyle.lineWidth = outlineStrokeWidth;\\n\\n                    if (self.bgPath == null) {\\n                        self.bgPath = _node(\\\"path\\\", a);\\n                        _jp.addClass(self.bgPath, _jp.connectorOutlineClass);\\n                        _appendAtIndex(self.svg, self.bgPath, 0);\\n                    }\\n                    else {\\n                        _attr(self.bgPath, a);\\n                    }\\n\\n                    _applyStyles(self.svg, self.bgPath, outlineStyle, d, self);\\n                }\\n\\n                if (self.path == null) {\\n                    self.path = _node(\\\"path\\\", a);\\n                    _appendAtIndex(self.svg, self.path, style.outlineColor ? 1 : 0);\\n                }\\n                else {\\n                    _attr(self.path, a);\\n                }\\n\\n                _applyStyles(self.svg, self.path, style, d, self);\\n            }\\n        };\\n    };\\n    _ju.extend(_jp.ConnectorRenderers.svg, SvgComponent);\\n\\n// ******************************* svg segment renderer *****************************************************\\t\\n\\n    _jp.Segments.svg = {\\n        SegmentRenderer: {\\n            getPath: function (segment) {\\n                return ({\\n                    \\\"Straight\\\": function () {\\n                        var d = segment.getCoordinates();\\n                        return \\\"M \\\" + d.x1 + \\\" \\\" + d.y1 + \\\" L \\\" + d.x2 + \\\" \\\" + d.y2;\\n                    },\\n                    \\\"Bezier\\\": function () {\\n                        var d = segment.params;\\n                        return \\\"M \\\" + d.x1 + \\\" \\\" + d.y1 +\\n                            \\\" C \\\" + d.cp1x + \\\" \\\" + d.cp1y + \\\" \\\" + d.cp2x + \\\" \\\" + d.cp2y + \\\" \\\" + d.x2 + \\\" \\\" + d.y2;\\n                    },\\n                    \\\"Arc\\\": function () {\\n                        var d = segment.params,\\n                            laf = segment.sweep > Math.PI ? 1 : 0,\\n                            sf = segment.anticlockwise ? 0 : 1;\\n\\n                        return \\\"M\\\" + segment.x1 + \\\" \\\" + segment.y1 + \\\" A \\\" + segment.radius + \\\" \\\" + d.r + \\\" 0 \\\" + laf + \\\",\\\" + sf + \\\" \\\" + segment.x2 + \\\" \\\" + segment.y2;\\n                    }\\n                })[segment.type]();\\n            }\\n        }\\n    };\\n\\n// ******************************* /svg segments *****************************************************\\n\\n    /*\\n     * Base class for SVG endpoints.\\n     */\\n    var SvgEndpoint = _jp.SvgEndpoint = function (params) {\\n        var _super = SvgComponent.apply(this, [\\n            {\\n                cssClass: params._jsPlumb.endpointClass,\\n                originalArgs: arguments,\\n                pointerEventsSpec: \\\"all\\\",\\n                useDivWrapper: true,\\n                _jsPlumb: params._jsPlumb\\n            }\\n        ]);\\n\\n        _super.renderer.paint = function (style) {\\n            var s = _jp.extend({}, style);\\n            if (s.outlineColor) {\\n                s.strokeWidth = s.outlineWidth;\\n                s.strokeStyle = s.outlineColor;\\n            }\\n\\n            if (this.node == null) {\\n                this.node = this.makeNode(s);\\n                this.svg.appendChild(this.node);\\n            }\\n            else if (this.updateNode != null) {\\n                this.updateNode(this.node);\\n            }\\n            _applyStyles(this.svg, this.node, s, [ this.x, this.y, this.w, this.h ], this);\\n            _pos(this.node, [ this.x, this.y ]);\\n        }.bind(this);\\n\\n    };\\n    _ju.extend(SvgEndpoint, SvgComponent);\\n\\n    /*\\n     * SVG Dot Endpoint\\n     */\\n    _jp.Endpoints.svg.Dot = function () {\\n        _jp.Endpoints.Dot.apply(this, arguments);\\n        SvgEndpoint.apply(this, arguments);\\n        this.makeNode = function (style) {\\n            return _node(\\\"circle\\\", {\\n                \\\"cx\\\": this.w / 2,\\n                \\\"cy\\\": this.h / 2,\\n                \\\"r\\\": this.radius\\n            });\\n        };\\n        this.updateNode = function (node) {\\n            _attr(node, {\\n                \\\"cx\\\": this.w / 2,\\n                \\\"cy\\\": this.h / 2,\\n                \\\"r\\\": this.radius\\n            });\\n        };\\n    };\\n    _ju.extend(_jp.Endpoints.svg.Dot, [_jp.Endpoints.Dot, SvgEndpoint]);\\n\\n    /*\\n     * SVG Rectangle Endpoint\\n     */\\n    _jp.Endpoints.svg.Rectangle = function () {\\n        _jp.Endpoints.Rectangle.apply(this, arguments);\\n        SvgEndpoint.apply(this, arguments);\\n        this.makeNode = function (style) {\\n            return _node(\\\"rect\\\", {\\n                \\\"width\\\": this.w,\\n                \\\"height\\\": this.h\\n            });\\n        };\\n        this.updateNode = function (node) {\\n            _attr(node, {\\n                \\\"width\\\": this.w,\\n                \\\"height\\\": this.h\\n            });\\n        };\\n    };\\n    _ju.extend(_jp.Endpoints.svg.Rectangle, [_jp.Endpoints.Rectangle, SvgEndpoint]);\\n\\n    /*\\n     * SVG Image Endpoint is the default image endpoint.\\n     */\\n    _jp.Endpoints.svg.Image = _jp.Endpoints.Image;\\n    /*\\n     * Blank endpoint in svg renderer is the default Blank endpoint.\\n     */\\n    _jp.Endpoints.svg.Blank = _jp.Endpoints.Blank;\\n    /*\\n     * Label overlay in svg renderer is the default Label overlay.\\n     */\\n    _jp.Overlays.svg.Label = _jp.Overlays.Label;\\n    /*\\n     * Custom overlay in svg renderer is the default Custom overlay.\\n     */\\n    _jp.Overlays.svg.Custom = _jp.Overlays.Custom;\\n\\n    var AbstractSvgArrowOverlay = function (superclass, originalArgs) {\\n        superclass.apply(this, originalArgs);\\n        _jp.jsPlumbUIComponent.apply(this, originalArgs);\\n        this.isAppendedAtTopLevel = false;\\n        var self = this;\\n        this.path = null;\\n        this.paint = function (params, containerExtents) {\\n            // only draws on connections, not endpoints.\\n            if (params.component.svg && containerExtents) {\\n                if (this.path == null) {\\n                    this.path = _node(\\\"path\\\", {\\n                        \\\"pointer-events\\\": \\\"all\\\"\\n                    });\\n                    params.component.svg.appendChild(this.path);\\n                    if (this.elementCreated) {\\n                        this.elementCreated(this.path, params.component);\\n                    }\\n\\n                    this.canvas = params.component.svg; // for the sake of completeness; this behaves the same as other overlays\\n                }\\n                var clazz = originalArgs && (originalArgs.length == 1) ? (originalArgs[0].cssClass || \\\"\\\") : \\\"\\\",\\n                    offset = [0, 0];\\n\\n                if (containerExtents.xmin < 0) offset[0] = -containerExtents.xmin;\\n                if (containerExtents.ymin < 0) offset[1] = -containerExtents.ymin;\\n\\n                _attr(this.path, {\\n                    \\\"d\\\": makePath(params.d),\\n                    \\\"class\\\": clazz,\\n                    stroke: params.strokeStyle ? params.strokeStyle : null,\\n                    fill: params.fillStyle ? params.fillStyle : null,\\n                    transform: \\\"translate(\\\" + offset[0] + \\\",\\\" + offset[1] + \\\")\\\"\\n                });\\n            }\\n        };\\n        var makePath = function (d) {\\n            return (isNaN(d.cxy.x) || isNaN(d.cxy.y)) ? \\\"\\\" : \\\"M\\\" + d.hxy.x + \\\",\\\" + d.hxy.y +\\n                \\\" L\\\" + d.tail[0].x + \\\",\\\" + d.tail[0].y +\\n                \\\" L\\\" + d.cxy.x + \\\",\\\" + d.cxy.y +\\n                \\\" L\\\" + d.tail[1].x + \\\",\\\" + d.tail[1].y +\\n                \\\" L\\\" + d.hxy.x + \\\",\\\" + d.hxy.y;\\n        };\\n        this.transfer = function(target) {\\n            if (target.canvas && this.path && this.path.parentNode) {\\n                this.path.parentNode.removeChild(this.path);\\n                target.canvas.appendChild(this.path);\\n            }\\n        };\\n    };\\n    _ju.extend(AbstractSvgArrowOverlay, [_jp.jsPlumbUIComponent, _jp.Overlays.AbstractOverlay], {\\n        cleanup: function (force) {\\n            if (this.path != null) {\\n                if (force)\\n                    this._jsPlumb.instance.removeElement(this.path);\\n                else\\n                    if (this.path.parentNode)\\n                        this.path.parentNode.removeChild(this.path);\\n            }\\n        },\\n        reattach:function(instance) {\\n            if (this.path && this.canvas && this.path.parentNode == null)\\n                this.canvas.appendChild(this.path);\\n        },\\n        setVisible: function (v) {\\n            if (this.path != null) (this.path.style.display = (v ? \\\"block\\\" : \\\"none\\\"));\\n        }\\n    });\\n\\n    _jp.Overlays.svg.Arrow = function () {\\n        AbstractSvgArrowOverlay.apply(this, [_jp.Overlays.Arrow, arguments]);\\n    };\\n    _ju.extend(_jp.Overlays.svg.Arrow, [ _jp.Overlays.Arrow, AbstractSvgArrowOverlay ]);\\n\\n    _jp.Overlays.svg.PlainArrow = function () {\\n        AbstractSvgArrowOverlay.apply(this, [_jp.Overlays.PlainArrow, arguments]);\\n    };\\n    _ju.extend(_jp.Overlays.svg.PlainArrow, [ _jp.Overlays.PlainArrow, AbstractSvgArrowOverlay ]);\\n\\n    _jp.Overlays.svg.Diamond = function () {\\n        AbstractSvgArrowOverlay.apply(this, [_jp.Overlays.Diamond, arguments]);\\n    };\\n    _ju.extend(_jp.Overlays.svg.Diamond, [ _jp.Overlays.Diamond, AbstractSvgArrowOverlay ]);\\n\\n    // a test\\n    _jp.Overlays.svg.GuideLines = function () {\\n        var path = null, self = this, p1_1, p1_2;\\n        _jp.Overlays.GuideLines.apply(this, arguments);\\n        this.paint = function (params, containerExtents) {\\n            if (path == null) {\\n                path = _node(\\\"path\\\");\\n                params.connector.svg.appendChild(path);\\n                self.attachListeners(path, params.connector);\\n                self.attachListeners(path, self);\\n\\n                p1_1 = _node(\\\"path\\\");\\n                params.connector.svg.appendChild(p1_1);\\n                self.attachListeners(p1_1, params.connector);\\n                self.attachListeners(p1_1, self);\\n\\n                p1_2 = _node(\\\"path\\\");\\n                params.connector.svg.appendChild(p1_2);\\n                self.attachListeners(p1_2, params.connector);\\n                self.attachListeners(p1_2, self);\\n            }\\n\\n            var offset = [0, 0];\\n            if (containerExtents.xmin < 0) offset[0] = -containerExtents.xmin;\\n            if (containerExtents.ymin < 0) offset[1] = -containerExtents.ymin;\\n\\n            _attr(path, {\\n                \\\"d\\\": makePath(params.head, params.tail),\\n                stroke: \\\"red\\\",\\n                fill: null,\\n                transform: \\\"translate(\\\" + offset[0] + \\\",\\\" + offset[1] + \\\")\\\"\\n            });\\n\\n            _attr(p1_1, {\\n                \\\"d\\\": makePath(params.tailLine[0], params.tailLine[1]),\\n                stroke: \\\"blue\\\",\\n                fill: null,\\n                transform: \\\"translate(\\\" + offset[0] + \\\",\\\" + offset[1] + \\\")\\\"\\n            });\\n\\n            _attr(p1_2, {\\n                \\\"d\\\": makePath(params.headLine[0], params.headLine[1]),\\n                stroke: \\\"green\\\",\\n                fill: null,\\n                transform: \\\"translate(\\\" + offset[0] + \\\",\\\" + offset[1] + \\\")\\\"\\n            });\\n        };\\n\\n        var makePath = function (d1, d2) {\\n            return \\\"M \\\" + d1.x + \\\",\\\" + d1.y +\\n                \\\" L\\\" + d2.x + \\\",\\\" + d2.y;\\n        };\\n    };\\n    _ju.extend(_jp.Overlays.svg.GuideLines, _jp.Overlays.GuideLines);\\n}).call(this);\\n\\n/*\\n * jsPlumb\\n * \\n * Title:jsPlumb 2.0.2\\n * \\n * Provides a way to visually connect elements on an HTML page, using SVG.\\n * \\n * This file contains the 'vanilla' adapter - having no external dependencies other than bundled libs.\\n *\\n * Copyright (c) 2010 - 2015 jsPlumb (hello@jsplumbtoolkit.com)\\n * \\n * http://jsplumbtoolkit.com\\n * http://github.com/sporritt/jsplumb\\n * \\n * Dual licensed under the MIT and GPL2 licenses.\\n */\\n;\\n(function () {\\n\\n    \\\"use strict\\\";\\n    var root = this, _jp = root.jsPlumb, _ju = root.jsPlumbUtil,\\n        _jk = root.Katavorio, _jg = root.Biltong;\\n\\n    var _getDragManager = function (instance, category) {\\n\\n        category = category || \\\"main\\\";\\n        var key = \\\"_katavorio_\\\" + category;\\n        var k = instance[key],\\n            e = instance.getEventManager();\\n\\n        if (!k) {\\n            k = new _jk({\\n                bind: e.on,\\n                unbind: e.off,\\n                getSize: jsPlumb.getSize,\\n                getPosition: function (el) {\\n                    // if this is a nested draggable then compute the offset against its own offsetParent, otherwise\\n                    // compute against the Container's origin. see also the getUIPosition method below.\\n                    var o = instance.getOffset(el, false, el._katavorioDrag ? el.offsetParent : null);\\n                    return [o.left, o.top];\\n                },\\n                setPosition: function (el, xy) {\\n                    el.style.left = xy[0] + \\\"px\\\";\\n                    el.style.top = xy[1] + \\\"px\\\";\\n                },\\n                addClass: jsPlumb.addClass,\\n                removeClass: jsPlumb.removeClass,\\n                intersects: _jg.intersects,\\n                indexOf: function(l, i) { return l.indexOf(i); },\\n                css: {\\n                    noSelect: instance.dragSelectClass,\\n                    droppable: \\\"jsplumb-droppable\\\",\\n                    draggable: \\\"jsplumb-draggable\\\",\\n                    drag: \\\"jsplumb-drag\\\",\\n                    selected: \\\"jsplumb-drag-selected\\\",\\n                    active: \\\"jsplumb-drag-active\\\",\\n                    hover: \\\"jsplumb-drag-hover\\\"\\n                }\\n            });\\n            instance[key] = k;\\n            instance.bind(\\\"zoom\\\", k.setZoom);\\n        }\\n        return k;\\n    };\\n\\n    var _animProps = function (o, p) {\\n        var _one = function (pName) {\\n            if (p[pName] != null) {\\n                if (_ju.isString(p[pName])) {\\n                    var m = p[pName].match(/-=/) ? -1 : 1,\\n                        v = p[pName].substring(2);\\n                    return o[pName] + (m * v);\\n                }\\n                else return p[pName];\\n            }\\n            else\\n                return o[pName];\\n        };\\n        return [ _one(\\\"left\\\"), _one(\\\"top\\\") ];\\n    };\\n\\n    _jp.extend(root.jsPlumbInstance.prototype, {\\n\\n        animationSupported:true,\\n        getElement: function (el) {\\n            if (el == null) return null;\\n            // here we pluck the first entry if el was a list of entries.\\n            // this is not my favourite thing to do, but previous versions of\\n            // jsplumb supported jquery selectors, and it is possible a selector\\n            // will be passed in here.\\n            el = typeof el === \\\"string\\\" ? el : el.length != null && el.enctype == null ? el[0] : el;\\n            return typeof el === \\\"string\\\" ? document.getElementById(el) : el;\\n        },\\n        removeElement: function (element) {\\n            _getDragManager(this).elementRemoved(element);\\n            this.getEventManager().remove(element);\\n        },\\n        //\\n        // this adapter supports a rudimentary animation function. no easing is supported.  only\\n        // left/top properties are supported. property delta args are expected to be in the form\\n        //\\n        // +=x.xxxx\\n        //\\n        // or\\n        //\\n        // -=x.xxxx\\n        //\\n        doAnimate: function (el, properties, options) {\\n            options = options || {};\\n            var o = this.getOffset(el),\\n                ap = _animProps(o, properties),\\n                ldist = ap[0] - o.left,\\n                tdist = ap[1] - o.top,\\n                d = options.duration || 250,\\n                step = 15, steps = d / step,\\n                linc = (step / d) * ldist,\\n                tinc = (step / d) * tdist,\\n                idx = 0,\\n                int = setInterval(function () {\\n                    jsPlumb.setPosition(el, {\\n                        left: o.left + (linc * (idx + 1)),\\n                        top: o.top + (tinc * (idx + 1))\\n                    });\\n                    if (options.step != null) options.step(idx, Math.ceil(steps));\\n                    idx++;\\n                    if (idx >= steps) {\\n                        window.clearInterval(int);\\n                        if (options.complete != null) options.complete();\\n                    }\\n                }, step);\\n        },\\n        // DRAG/DROP\\n        destroyDraggable: function (el, category) {\\n            _getDragManager(this, category).destroyDraggable(el);\\n        },\\n        destroyDroppable: function (el, category) {\\n            _getDragManager(this, category).destroyDroppable(el);\\n        },\\n        initDraggable: function (el, options, category) {\\n            _getDragManager(this, category).draggable(el, options);\\n        },\\n        initDroppable: function (el, options, category) {\\n            _getDragManager(this, category).droppable(el, options);\\n        },\\n        isAlreadyDraggable: function (el) {\\n            return el._katavorioDrag != null;\\n        },\\n        isDragSupported: function (el, options) {\\n            return true;\\n        },\\n        isDropSupported: function (el, options) {\\n            return true;\\n        },\\n        isElementDraggable: function (el) {\\n            el = jsPlumb.getElement(el);\\n            return el._katavorioDrag && el._katavorioDrag.isEnabled();\\n        },\\n        getDragObject: function (eventArgs) {\\n            return eventArgs[0].drag.getDragElement();\\n        },\\n        getDragScope: function (el) {\\n            return el._katavorioDrag && el._katavorioDrag.scopes.join(\\\" \\\") || \\\"\\\";\\n        },\\n        getDropEvent: function (args) {\\n            return args[0].e;\\n        },\\n        getUIPosition: function (eventArgs, zoom) {\\n            // here the position reported to us by Katavorio is relative to the element's offsetParent. For top\\n            // level nodes that is fine, but if we have a nested draggable then its offsetParent is actually\\n            // not going to be the jsplumb container; it's going to be some child of that element. In that case\\n            // we want to adjust the UI position to account for the offsetParent's position relative to the Container\\n            // origin.\\n            var el = eventArgs[0].el;\\n            var p = { left:eventArgs[0].pos[0], top:eventArgs[0].pos[1] };\\n            if (el._katavorioDrag && el.offsetParent !== this.getContainer()) {\\n                var oc = this.getOffset(el.offsetParent);\\n                p.left += oc.left;\\n                p.top += oc.top;\\n            }\\n            return p;\\n        },\\n        setDragFilter: function (el, filter, _exclude) {\\n            if (el._katavorioDrag) {\\n                el._katavorioDrag.setFilter(filter, _exclude);\\n            }\\n        },\\n        setElementDraggable: function (el, draggable) {\\n            el = jsPlumb.getElement(el);\\n            if (el._katavorioDrag)\\n                el._katavorioDrag.setEnabled(draggable);\\n        },\\n        setDragScope: function (el, scope) {\\n            if (el._katavorioDrag)\\n                el._katavorioDrag.k.setDragScope(el, scope);\\n        },\\n        setDropScope:function(el, scope) {\\n            if (el._katavorioDrop && el._katavorioDrop.length > 0) {\\n                el._katavorioDrop[0].k.setDropScope(el, scope);\\n            }\\n        },\\n        addToPosse:function(el, spec) {\\n            var specs = Array.prototype.slice.call(arguments, 1);\\n            var dm = _getDragManager(this);\\n            jsPlumb.each(el, function(_el) {\\n                _el = [ jsPlumb.getElement(_el) ];\\n                _el.push.apply(_el, specs );\\n                dm.addToPosse.apply(dm, _el);\\n            });\\n        },\\n        setPosse:function(el, spec) {\\n            var specs = Array.prototype.slice.call(arguments, 1);\\n            var dm = _getDragManager(this);\\n            jsPlumb.each(el, function(_el) {\\n                _el = [ jsPlumb.getElement(_el) ];\\n                _el.push.apply(_el, specs );\\n                dm.setPosse.apply(dm, _el);\\n            });\\n        },\\n        removeFromPosse:function(el, posseId) {\\n            var specs = Array.prototype.slice.call(arguments, 1);\\n            var dm = _getDragManager(this);\\n            jsPlumb.each(el, function(_el) {\\n                _el = [ jsPlumb.getElement(_el) ];\\n                _el.push.apply(_el, specs );\\n                dm.removeFromPosse.apply(dm, _el);\\n            });\\n        },\\n        removeFromAllPosses:function(el) {\\n            var dm = _getDragManager(this);\\n            jsPlumb.each(el, function(_el) { dm.removeFromAllPosses(jsPlumb.getElement(_el)); });\\n        },\\n        setPosseState:function(el, posseId, state) {\\n            var dm = _getDragManager(this);\\n            jsPlumb.each(el, function(_el) { dm.setPosseState(jsPlumb.getElement(_el), posseId, state); });\\n        },\\n        dragEvents: {\\n            'start': 'start', 'stop': 'stop', 'drag': 'drag', 'step': 'step',\\n            'over': 'over', 'out': 'out', 'drop': 'drop', 'complete': 'complete',\\n            'beforeStart':'beforeStart'\\n        },\\n        animEvents: {\\n            'step': \\\"step\\\", 'complete': 'complete'\\n        },\\n        stopDrag: function (el) {\\n            if (el._katavorioDrag)\\n                el._katavorioDrag.abort();\\n        },\\n        addToDragSelection: function (spec) {\\n            _getDragManager(this).select(spec);\\n        },\\n        removeFromDragSelection: function (spec) {\\n            _getDragManager(this).deselect(spec);\\n        },\\n        clearDragSelection: function () {\\n            _getDragManager(this).deselectAll();\\n        },\\n        trigger: function (el, event, originalEvent, payload) {\\n            this.getEventManager().trigger(el, event, originalEvent, payload);\\n        },\\n        doReset:function() {\\n            // look for katavorio instances and reset each one if found.\\n            for (var key in this) {\\n                if (key.indexOf(\\\"_katavorio_\\\") === 0) {\\n                    this[key].reset();\\n                }\\n            }\\n        }\\n    });\\n\\n    var ready = function (f) {\\n        var _do = function () {\\n            if (/complete|loaded|interactive/.test(document.readyState) && typeof(document.body) != \\\"undefined\\\" && document.body != null)\\n                f();\\n            else\\n                setTimeout(_do, 9);\\n        };\\n\\n        _do();\\n    };\\n    ready(_jp.init);\\n\\n}).call(this);\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/script-loader/~/raw-loader!./~/jsPlumb/dist/js/jsPlumb-2.0.7.js\n ** module id = 103\n ** module chunks = 0\n **/","/*\nCopyright (c) 2012-2014 Chris Pettitt\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\nmodule.exports = {\n  graphlib: require(\"./lib/graphlib\"),\n\n  layout: require(\"./lib/layout\"),\n  debug: require(\"./lib/debug\"),\n  util: {\n    time: require(\"./lib/util\").time,\n    notime: require(\"./lib/util\").notime\n  },\n  version: require(\"./lib/version\")\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/index.js\n ** module id = 104\n ** module chunks = 0\n **/","/* global window */\n\nvar graphlib;\n\nif (typeof require === \"function\") {\n  try {\n    graphlib = require(\"graphlib\");\n  } catch (e) {}\n}\n\nif (!graphlib) {\n  graphlib = window.graphlib;\n}\n\nmodule.exports = graphlib;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/lib/graphlib.js\n ** module id = 105\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2014, Chris Pettitt\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of the copyright holder nor the names of its contributors\n * may be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar lib = require(\"./lib\");\n\nmodule.exports = {\n  Graph: lib.Graph,\n  json: require(\"./lib/json\"),\n  alg: require(\"./lib/alg\"),\n  version: lib.version\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/~/graphlib/index.js\n ** module id = 106\n ** module chunks = 0\n **/","// Includes only the \"core\" of graphlib\nmodule.exports = {\n  Graph: require(\"./graph\"),\n  version: require(\"./version\")\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/~/graphlib/lib/index.js\n ** module id = 107\n ** module chunks = 0\n **/","\"use strict\";\n\nvar _ = require(\"./lodash\");\n\nmodule.exports = Graph;\n\nvar DEFAULT_EDGE_NAME = \"\\x00\",\n    GRAPH_NODE = \"\\x00\",\n    EDGE_KEY_DELIM = \"\\x01\";\n\n// Implementation notes:\n//\n//  * Node id query functions should return string ids for the nodes\n//  * Edge id query functions should return an \"edgeObj\", edge object, that is\n//    composed of enough information to uniquely identify an edge: {v, w, name}.\n//  * Internally we use an \"edgeId\", a stringified form of the edgeObj, to\n//    reference edges. This is because we need a performant way to look these\n//    edges up and, object properties, which have string keys, are the closest\n//    we're going to get to a performant hashtable in JavaScript.\n\nfunction Graph(opts) {\n  this._isDirected = _.has(opts, \"directed\") ? opts.directed : true;\n  this._isMultigraph = _.has(opts, \"multigraph\") ? opts.multigraph : false;\n  this._isCompound = _.has(opts, \"compound\") ? opts.compound : false;\n\n  // Label for the graph itself\n  this._label = undefined;\n\n  // Defaults to be set when creating a new node\n  this._defaultNodeLabelFn = _.constant(undefined);\n\n  // Defaults to be set when creating a new edge\n  this._defaultEdgeLabelFn = _.constant(undefined);\n\n  // v -> label\n  this._nodes = {};\n\n  if (this._isCompound) {\n    // v -> parent\n    this._parent = {};\n\n    // v -> children\n    this._children = {};\n    this._children[GRAPH_NODE] = {};\n  }\n\n  // v -> edgeObj\n  this._in = {};\n\n  // u -> v -> Number\n  this._preds = {};\n\n  // v -> edgeObj\n  this._out = {};\n\n  // v -> w -> Number\n  this._sucs = {};\n\n  // e -> edgeObj\n  this._edgeObjs = {};\n\n  // e -> label\n  this._edgeLabels = {};\n}\n\n/* Number of nodes in the graph. Should only be changed by the implementation. */\nGraph.prototype._nodeCount = 0;\n\n/* Number of edges in the graph. Should only be changed by the implementation. */\nGraph.prototype._edgeCount = 0;\n\n\n/* === Graph functions ========= */\n\nGraph.prototype.isDirected = function() {\n  return this._isDirected;\n};\n\nGraph.prototype.isMultigraph = function() {\n  return this._isMultigraph;\n};\n\nGraph.prototype.isCompound = function() {\n  return this._isCompound;\n};\n\nGraph.prototype.setGraph = function(label) {\n  this._label = label;\n  return this;\n};\n\nGraph.prototype.graph = function() {\n  return this._label;\n};\n\n\n/* === Node functions ========== */\n\nGraph.prototype.setDefaultNodeLabel = function(newDefault) {\n  if (!_.isFunction(newDefault)) {\n    newDefault = _.constant(newDefault);\n  }\n  this._defaultNodeLabelFn = newDefault;\n  return this;\n};\n\nGraph.prototype.nodeCount = function() {\n  return this._nodeCount;\n};\n\nGraph.prototype.nodes = function() {\n  return _.keys(this._nodes);\n};\n\nGraph.prototype.sources = function() {\n  return _.filter(this.nodes(), function(v) {\n    return _.isEmpty(this._in[v]);\n  }, this);\n};\n\nGraph.prototype.sinks = function() {\n  return _.filter(this.nodes(), function(v) {\n    return _.isEmpty(this._out[v]);\n  }, this);\n};\n\nGraph.prototype.setNodes = function(vs, value) {\n  var args = arguments;\n  _.each(vs, function(v) {\n    if (args.length > 1) {\n      this.setNode(v, value);\n    } else {\n      this.setNode(v);\n    }\n  }, this);\n  return this;\n};\n\nGraph.prototype.setNode = function(v, value) {\n  if (_.has(this._nodes, v)) {\n    if (arguments.length > 1) {\n      this._nodes[v] = value;\n    }\n    return this;\n  }\n\n  this._nodes[v] = arguments.length > 1 ? value : this._defaultNodeLabelFn(v);\n  if (this._isCompound) {\n    this._parent[v] = GRAPH_NODE;\n    this._children[v] = {};\n    this._children[GRAPH_NODE][v] = true;\n  }\n  this._in[v] = {};\n  this._preds[v] = {};\n  this._out[v] = {};\n  this._sucs[v] = {};\n  ++this._nodeCount;\n  return this;\n};\n\nGraph.prototype.node = function(v) {\n  return this._nodes[v];\n};\n\nGraph.prototype.hasNode = function(v) {\n  return _.has(this._nodes, v);\n};\n\nGraph.prototype.removeNode =  function(v) {\n  var self = this;\n  if (_.has(this._nodes, v)) {\n    var removeEdge = function(e) { self.removeEdge(self._edgeObjs[e]); };\n    delete this._nodes[v];\n    if (this._isCompound) {\n      this._removeFromParentsChildList(v);\n      delete this._parent[v];\n      _.each(this.children(v), function(child) {\n        this.setParent(child);\n      }, this);\n      delete this._children[v];\n    }\n    _.each(_.keys(this._in[v]), removeEdge);\n    delete this._in[v];\n    delete this._preds[v];\n    _.each(_.keys(this._out[v]), removeEdge);\n    delete this._out[v];\n    delete this._sucs[v];\n    --this._nodeCount;\n  }\n  return this;\n};\n\nGraph.prototype.setParent = function(v, parent) {\n  if (!this._isCompound) {\n    throw new Error(\"Cannot set parent in a non-compound graph\");\n  }\n\n  if (_.isUndefined(parent)) {\n    parent = GRAPH_NODE;\n  } else {\n    // Coerce parent to string\n    parent += \"\";\n    for (var ancestor = parent;\n         !_.isUndefined(ancestor);\n         ancestor = this.parent(ancestor)) {\n      if (ancestor === v) {\n        throw new Error(\"Setting \" + parent+ \" as parent of \" + v +\n                        \" would create create a cycle\");\n      }\n    }\n\n    this.setNode(parent);\n  }\n\n  this.setNode(v);\n  this._removeFromParentsChildList(v);\n  this._parent[v] = parent;\n  this._children[parent][v] = true;\n  return this;\n};\n\nGraph.prototype._removeFromParentsChildList = function(v) {\n  delete this._children[this._parent[v]][v];\n};\n\nGraph.prototype.parent = function(v) {\n  if (this._isCompound) {\n    var parent = this._parent[v];\n    if (parent !== GRAPH_NODE) {\n      return parent;\n    }\n  }\n};\n\nGraph.prototype.children = function(v) {\n  if (_.isUndefined(v)) {\n    v = GRAPH_NODE;\n  }\n\n  if (this._isCompound) {\n    var children = this._children[v];\n    if (children) {\n      return _.keys(children);\n    }\n  } else if (v === GRAPH_NODE) {\n    return this.nodes();\n  } else if (this.hasNode(v)) {\n    return [];\n  }\n};\n\nGraph.prototype.predecessors = function(v) {\n  var predsV = this._preds[v];\n  if (predsV) {\n    return _.keys(predsV);\n  }\n};\n\nGraph.prototype.successors = function(v) {\n  var sucsV = this._sucs[v];\n  if (sucsV) {\n    return _.keys(sucsV);\n  }\n};\n\nGraph.prototype.neighbors = function(v) {\n  var preds = this.predecessors(v);\n  if (preds) {\n    return _.union(preds, this.successors(v));\n  }\n};\n\nGraph.prototype.filterNodes = function(filter) {\n  var copy = new this.constructor({\n    directed: this._isDirected,\n    multigraph: this._isMultigraph,\n    compound: this._isCompound\n  });\n\n  copy.setGraph(this.graph());\n\n  _.each(this._nodes, function(value, v) {\n    if (filter(v)) {\n      copy.setNode(v, value);\n    }\n  }, this);\n\n  _.each(this._edgeObjs, function(e) {\n    if (copy.hasNode(e.v) && copy.hasNode(e.w)) {\n      copy.setEdge(e, this.edge(e));\n    }\n  }, this);\n\n  var self = this;\n  var parents = {};\n  function findParent(v) {\n    var parent = self.parent(v);\n    if (parent === undefined || copy.hasNode(parent)) {\n      parents[v] = parent;\n      return parent;\n    } else if (parent in parents) {\n      return parents[parent];\n    } else {\n      return findParent(parent);\n    }\n  }\n\n  if (this._isCompound) {\n    _.each(copy.nodes(), function(v) {\n      copy.setParent(v, findParent(v));\n    });\n  }\n\n  return copy;\n};\n\n/* === Edge functions ========== */\n\nGraph.prototype.setDefaultEdgeLabel = function(newDefault) {\n  if (!_.isFunction(newDefault)) {\n    newDefault = _.constant(newDefault);\n  }\n  this._defaultEdgeLabelFn = newDefault;\n  return this;\n};\n\nGraph.prototype.edgeCount = function() {\n  return this._edgeCount;\n};\n\nGraph.prototype.edges = function() {\n  return _.values(this._edgeObjs);\n};\n\nGraph.prototype.setPath = function(vs, value) {\n  var self = this,\n      args = arguments;\n  _.reduce(vs, function(v, w) {\n    if (args.length > 1) {\n      self.setEdge(v, w, value);\n    } else {\n      self.setEdge(v, w);\n    }\n    return w;\n  });\n  return this;\n};\n\n/*\n * setEdge(v, w, [value, [name]])\n * setEdge({ v, w, [name] }, [value])\n */\nGraph.prototype.setEdge = function() {\n  var v, w, name, value,\n      valueSpecified = false,\n      arg0 = arguments[0];\n\n  if (typeof arg0 === \"object\" && arg0 !== null && \"v\" in arg0) {\n    v = arg0.v;\n    w = arg0.w;\n    name = arg0.name;\n    if (arguments.length === 2) {\n      value = arguments[1];\n      valueSpecified = true;\n    }\n  } else {\n    v = arg0;\n    w = arguments[1];\n    name = arguments[3];\n    if (arguments.length > 2) {\n      value = arguments[2];\n      valueSpecified = true;\n    }\n  }\n\n  v = \"\" + v;\n  w = \"\" + w;\n  if (!_.isUndefined(name)) {\n    name = \"\" + name;\n  }\n\n  var e = edgeArgsToId(this._isDirected, v, w, name);\n  if (_.has(this._edgeLabels, e)) {\n    if (valueSpecified) {\n      this._edgeLabels[e] = value;\n    }\n    return this;\n  }\n\n  if (!_.isUndefined(name) && !this._isMultigraph) {\n    throw new Error(\"Cannot set a named edge when isMultigraph = false\");\n  }\n\n  // It didn't exist, so we need to create it.\n  // First ensure the nodes exist.\n  this.setNode(v);\n  this.setNode(w);\n\n  this._edgeLabels[e] = valueSpecified ? value : this._defaultEdgeLabelFn(v, w, name);\n\n  var edgeObj = edgeArgsToObj(this._isDirected, v, w, name);\n  // Ensure we add undirected edges in a consistent way.\n  v = edgeObj.v;\n  w = edgeObj.w;\n\n  Object.freeze(edgeObj);\n  this._edgeObjs[e] = edgeObj;\n  incrementOrInitEntry(this._preds[w], v);\n  incrementOrInitEntry(this._sucs[v], w);\n  this._in[w][e] = edgeObj;\n  this._out[v][e] = edgeObj;\n  this._edgeCount++;\n  return this;\n};\n\nGraph.prototype.edge = function(v, w, name) {\n  var e = (arguments.length === 1\n            ? edgeObjToId(this._isDirected, arguments[0])\n            : edgeArgsToId(this._isDirected, v, w, name));\n  return this._edgeLabels[e];\n};\n\nGraph.prototype.hasEdge = function(v, w, name) {\n  var e = (arguments.length === 1\n            ? edgeObjToId(this._isDirected, arguments[0])\n            : edgeArgsToId(this._isDirected, v, w, name));\n  return _.has(this._edgeLabels, e);\n};\n\nGraph.prototype.removeEdge = function(v, w, name) {\n  var e = (arguments.length === 1\n            ? edgeObjToId(this._isDirected, arguments[0])\n            : edgeArgsToId(this._isDirected, v, w, name)),\n      edge = this._edgeObjs[e];\n  if (edge) {\n    v = edge.v;\n    w = edge.w;\n    delete this._edgeLabels[e];\n    delete this._edgeObjs[e];\n    decrementOrRemoveEntry(this._preds[w], v);\n    decrementOrRemoveEntry(this._sucs[v], w);\n    delete this._in[w][e];\n    delete this._out[v][e];\n    this._edgeCount--;\n  }\n  return this;\n};\n\nGraph.prototype.inEdges = function(v, u) {\n  var inV = this._in[v];\n  if (inV) {\n    var edges = _.values(inV);\n    if (!u) {\n      return edges;\n    }\n    return _.filter(edges, function(edge) { return edge.v === u; });\n  }\n};\n\nGraph.prototype.outEdges = function(v, w) {\n  var outV = this._out[v];\n  if (outV) {\n    var edges = _.values(outV);\n    if (!w) {\n      return edges;\n    }\n    return _.filter(edges, function(edge) { return edge.w === w; });\n  }\n};\n\nGraph.prototype.nodeEdges = function(v, w) {\n  var inEdges = this.inEdges(v, w);\n  if (inEdges) {\n    return inEdges.concat(this.outEdges(v, w));\n  }\n};\n\nfunction incrementOrInitEntry(map, k) {\n  if (map[k]) {\n    map[k]++;\n  } else {\n    map[k] = 1;\n  }\n}\n\nfunction decrementOrRemoveEntry(map, k) {\n  if (!--map[k]) { delete map[k]; }\n}\n\nfunction edgeArgsToId(isDirected, v_, w_, name) {\n  var v = \"\" + v_;\n  var w = \"\" + w_;\n  if (!isDirected && v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  return v + EDGE_KEY_DELIM + w + EDGE_KEY_DELIM +\n             (_.isUndefined(name) ? DEFAULT_EDGE_NAME : name);\n}\n\nfunction edgeArgsToObj(isDirected, v_, w_, name) {\n  var v = \"\" + v_;\n  var w = \"\" + w_;\n  if (!isDirected && v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  var edgeObj =  { v: v, w: w };\n  if (name) {\n    edgeObj.name = name;\n  }\n  return edgeObj;\n}\n\nfunction edgeObjToId(isDirected, edgeObj) {\n  return edgeArgsToId(isDirected, edgeObj.v, edgeObj.w, edgeObj.name);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/~/graphlib/lib/graph.js\n ** module id = 108\n ** module chunks = 0\n **/","/* global window */\n\nvar lodash;\n\nif (typeof require === \"function\") {\n  try {\n    lodash = require(\"lodash\");\n  } catch (e) {}\n}\n\nif (!lodash) {\n  lodash = window._;\n}\n\nmodule.exports = lodash;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/~/graphlib/lib/lodash.js\n ** module id = 109\n ** module chunks = 0\n **/","/**\n * @license\n * lodash 3.10.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern -d -o ./index.js`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '3.10.1';\n\n  /** Used to compose bitmasks for wrapper metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256;\n\n  /** Used as default options for `_.trunc`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect when a function becomes hot. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      weakMapTag = '[object WeakMap]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\n  /**\n   * Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns)\n   * and those outlined by [`EscapeRegExpPattern`](http://ecma-international.org/ecma-262/6.0/#sec-escaperegexppattern).\n   */\n  var reRegExpChars = /^[:!,]|[\\\\^$.*+?()[\\]{}|\\/]|(^[0-9a-fA-Fnrtuvx])|([\\n\\r\\u2028\\u2029])/g,\n      reHasRegExpChars = RegExp(reRegExpChars.source);\n\n  /** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */\n  var reComboMark = /[\\u0300-\\u036f\\ufe20-\\ufe23]/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHasHexPrefix = /^0[xX]/;\n\n  /** Used to detect host constructors (Safari > 5). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^\\d+$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to match words to create compound words. */\n  var reWords = (function() {\n    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\n    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n  }());\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',\n    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'isFinite',\n    'parseFloat', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[mapTag] = cloneableTags[setTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used to escape characters for inclusion in compiled regexes. */\n  var regexpEscapes = {\n    '0': 'x30', '1': 'x31', '2': 'x32', '3': 'x33', '4': 'x34',\n    '5': 'x35', '6': 'x36', '7': 'x37', '8': 'x38', '9': 'x39',\n    'A': 'x41', 'B': 'x42', 'C': 'x43', 'D': 'x44', 'E': 'x45', 'F': 'x46',\n    'a': 'x61', 'b': 'x62', 'c': 'x63', 'd': 'x64', 'e': 'x65', 'f': 'x66',\n    'n': 'x6e', 'r': 'x72', 't': 'x74', 'u': 'x75', 'v': 'x76', 'x': 'x78'\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = objectTypes[typeof self] && self && self.Object && self;\n\n  /** Detect free variable `window`. */\n  var freeWindow = objectTypes[typeof window] && window && window.Object && window;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /**\n   * Used as a reference to the global object.\n   *\n   * The `this` value is used if it's the global object to avoid Greasemonkey's\n   * restricted `window` object, otherwise the `window` object is used.\n   */\n  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `compareAscending` which compares values and\n   * sorts them in ascending order without guaranteeing a stable sort.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function baseCompareAscending(value, other) {\n    if (value !== other) {\n      var valIsNull = value === null,\n          valIsUndef = value === undefined,\n          valIsReflexive = value === value;\n\n      var othIsNull = other === null,\n          othIsUndef = other === undefined,\n          othIsReflexive = other === other;\n\n      if ((value > other && !othIsNull) || !valIsReflexive ||\n          (valIsNull && !othIsUndef && othIsReflexive) ||\n          (valIsUndef && othIsReflexive)) {\n        return 1;\n      }\n      if ((value < other && !valIsNull) || !othIsReflexive ||\n          (othIsNull && !valIsUndef && valIsReflexive) ||\n          (othIsUndef && valIsReflexive)) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromRight) {\n    var length = array.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return indexOfNaN(array, fromIndex);\n    }\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isFunction` without support for environments\n   * with incorrect `typeof` results.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n   */\n  function baseIsFunction(value) {\n    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n    return typeof value == 'function' || false;\n  }\n\n  /**\n   * Converts `value` to a string if it's not one. An empty string is returned\n   * for `null` or `undefined` values.\n   *\n   * @private\n   * @param {*} value The value to process.\n   * @returns {string} Returns the string.\n   */\n  function baseToString(value) {\n    return value == null ? '' : (value + '');\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the first character not found in `chars`.\n   */\n  function charsLeftIndex(string, chars) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the last character not found in `chars`.\n   */\n  function charsRightIndex(string, chars) {\n    var index = string.length;\n\n    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n   * sort them in ascending order.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareAscending(object, other) {\n    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n  }\n\n  /**\n   * Used by `_.sortByOrder` to compare multiple properties of a value to another\n   * and stable sort them.\n   *\n   * If `orders` is unspecified, all valuess are sorted in ascending order. Otherwise,\n   * a value is sorted in ascending order if its corresponding order is \"asc\", and\n   * descending if \"desc\".\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {boolean[]} orders The order to sort by for each property.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareMultiple(object, other, orders) {\n    var index = -1,\n        objCriteria = object.criteria,\n        othCriteria = other.criteria,\n        length = objCriteria.length,\n        ordersLength = orders.length;\n\n    while (++index < length) {\n      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n      if (result) {\n        if (index >= ordersLength) {\n          return result;\n        }\n        var order = orders[index];\n        return result * ((order === 'asc' || order === true) ? 1 : -1);\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to provide the same value for\n    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n    // for more details.\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  function deburrLetter(letter) {\n    return deburredLetters[letter];\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n\n  /**\n   * Used by `_.escapeRegExp` to escape characters for inclusion in compiled regexes.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @param {string} leadingChar The capture group for a leading character.\n   * @param {string} whitespaceChar The capture group for a whitespace character.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeRegExpChar(chr, leadingChar, whitespaceChar) {\n    if (leadingChar) {\n      chr = regexpEscapes[chr];\n    } else if (whitespaceChar) {\n      chr = stringEscapes[chr];\n    }\n    return '\\\\' + chr;\n  }\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n   */\n  function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 0 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var other = array[index];\n      if (other !== other) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if `value` is object-like.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   */\n  function isObjectLike(value) {\n    return !!value && typeof value == 'object';\n  }\n\n  /**\n   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n   * character code is whitespace.\n   *\n   * @private\n   * @param {number} charCode The character code to inspect.\n   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n   */\n  function isSpace(charCode) {\n    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||\n      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      if (array[index] === placeholder) {\n        array[index] = PLACEHOLDER;\n        result[++resIndex] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * An implementation of `_.uniq` optimized for sorted arrays without support\n   * for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} [iteratee] The function invoked per iteration.\n   * @returns {Array} Returns the new duplicate-value-free array.\n   */\n  function sortedUniq(array, iteratee) {\n    var seen,\n        index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index],\n          computed = iteratee ? iteratee(value, index, array) : value;\n\n      if (!index || seen !== computed) {\n        seen = computed;\n        result[++resIndex] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the first non-whitespace character.\n   */\n  function trimmedLeftIndex(string) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedRightIndex(string) {\n    var index = string.length;\n\n    while (index-- && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(chr) {\n    return htmlUnescapes[chr];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the given `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utility\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // using `context` to mock `Date#getTime` use in `_.now`\n   * var mock = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': getTimeMock };\n   *   }\n   * });\n   *\n   * // or creating a suped-up `defer` in Node.js\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See https://es5.github.io/#x11.1.5 for more details.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Number = context.Number,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for native method references. */\n    var arrayProto = Array.prototype,\n        objectProto = Object.prototype,\n        stringProto = String.prototype;\n\n    /** Used to resolve the decompiled source of functions. */\n    var fnToString = Function.prototype.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /**\n     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Native method references. */\n    var ArrayBuffer = context.ArrayBuffer,\n        clearTimeout = context.clearTimeout,\n        parseFloat = context.parseFloat,\n        pow = Math.pow,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        Set = getNative(context, 'Set'),\n        setTimeout = context.setTimeout,\n        splice = arrayProto.splice,\n        Uint8Array = context.Uint8Array,\n        WeakMap = getNative(context, 'WeakMap');\n\n    /* Native method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeCreate = getNative(Object, 'create'),\n        nativeFloor = Math.floor,\n        nativeIsArray = getNative(Array, 'isArray'),\n        nativeIsFinite = context.isFinite,\n        nativeKeys = getNative(Object, 'keys'),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = getNative(Date, 'now'),\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random;\n\n    /** Used as references for `-Infinity` and `Infinity`. */\n    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\n    /** Used as references for the maximum length and index of an array. */\n    var MAX_ARRAY_LENGTH = 4294967295,\n        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n    /**\n     * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n     * of an array-like value.\n     */\n    var MAX_SAFE_INTEGER = 9007199254740991;\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n     * Methods that operate on and return arrays, collections, and functions can\n     * be chained together. Methods that retrieve a single value or may return a\n     * primitive value will automatically end the chain returning the unwrapped\n     * value. Explicit chaining may be enabled using `_.chain`. The execution of\n     * chained methods is lazy, that is, execution is deferred until `_#value`\n     * is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n     * fusion is an optimization strategy which merge iteratee calls; this can help\n     * to avoid the creation of intermediate data structures and greatly reduce the\n     * number of iteratee executions.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n     * `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n     * and `where`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defaultsDeep`,\n     * `defer`, `delay`, `difference`, `drop`, `dropRight`, `dropRightWhile`,\n     * `dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`,\n     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n     * `invoke`, `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`,\n     * `matchesProperty`, `memoize`, `merge`, `method`, `methodOf`, `mixin`,\n     * `modArgs`, `negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n     * `partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,\n     * `pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `restParam`,\n     * `reverse`, `set`, `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`,\n     * `sortByOrder`, `splice`, `spread`, `take`, `takeRight`, `takeRightWhile`,\n     * `takeWhile`, `tap`, `throttle`, `thru`, `times`, `toArray`, `toPlainObject`,\n     * `transform`, `union`, `uniq`, `unshift`, `unzip`, `unzipWith`, `values`,\n     * `valuesIn`, `where`, `without`, `wrap`, `xor`, `zip`, `zipObject`, `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clone`, `cloneDeep`,\n     * `deburr`, `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`,\n     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`,\n     * `floor`, `get`, `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`,\n     * `inRange`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n     * `isEmpty`, `isEqual`, `isError`, `isFinite` `isFunction`, `isMatch`,\n     * `isNative`, `isNaN`, `isNull`, `isNumber`, `isObject`, `isPlainObject`,\n     * `isRegExp`, `isString`, `isUndefined`, `isTypedArray`, `join`, `kebabCase`,\n     * `last`, `lastIndexOf`, `lt`, `lte`, `max`, `min`, `noConflict`, `noop`,\n     * `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`, `random`, `reduce`,\n     * `reduceRight`, `repeat`, `result`, `round`, `runInContext`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`, `startCase`,\n     * `startsWith`, `sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`,\n     * `unescape`, `uniqueId`, `value`, and `words`\n     *\n     * The wrapper method `sample` will return a wrapped value when `n` is provided,\n     * otherwise an unwrapped value is returned.\n     *\n     * @name _\n     * @constructor\n     * @category Chain\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // returns an unwrapped value\n     * wrapped.reduce(function(total, n) {\n     *   return total + n;\n     * });\n     * // => 6\n     *\n     * // returns a wrapped value\n     * var squares = wrapped.map(function(n) {\n     *   return n * n;\n     * });\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The function whose prototype all chaining wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n     */\n    function LodashWrapper(value, chainAll, actions) {\n      this.__wrapped__ = value;\n      this.__actions__ = actions || [];\n      this.__chain__ = !!chainAll;\n    }\n\n    /**\n     * An object environment feature flags.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    var support = lodash.support = {};\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = POSITIVE_INFINITY;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = arrayCopy(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = arrayCopy(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = arrayCopy(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE || (arrLength == length && takeCount == length)) {\n        return baseWrapperValue((isRight && isArr) ? array.reverse() : array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a cache object to store key/value pairs.\n     *\n     * @private\n     * @static\n     * @name Cache\n     * @memberOf _.memoize\n     */\n    function MapCache() {\n      this.__data__ = {};\n    }\n\n    /**\n     * Removes `key` and its value from the cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n     */\n    function mapDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n\n    /**\n     * Gets the cached value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the cached value.\n     */\n    function mapGet(key) {\n      return key == '__proto__' ? undefined : this.__data__[key];\n    }\n\n    /**\n     * Checks if a cached value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapHas(key) {\n      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n    }\n\n    /**\n     * Sets `value` to `key` of the cache.\n     *\n     * @private\n     * @name set\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to cache.\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache object.\n     */\n    function mapSet(key, value) {\n      if (key != '__proto__') {\n        this.__data__[key] = value;\n      }\n      return this;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates a cache object to store unique values.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var length = values ? values.length : 0;\n\n      this.data = { 'hash': nativeCreate(null), 'set': new Set };\n      while (length--) {\n        this.push(values[length]);\n      }\n    }\n\n    /**\n     * Checks if `value` is in `cache` mimicking the return signature of\n     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n     *\n     * @private\n     * @param {Object} cache The cache to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `0` if `value` is found, else `-1`.\n     */\n    function cacheIndexOf(cache, value) {\n      var data = cache.data,\n          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\n      return result ? 0 : -1;\n    }\n\n    /**\n     * Adds `value` to the cache.\n     *\n     * @private\n     * @name push\n     * @memberOf SetCache\n     * @param {*} value The value to cache.\n     */\n    function cachePush(value) {\n      var data = this.data;\n      if (typeof value == 'string' || isObject(value)) {\n        data.set.add(value);\n      } else {\n        data.hash[value] = true;\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a new array joining `array` with `other`.\n     *\n     * @private\n     * @param {Array} array The array to join.\n     * @param {Array} other The other array to join.\n     * @returns {Array} Returns the new concatenated array.\n     */\n    function arrayConcat(array, other) {\n      var index = -1,\n          length = array.length,\n          othIndex = -1,\n          othLength = other.length,\n          result = Array(length + othLength);\n\n      while (++index < length) {\n        result[index] = array[index];\n      }\n      while (++othIndex < othLength) {\n        result[index++] = other[othIndex];\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayCopy(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEach` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEach(array, iteratee) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (iteratee(array[index], index, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEachRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEachRight(array, iteratee) {\n      var length = array.length;\n\n      while (length--) {\n        if (iteratee(array[length], length, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.every` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     */\n    function arrayEvery(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (!predicate(array[index], index, array)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseExtremum` for arrays which invokes `iteratee`\n     * with one argument: (value).\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function arrayExtremum(array, iteratee, comparator, exValue) {\n      var index = -1,\n          length = array.length,\n          computed = exValue,\n          result = computed;\n\n      while (++index < length) {\n        var value = array[index],\n            current = +iteratee(value);\n\n        if (comparator(current, computed)) {\n          computed = current;\n          result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.filter` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function arrayFilter(array, predicate) {\n      var index = -1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.map` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function arrayMap(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = iteratee(array[index], index, array);\n      }\n      return result;\n    }\n\n    /**\n     * Appends the elements of `values` to `array`.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to append.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayPush(array, values) {\n      var index = -1,\n          length = values.length,\n          offset = array.length;\n\n      while (++index < length) {\n        array[offset + index] = values[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.reduce` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the first element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n      var index = -1,\n          length = array.length;\n\n      if (initFromArray && length) {\n        accumulator = array[++index];\n      }\n      while (++index < length) {\n        accumulator = iteratee(accumulator, array[index], index, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.reduceRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the last element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n      var length = array.length;\n      if (initFromArray && length) {\n        accumulator = array[--length];\n      }\n      while (length--) {\n        accumulator = iteratee(accumulator, array[length], length, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.some` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function arraySome(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (predicate(array[index], index, array)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `_.sum` for arrays without support for callback\n     * shorthands and `this` binding..\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function arraySum(array, iteratee) {\n      var length = array.length,\n          result = 0;\n\n      while (length--) {\n        result += +iteratee(array[length]) || 0;\n      }\n      return result;\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assign` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : objectValue;\n    }\n\n    /**\n     * Used by `_.template` to customize its `_.assign` use.\n     *\n     * **Note:** This function is like `assignDefaults` except that it ignores\n     * inherited property values when checking if a property is `undefined`.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @param {string} key The key associated with the object and source values.\n     * @param {Object} object The destination object.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n      return (objectValue === undefined || !hasOwnProperty.call(object, key))\n        ? sourceValue\n        : objectValue;\n    }\n\n    /**\n     * A specialized version of `_.assign` for customizing assigned values without\n     * support for argument juggling, multiple sources, and `this` binding `customizer`\n     * functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     */\n    function assignWith(object, source, customizer) {\n      var index = -1,\n          props = keys(source),\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key],\n            result = customizer(value, source[key], key, object, source);\n\n        if ((result === result ? (result !== value) : (value === value)) ||\n            (value === undefined && !(key in object))) {\n          object[key] = result;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for argument juggling,\n     * multiple sources, and `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return source == null\n        ? object\n        : baseCopy(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.at` without support for string collections\n     * and individual key arguments.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {number[]|string[]} props The property names or indexes of elements to pick.\n     * @returns {Array} Returns the new array of picked elements.\n     */\n    function baseAt(collection, props) {\n      var index = -1,\n          isNil = collection == null,\n          isArr = !isNil && isArrayLike(collection),\n          length = isArr ? collection.length : 0,\n          propsLength = props.length,\n          result = Array(propsLength);\n\n      while(++index < propsLength) {\n        var key = props[index];\n        if (isArr) {\n          result[index] = isIndex(key, length) ? collection[key] : undefined;\n        } else {\n          result[index] = isNil ? undefined : collection[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property names to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @returns {Object} Returns `object`.\n     */\n    function baseCopy(source, props, object) {\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n        object[key] = source[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.callback` which supports specifying the\n     * number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function baseCallback(func, thisArg, argCount) {\n      var type = typeof func;\n      if (type == 'function') {\n        return thisArg === undefined\n          ? func\n          : bindCallback(func, thisArg, argCount);\n      }\n      if (func == null) {\n        return identity;\n      }\n      if (type == 'object') {\n        return baseMatches(func);\n      }\n      return thisArg === undefined\n        ? property(func)\n        : baseMatchesProperty(func, thisArg);\n    }\n\n    /**\n     * The base implementation of `_.clone` without support for argument juggling\n     * and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The object `value` belongs to.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return arrayCopy(value, result);\n        }\n      } else {\n        var tag = objToString.call(value),\n            isFunc = tag == funcTag;\n\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return baseAssign(result, value);\n          }\n        } else {\n          return cloneableTags[tag]\n            ? initCloneByTag(value, tag, isDeep)\n            : (object ? value : {});\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == value) {\n          return stackB[length];\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate it with its clone.\n      stackA.push(value);\n      stackB.push(result);\n\n      // Recursively populate clone (susceptible to call stack limits).\n      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(prototype) {\n        if (isObject(prototype)) {\n          object.prototype = prototype;\n          var result = new object;\n          object.prototype = undefined;\n        }\n        return result || {};\n      };\n    }());\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts an index\n     * of where to slice the arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Object} args The arguments provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of `_.difference` which accepts a single array\n     * of values to exclude.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values) {\n      var length = array ? array.length : 0,\n          result = [];\n\n      if (!length) {\n        return result;\n      }\n      var index = -1,\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          cache = (isCommon && values.length >= LARGE_ARRAY_SIZE) ? createCache(values) : null,\n          valuesLength = values.length;\n\n      if (cache) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n        values = cache;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index];\n\n        if (isCommon && value === value) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === value) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (indexOf(values, value, 0) < 0) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * Gets the extremum value of `collection` invoking `iteratee` for each value\n     * in `collection` to generate the criterion by which the value is ranked.\n     * The `iteratee` is invoked with three arguments: (value, index|key, collection).\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(collection, iteratee, comparator, exValue) {\n      var computed = exValue,\n          result = computed;\n\n      baseEach(collection, function(value, index, collection) {\n        var current = +iteratee(value, index, collection);\n        if (comparator(current, computed) || (current === exValue && current === result)) {\n          computed = current;\n          result = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : (end >>> 0);\n      start >>>= 0;\n\n      while (start < length) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n     * without support for callback shorthands and `this` binding, which iterates\n     * over `collection` using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @param {boolean} [retKey] Specify returning the key of the found element\n     *  instead of the element itself.\n     * @returns {*} Returns the found element or its key, else `undefined`.\n     */\n    function baseFind(collection, predicate, eachFunc, retKey) {\n      var result;\n      eachFunc(collection, function(value, key, collection) {\n        if (predicate(value, key, collection)) {\n          result = retKey ? key : value;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with added support for restricting\n     * flattening and specifying the start index.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, isDeep, isStrict, result) {\n      result || (result = []);\n\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index];\n        if (isObjectLike(value) && isArrayLike(value) &&\n            (isStrict || isArray(value) || isArguments(value))) {\n          if (isDeep) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, isDeep, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n     * each property. Iteratee functions may exit iteration early by explicitly\n     * returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forIn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForIn(object, iteratee) {\n      return baseFor(object, iteratee, keysIn);\n    }\n\n    /**\n     * The base implementation of `_.forOwn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from those provided.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the new array of filtered property names.\n     */\n    function baseFunctions(object, props) {\n      var index = -1,\n          length = props.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var key = props[index];\n        if (isFunction(object[key])) {\n          result[++resIndex] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `get` without support for string paths\n     * and default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path of the property to get.\n     * @param {string} [pathKey] The key representation of path.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path, pathKey) {\n      if (object == null) {\n        return;\n      }\n      if (pathKey !== undefined && pathKey in toObject(object)) {\n        path = [pathKey];\n      }\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[path[index++]];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` without support for `this` binding\n     * `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = objToString.call(object);\n        if (objTag == argsTag) {\n          objTag = objectTag;\n        } else if (objTag != objectTag) {\n          objIsArr = isTypedArray(object);\n        }\n      }\n      if (!othIsArr) {\n        othTag = objToString.call(other);\n        if (othTag == argsTag) {\n          othTag = objectTag;\n        } else if (othTag != objectTag) {\n          othIsArr = isTypedArray(other);\n        }\n      }\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !(objIsArr || objIsObj)) {\n        return equalByTag(object, other, objTag);\n      }\n      if (!isLoose) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      // For more information on detecting circular references see https://es5.github.io/#JO.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == object) {\n          return stackB[length] == other;\n        }\n      }\n      // Add `object` and `other` to the stack of traversed objects.\n      stackA.push(object);\n      stackB.push(other);\n\n      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\n      stackA.pop();\n      stackB.pop();\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} matchData The propery names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = toObject(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n          if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which does not clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        var key = matchData[0][0],\n            value = matchData[0][1];\n\n        return function(object) {\n          if (object == null) {\n            return false;\n          }\n          return object[key] === value && (value !== undefined || (key in toObject(object)));\n        };\n      }\n      return function(object) {\n        return baseIsMatch(object, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to compare.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      var isArr = isArray(path),\n          isCommon = isKey(path) && isStrictComparable(srcValue),\n          pathKey = (path + '');\n\n      path = toPath(path);\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        var key = pathKey;\n        object = toObject(object);\n        if ((isArr || !isCommon) && !(key in object)) {\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          if (object == null) {\n            return false;\n          }\n          key = last(path);\n          object = toObject(object);\n        }\n        return object[key] === srcValue\n          ? (srcValue !== undefined || (key in object))\n          : baseIsEqual(srcValue, object[key], undefined, true);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for argument juggling,\n     * multiple sources, and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {Object} Returns `object`.\n     */\n    function baseMerge(object, source, customizer, stackA, stackB) {\n      if (!isObject(object)) {\n        return object;\n      }\n      var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),\n          props = isSrcArr ? undefined : keys(source);\n\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObjectLike(srcValue)) {\n          stackA || (stackA = []);\n          stackB || (stackB = []);\n          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n        }\n        else {\n          var value = object[key],\n              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n              isCommon = result === undefined;\n\n          if (isCommon) {\n            result = srcValue;\n          }\n          if ((result !== undefined || (isSrcArr && !(key in object))) &&\n              (isCommon || (result === result ? (result !== value) : (value === value)))) {\n            object[key] = result;\n          }\n        }\n      });\n      return object;\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n      var length = stackA.length,\n          srcValue = source[key];\n\n      while (length--) {\n        if (stackA[length] == srcValue) {\n          object[key] = stackB[length];\n          return;\n        }\n      }\n      var value = object[key],\n          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n          isCommon = result === undefined;\n\n      if (isCommon) {\n        result = srcValue;\n        if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {\n          result = isArray(value)\n            ? value\n            : (isArrayLike(value) ? arrayCopy(value) : []);\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          result = isArguments(value)\n            ? toPlainObject(value)\n            : (isPlainObject(value) ? value : {});\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate\n      // it with its merged value.\n      stackA.push(srcValue);\n      stackB.push(result);\n\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n      } else if (result === result ? (result !== value) : (value === value)) {\n        object[key] = result;\n      }\n    }\n\n    /**\n     * The base implementation of `_.property` without support for deep paths.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function baseProperty(key) {\n      return function(object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function basePropertyDeep(path) {\n      var pathKey = (path + '');\n      path = toPath(path);\n      return function(object) {\n        return baseGet(object, path, pathKey);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * index arguments and capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0;\n      while (length--) {\n        var index = indexes[length];\n        if (index != previous && isIndex(index)) {\n          var previous = index;\n          splice.call(array, index, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for argument juggling\n     * and returning floating-point numbers.\n     *\n     * @private\n     * @param {number} min The minimum possible value.\n     * @param {number} max The maximum possible value.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(min, max) {\n      return min + nativeFloor(nativeRandom() * (max - min + 1));\n    }\n\n    /**\n     * The base implementation of `_.reduce` and `_.reduceRight` without support\n     * for callback shorthands and `this` binding, which iterates over `collection`\n     * using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} accumulator The initial value.\n     * @param {boolean} initFromCollection Specify using the first or last element\n     *  of `collection` as the initial value.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @returns {*} Returns the accumulated value.\n     */\n    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n      eachFunc(collection, function(value, index, collection) {\n        accumulator = initFromCollection\n          ? (initFromCollection = false, value)\n          : iteratee(accumulator, value, index, collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortBy` which uses `comparer` to define\n     * the sort order of `array` and replaces criteria objects with their\n     * corresponding values.\n     *\n     * @private\n     * @param {Array} array The array to sort.\n     * @param {Function} comparer The function to define sort order.\n     * @returns {Array} Returns `array`.\n     */\n    function baseSortBy(array, comparer) {\n      var length = array.length;\n\n      array.sort(comparer);\n      while (length--) {\n        array[length] = array[length].value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.sortByOrder` without param guards.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseSortByOrder(collection, iteratees, orders) {\n      var callback = getCallback(),\n          index = -1;\n\n      iteratees = arrayMap(iteratees, function(iteratee) { return callback(iteratee); });\n\n      var result = baseMap(collection, function(value) {\n        var criteria = arrayMap(iteratees, function(iteratee) { return iteratee(value); });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.sum` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function baseSum(collection, iteratee) {\n      var result = 0;\n      baseEach(collection, function(value, index, collection) {\n        result += +iteratee(value, index, collection) || 0;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.uniq` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The function invoked per iteration.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     */\n    function baseUniq(array, iteratee) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array.length,\n          isCommon = indexOf == baseIndexOf,\n          isLarge = isCommon && length >= LARGE_ARRAY_SIZE,\n          seen = isLarge ? createCache() : null,\n          result = [];\n\n      if (seen) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n      } else {\n        isLarge = false;\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value, index, array) : value;\n\n        if (isCommon && value === value) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (indexOf(seen, computed, 0) < 0) {\n          if (iteratee || isLarge) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.values` and `_.valuesIn` which creates an\n     * array of `object` property values corresponding to the property names\n     * of `props`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} props The property names to get values for.\n     * @returns {Object} Returns the array of property values.\n     */\n    function baseValues(object, props) {\n      var index = -1,\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = object[props[index]];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\n     * and `_.takeWhile` without support for callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      var index = -1,\n          length = actions.length;\n\n      while (++index < length) {\n        var action = actions[index];\n        result = action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }\n      return result;\n    }\n\n    /**\n     * Performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return binaryIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * This function is like `binaryIndex` except that it invokes `iteratee` for\n     * `value` and each element of `array` to compute their sort ranking. The\n     * iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsUndef = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            isDef = computed !== undefined,\n            isReflexive = computed === computed;\n\n        if (valIsNaN) {\n          var setLow = isReflexive || retHighest;\n        } else if (valIsNull) {\n          setLow = isReflexive && isDef && (retHighest || computed != null);\n        } else if (valIsUndef) {\n          setLow = isReflexive && (retHighest || isDef);\n        } else if (computed == null) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * A specialized version of `baseCallback` which only supports `this` binding\n     * and specifying the number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function bindCallback(func, thisArg, argCount) {\n      if (typeof func != 'function') {\n        return identity;\n      }\n      if (thisArg === undefined) {\n        return func;\n      }\n      switch (argCount) {\n        case 1: return function(value) {\n          return func.call(thisArg, value);\n        };\n        case 3: return function(value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n        case 4: return function(accumulator, value, index, collection) {\n          return func.call(thisArg, accumulator, value, index, collection);\n        };\n        case 5: return function(value, other, key, object, source) {\n          return func.call(thisArg, value, other, key, object, source);\n        };\n      }\n      return function() {\n        return func.apply(thisArg, arguments);\n      };\n    }\n\n    /**\n     * Creates a clone of the given array buffer.\n     *\n     * @private\n     * @param {ArrayBuffer} buffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function bufferClone(buffer) {\n      var result = new ArrayBuffer(buffer.byteLength),\n          view = new Uint8Array(result);\n\n      view.set(new Uint8Array(buffer));\n      return result;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders) {\n      var holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          leftIndex = -1,\n          leftLength = partials.length,\n          result = Array(leftLength + argsLength);\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        result[holders[argsIndex]] = args[argsIndex];\n      }\n      while (argsLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders) {\n      var holdersIndex = -1,\n          holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          rightIndex = -1,\n          rightLength = partials.length,\n          result = Array(argsLength + rightLength);\n\n      while (++argsIndex < argsLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        result[offset + holders[holdersIndex]] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * Creates a `_.countBy`, `_.groupBy`, `_.indexBy`, or `_.partition` function.\n     *\n     * @private\n     * @param {Function} setter The function to set keys and values of the accumulator object.\n     * @param {Function} [initializer] The function to initialize the accumulator object.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee, thisArg) {\n        var result = initializer ? initializer() : {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        if (isArray(collection)) {\n          var index = -1,\n              length = collection.length;\n\n          while (++index < length) {\n            var value = collection[index];\n            setter(result, value, iteratee(value, index, collection), collection);\n          }\n        } else {\n          baseEach(collection, function(value, key, collection) {\n            setter(result, value, iteratee(value, key, collection), collection);\n          });\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a `_.assign`, `_.defaults`, or `_.merge` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return restParam(function(object, sources) {\n        var index = -1,\n            length = object == null ? 0 : sources.length,\n            customizer = length > 2 ? sources[length - 2] : undefined,\n            guard = length > 2 ? sources[2] : undefined,\n            thisArg = length > 1 ? sources[length - 1] : undefined;\n\n        if (typeof customizer == 'function') {\n          customizer = bindCallback(customizer, thisArg, 5);\n          length -= 2;\n        } else {\n          customizer = typeof thisArg == 'function' ? thisArg : undefined;\n          length -= (customizer ? 1 : 0);\n        }\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        var length = collection ? getLength(collection) : 0;\n        if (!isLength(length)) {\n          return eachFunc(collection, iteratee);\n        }\n        var index = fromRight ? length : -1,\n            iterable = toObject(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var iterable = toObject(object),\n            props = keysFunc(object),\n            length = props.length,\n            index = fromRight ? length : -1;\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var key = props[index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createBindWrapper(func, thisArg) {\n      var Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(thisArg, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `Set` cache object to optimize linear searches of large arrays.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n     */\n    function createCache(values) {\n      return (nativeCreate && Set) ? new SetCache(values) : null;\n    }\n\n    /**\n     * Creates a function that produces compound words out of the words in a\n     * given string.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        var index = -1,\n            array = words(deburr(string)),\n            length = array.length,\n            result = '';\n\n        while (++index < length) {\n          result = callback(result, array[index], index);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtorWrapper(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors.\n        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a `_.curry` or `_.curryRight` function.\n     *\n     * @private\n     * @param {boolean} flag The curry bit flag.\n     * @returns {Function} Returns the new curry function.\n     */\n    function createCurry(flag) {\n      function curryFunc(func, arity, guard) {\n        if (guard && isIterateeCall(func, arity, guard)) {\n          arity = undefined;\n        }\n        var result = createWrapper(func, flag, undefined, undefined, undefined, undefined, undefined, arity);\n        result.placeholder = curryFunc.placeholder;\n        return result;\n      }\n      return curryFunc;\n    }\n\n    /**\n     * Creates a `_.defaults` or `_.defaultsDeep` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Function} Returns the new defaults function.\n     */\n    function createDefaults(assigner, customizer) {\n      return restParam(function(args) {\n        var object = args[0];\n        if (object == null) {\n          return object;\n        }\n        args.push(customizer);\n        return assigner.apply(undefined, args);\n      });\n    }\n\n    /**\n     * Creates a `_.max` or `_.min` function.\n     *\n     * @private\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {Function} Returns the new extremum function.\n     */\n    function createExtremum(comparator, exValue) {\n      return function(collection, iteratee, thisArg) {\n        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n          iteratee = undefined;\n        }\n        iteratee = getCallback(iteratee, thisArg, 3);\n        if (iteratee.length == 1) {\n          collection = isArray(collection) ? collection : toIterable(collection);\n          var result = arrayExtremum(collection, iteratee, comparator, exValue);\n          if (!(collection.length && result === exValue)) {\n            return result;\n          }\n        }\n        return baseExtremum(collection, iteratee, comparator, exValue);\n      };\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(eachFunc, fromRight) {\n      return function(collection, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        if (isArray(collection)) {\n          var index = baseFindIndex(collection, predicate, fromRight);\n          return index > -1 ? collection[index] : undefined;\n        }\n        return baseFind(collection, predicate, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a `_.findIndex` or `_.findLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindIndex(fromRight) {\n      return function(array, predicate, thisArg) {\n        if (!(array && array.length)) {\n          return -1;\n        }\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFindIndex(array, predicate, fromRight);\n      };\n    }\n\n    /**\n     * Creates a `_.findKey` or `_.findLastKey` function.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindKey(objectFunc) {\n      return function(object, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFind(object, predicate, objectFunc, true);\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return function() {\n        var wrapper,\n            length = arguments.length,\n            index = fromRight ? length : -1,\n            leftIndex = 0,\n            funcs = Array(length);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var func = funcs[leftIndex++] = arguments[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper') {\n            wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? -1 : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      };\n    }\n\n    /**\n     * Creates a function for `_.forEach` or `_.forEachRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForEach(arrayFunc, eachFunc) {\n      return function(collection, iteratee, thisArg) {\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee)\n          : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n      };\n    }\n\n    /**\n     * Creates a function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForIn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee, keysIn);\n      };\n    }\n\n    /**\n     * Creates a function for `_.forOwn` or `_.forOwnRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForOwn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee);\n      };\n    }\n\n    /**\n     * Creates a function for `_.mapKeys` or `_.mapValues`.\n     *\n     * @private\n     * @param {boolean} [isMapKeys] Specify mapping keys instead of values.\n     * @returns {Function} Returns the new map function.\n     */\n    function createObjectMapper(isMapKeys) {\n      return function(object, iteratee, thisArg) {\n        var result = {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        baseForOwn(object, function(value, key, object) {\n          var mapped = iteratee(value, key, object);\n          key = isMapKeys ? mapped : key;\n          value = isMapKeys ? value : mapped;\n          result[key] = value;\n        });\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function for `_.padLeft` or `_.padRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify padding from the right.\n     * @returns {Function} Returns the new pad function.\n     */\n    function createPadDir(fromRight) {\n      return function(string, length, chars) {\n        string = baseToString(string);\n        return (fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string);\n      };\n    }\n\n    /**\n     * Creates a `_.partial` or `_.partialRight` function.\n     *\n     * @private\n     * @param {boolean} flag The partial bit flag.\n     * @returns {Function} Returns the new partial function.\n     */\n    function createPartial(flag) {\n      var partialFunc = restParam(function(func, partials) {\n        var holders = replaceHolders(partials, partialFunc.placeholder);\n        return createWrapper(func, flag, undefined, partials, holders);\n      });\n      return partialFunc;\n    }\n\n    /**\n     * Creates a function for `_.reduce` or `_.reduceRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createReduce(arrayFunc, eachFunc) {\n      return function(collection, iteratee, accumulator, thisArg) {\n        var initFromArray = arguments.length < 3;\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee, accumulator, initFromArray)\n          : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with optional `this`\n     * binding of, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurry = bitmask & CURRY_FLAG,\n          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n          isCurryRight = bitmask & CURRY_RIGHT_FLAG,\n          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it to other functions.\n        var length = arguments.length,\n            index = length,\n            args = Array(length);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight);\n        }\n        if (isCurry || isCurryRight) {\n          var placeholder = wrapper.placeholder,\n              argsHolders = replaceHolders(args, placeholder);\n\n          length -= argsHolders.length;\n          if (length < arity) {\n            var newArgPos = argPos ? arrayCopy(argPos) : undefined,\n                newArity = nativeMax(arity - length, 0),\n                newsHolders = isCurry ? argsHolders : undefined,\n                newHoldersRight = isCurry ? undefined : argsHolders,\n                newPartials = isCurry ? args : undefined,\n                newPartialsRight = isCurry ? undefined : args;\n\n            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n            if (!isCurryBound) {\n              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n            }\n            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n                result = createHybridWrapper.apply(undefined, newData);\n\n            if (isLaziable(func)) {\n              setData(result, newData);\n            }\n            result.placeholder = placeholder;\n            return result;\n          }\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        if (argPos) {\n          args = reorder(args, argPos);\n        }\n        if (isAry && ary < args.length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtorWrapper(func);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates the padding required for `string` based on the given `length`.\n     * The `chars` string is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {string} string The string to create padding for.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the pad for `string`.\n     */\n    function createPadding(string, length, chars) {\n      var strLength = string.length;\n      length = +length;\n\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return '';\n      }\n      var padLength = length - strLength;\n      chars = chars == null ? ' ' : (chars + '');\n      return repeat(chars, nativeCeil(padLength / chars.length)).slice(0, padLength);\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the optional `this`\n     * binding of `thisArg` and the `partials` prepended to those provided to\n     * the wrapper.\n     *\n     * @private\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to the new function.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createPartialWrapper(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it `func`.\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength);\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.ceil`, `_.floor`, or `_.round` function.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        precision = precision === undefined ? 0 : (+precision || 0);\n        if (precision) {\n          precision = pow(10, precision);\n          return func(number * precision) / precision;\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {Function} Returns the new index function.\n     */\n    function createSortedIndex(retHighest) {\n      return function(array, value, iteratee, thisArg) {\n        var callback = getCallback(iteratee);\n        return (iteratee == null && callback === baseCallback)\n          ? binaryIndex(array, value, retHighest)\n          : binaryIndexBy(array, value, callback(iteratee, thisArg, 1), retHighest);\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      length -= (holders ? holders.length : 0);\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func),\n          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\n      if (data) {\n        mergeData(newData, data);\n        bitmask = newData[1];\n        arity = newData[9];\n      }\n      newData[9] = arity == null\n        ? (isBindKey ? 0 : func.length)\n        : (nativeMax(arity - length, 0) || 0);\n\n      if (bitmask == BIND_FLAG) {\n        var result = createBindWrapper(newData[0], newData[2]);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n        result = createPartialWrapper.apply(undefined, newData);\n      } else {\n        result = createHybridWrapper.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setter(result, newData);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing arrays.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var index = -1,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n        return false;\n      }\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index],\n            result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\n        if (result !== undefined) {\n          if (result) {\n            continue;\n          }\n          return false;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (isLoose) {\n          if (!arraySome(other, function(othValue) {\n                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n              })) {\n            return false;\n          }\n        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag) {\n      switch (tag) {\n        case boolTag:\n        case dateTag:\n          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n          return +object == +other;\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case numberTag:\n          // Treat `NaN` vs. `NaN` as equal.\n          return (object != +object)\n            ? other != +other\n            : object == +other;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings primitives and string\n          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n          return object == (other + '');\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isLoose) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      var skipCtor = isLoose;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key],\n            result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;\n\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n          return false;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (!skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseCallback` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getCallback(func, thisArg, argCount) {\n      var result = lodash.callback || callback;\n      result = result === callback ? baseCallback : result;\n      return argCount ? result(func, thisArg, argCount) : result;\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = func.name,\n          array = realNames[result],\n          length = array ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseIndexOf` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function|number} Returns the chosen function or its result.\n     */\n    function getIndexOf(collection, target, fromIndex) {\n      var result = lodash.indexOf || indexOf;\n      result = result === indexOf ? baseIndexOf : result;\n      return collection ? result(collection, target, fromIndex) : result;\n    }\n\n    /**\n     * Gets the \"length\" property value of `object`.\n     *\n     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {*} Returns the \"length\" value.\n     */\n    var getLength = baseProperty('length');\n\n    /**\n     * Gets the propery names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = pairs(object),\n          length = result.length;\n\n      while (length--) {\n        result[length][2] = isStrictComparable(result[length][1]);\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = object == null ? undefined : object[key];\n      return isNative(value) ? value : undefined;\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add array properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      var Ctor = object.constructor;\n      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n        Ctor = Object;\n      }\n      return new Ctor;\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return bufferClone(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          var buffer = object.buffer;\n          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          var result = new Ctor(object.source, reFlags.exec(object));\n          result.lastIndex = object.lastIndex;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the method at `path` on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function invokePath(object, path, args) {\n      if (object != null && !isKey(path, object)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        path = last(path);\n      }\n      var func = object == null ? object : object[path];\n      return func == null ? undefined : func.apply(object, args);\n    }\n\n    /**\n     * Checks if `value` is array-like.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(getLength(value));\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return value > -1 && value % 1 == 0 && value < length;\n    }\n\n    /**\n     * Checks if the provided arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n          ? (isArrayLike(object) && isIndex(index, object.length))\n          : (type == 'string' && index in object)) {\n        var other = object[index];\n        return value === value ? (value === other) : (other !== other);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      var type = typeof value;\n      if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n        return true;\n      }\n      if (isArray(value)) {\n        return false;\n      }\n      var result = !reIsDeepProp.test(value);\n      return result || (object != null && value in toObject(object));\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func);\n      if (!(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      var other = lodash[funcName];\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     */\n    function isLength(value) {\n      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers required to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n     * augment function arguments, making the order in which they are executed important,\n     * preventing the merging of metadata. However, we make an exception for a safe\n     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < ARY_FLAG;\n\n      var isCombo =\n        (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||\n        (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||\n        (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = arrayCopy(value);\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function mergeDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : merge(objectValue, sourceValue, mergeDefaults);\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties specified\n     * by `props`.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property names to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByArray(object, props) {\n      object = toObject(object);\n\n      var index = -1,\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index];\n        if (key in object) {\n          result[key] = object[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties `predicate`\n     * returns truthy for.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByCallback(object, predicate) {\n      var result = {};\n      baseForIn(object, function(value, key, object) {\n        if (predicate(value, key, object)) {\n          result[key] = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = arrayCopy(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity function\n     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * A fallback implementation of `Object.keys` which creates an array of the\n     * own enumerable property names of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function shimKeys(object) {\n      var props = keysIn(object),\n          propsLength = props.length,\n          length = propsLength && object.length;\n\n      var allowIndexes = !!length && isLength(length) &&\n        (isArray(object) || isArguments(object));\n\n      var index = -1,\n          result = [];\n\n      while (++index < propsLength) {\n        var key = props[index];\n        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to an array-like object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array|Object} Returns the array-like object.\n     */\n    function toIterable(value) {\n      if (value == null) {\n        return [];\n      }\n      if (!isArrayLike(value)) {\n        return values(value);\n      }\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to an object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Object} Returns the object.\n     */\n    function toObject(value) {\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to property path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array} Returns the property path array.\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return value;\n      }\n      var result = [];\n      baseToString(value).replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      return wrapper instanceof LazyWrapper\n        ? wrapper.clone()\n        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `collection` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new array containing chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n        size = 1;\n      } else {\n        size = nativeMax(nativeFloor(size) || 1, 1);\n      }\n      var index = 0,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[++resIndex] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of unique `array` values not included in the other\n     * provided arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The arrays of values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.difference([1, 2, 3], [4, 2]);\n     * // => [1, 3]\n     */\n    var difference = restParam(function(array, values) {\n      return (isObjectLike(array) && isArrayLike(array))\n        ? baseDifference(array, baseFlatten(values, false, true))\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that match the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [1]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active', false), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8], '*', 1, 2);\n     * // => [4, '*', 8]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(chr) {\n     *   return chr.user == 'barney';\n     * });\n     * // => 0\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findIndex(users, 'active', false);\n     * // => 0\n     *\n     * // using the `_.property` callback shorthand\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    var findIndex = createFindIndex();\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(chr) {\n     *   return chr.user == 'pebbles';\n     * });\n     * // => 2\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastIndex(users, 'active', false);\n     * // => 2\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    var findLastIndex = createFindIndex(true);\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias head\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.first([1, 2, 3]);\n     * // => 1\n     *\n     * _.first([]);\n     * // => undefined\n     */\n    function first(array) {\n      return array ? array[0] : undefined;\n    }\n\n    /**\n     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n     * flattened, otherwise it is only flattened a single level.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, [4]]\n     *\n     * // using `isDeep`\n     * _.flatten([1, [2, 3, [4]]], true);\n     * // => [1, 2, 3, 4]\n     */\n    function flatten(array, isDeep, guard) {\n      var length = array ? array.length : 0;\n      if (guard && isIterateeCall(array, isDeep, guard)) {\n        isDeep = false;\n      }\n      return length ? baseFlatten(array, isDeep) : [];\n    }\n\n    /**\n     * Recursively flattens a nested array.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to recursively flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, 4]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, true) : [];\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `array`. If `array` is sorted providing `true` for `fromIndex`\n     * performs a faster binary search.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n     *  to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // using `fromIndex`\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     *\n     * // performing a binary search\n     * _.indexOf([1, 1, 2, 2], 2, true);\n     * // => 2\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      if (typeof fromIndex == 'number') {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n      } else if (fromIndex) {\n        var index = binaryIndex(array, value);\n        if (index < length &&\n            (value === value ? (value === array[index]) : (array[index] !== array[index]))) {\n          return index;\n        }\n        return -1;\n      }\n      return baseIndexOf(array, value, fromIndex || 0);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n\n    /**\n     * Creates an array of unique values that are included in all of the provided\n     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of shared values.\n     * @example\n     * _.intersection([1, 2], [4, 2], [2, 1]);\n     * // => [2]\n     */\n    var intersection = restParam(function(arrays) {\n      var othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(length),\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          result = [];\n\n      while (othIndex--) {\n        var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];\n        caches[othIndex] = (isCommon && value.length >= 120) ? createCache(othIndex && value) : null;\n      }\n      var array = arrays[0],\n          index = -1,\n          length = array ? array.length : 0,\n          seen = caches[0];\n\n      outer:\n      while (++index < length) {\n        value = array[index];\n        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\n          var othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(value);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    });\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n     *  or `true` to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // using `fromIndex`\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     *\n     * // performing a binary search\n     * _.lastIndexOf([1, 1, 2, 2], 2, true);\n     * // => 3\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (typeof fromIndex == 'number') {\n        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n      } else if (fromIndex) {\n        index = binaryIndex(array, value, true) - 1;\n        var other = array[index];\n        if (value === value ? (value === other) : (other !== other)) {\n          return index;\n        }\n        return -1;\n      }\n      if (value !== value) {\n        return indexOfNaN(array, index, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Removes all provided values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     *\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pull() {\n      var args = arguments,\n          array = args[0];\n\n      if (!(array && array.length)) {\n        return array;\n      }\n      var index = 0,\n          indexOf = getIndexOf(),\n          length = args.length;\n\n      while (++index < length) {\n        var fromIndex = 0,\n            value = args[index];\n\n        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to the given indexes and returns\n     * an array of the removed elements. Indexes may be specified as an array of\n     * indexes or as individual arguments.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [5, 10, 15, 20];\n     * var evens = _.pullAt(array, 1, 3);\n     *\n     * console.log(array);\n     * // => [5, 15]\n     *\n     * console.log(evens);\n     * // => [10, 20]\n     */\n    var pullAt = restParam(function(array, indexes) {\n      indexes = baseFlatten(indexes);\n\n      var result = baseAt(array, indexes);\n      basePullAt(array, indexes.sort(baseCompareAscending));\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate, thisArg) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getCallback(predicate, thisArg, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias tail\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.rest([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function rest(array) {\n      return drop(array, 1);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of `Array#slice` to support node\n     * lists in IE < 9 and to ensure dense arrays are returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value` should\n     * be inserted into `array` in order to maintain its sort order. If an iteratee\n     * function is provided it is invoked for `value` and each element of `array`\n     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n     * invoked with one argument; (value).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     *\n     * _.sortedIndex([4, 4, 5, 5], 5);\n     * // => 2\n     *\n     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n     *\n     * // using an iteratee function\n     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n     *   return this.data[word];\n     * }, dict);\n     * // => 1\n     *\n     * // using the `_.property` callback shorthand\n     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n     * // => 1\n     */\n    var sortedIndex = createSortedIndex();\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 4, 5, 5], 5);\n     * // => 4\n     */\n    var sortedLastIndex = createSortedIndex(true);\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n     * and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [2, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [1, 2]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active', false), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all of the provided arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([1, 2], [4, 2], [2, 1]);\n     * // => [1, 2, 4]\n     */\n    var union = restParam(function(arrays) {\n      return baseUniq(baseFlatten(arrays, false, true));\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurence of each element\n     * is kept. Providing `true` for `isSorted` performs a faster search algorithm\n     * for sorted arrays. If an iteratee function is provided it is invoked for\n     * each element in the array to generate the criterion by which uniqueness\n     * is computed. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, array).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias unique\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {boolean} [isSorted] Specify the array is sorted.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     *\n     * // using `isSorted`\n     * _.uniq([1, 1, 2], true);\n     * // => [1, 2]\n     *\n     * // using an iteratee function\n     * _.uniq([1, 2.5, 1.5, 2], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => [1, 2.5]\n     *\n     * // using the `_.property` callback shorthand\n     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniq(array, isSorted, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (isSorted != null && typeof isSorted != 'boolean') {\n        thisArg = iteratee;\n        iteratee = isIterateeCall(array, isSorted, thisArg) ? undefined : isSorted;\n        isSorted = false;\n      }\n      var callback = getCallback();\n      if (!(iteratee == null && callback === baseCallback)) {\n        iteratee = callback(iteratee, thisArg, 3);\n      }\n      return (isSorted && getIndexOf() == baseIndexOf)\n        ? sortedUniq(array, iteratee)\n        : baseUniq(array, iteratee);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['fred', 'barney'], [30, 40], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var index = -1,\n          length = 0;\n\n      array = arrayFilter(array, function(group) {\n        if (isArrayLike(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = arrayMap(array, baseProperty(index));\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts an iteratee to specify\n     * how regrouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee] The function to combine regrouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      iteratee = bindCallback(iteratee, thisArg, 4);\n      return arrayMap(result, function(group) {\n        return arrayReduce(group, iteratee, undefined, true);\n      });\n    }\n\n    /**\n     * Creates an array excluding all provided values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to filter.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 3], 1, 2);\n     * // => [3]\n     */\n    var without = restParam(function(array, values) {\n      return isArrayLike(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the provided arrays.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * _.xor([1, 2], [4, 2]);\n     * // => [1, 4]\n     */\n    function xor() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var array = arguments[index];\n        if (isArrayLike(array)) {\n          var result = result\n            ? arrayPush(baseDifference(result, array), baseDifference(array, result))\n            : array;\n        }\n      }\n      return result ? baseUniq(result) : [];\n    }\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second elements\n     * of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    var zip = restParam(unzip);\n\n    /**\n     * The inverse of `_.pairs`; this method returns an object composed from arrays\n     * of property names and values. Provide either a single two dimensional array,\n     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\n     * and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @alias object\n     * @category Array\n     * @param {Array} props The property names.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject([['fred', 30], ['barney', 40]]);\n     * // => { 'fred': 30, 'barney': 40 }\n     *\n     * _.zipObject(['fred', 'barney'], [30, 40]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function zipObject(props, values) {\n      var index = -1,\n          length = props ? props.length : 0,\n          result = {};\n\n      if (length && !values && !isArray(props[0])) {\n        values = [];\n      }\n      while (++index < length) {\n        var key = props[index];\n        if (values) {\n          result[key] = values[index];\n        } else if (key) {\n          result[key[0]] = key[1];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an iteratee to specify\n     * how grouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee] The function to combine grouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], _.add);\n     * // => [111, 222]\n     */\n    var zipWith = restParam(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 2 ? arrays[length - 2] : undefined,\n          thisArg = length > 1 ? arrays[length - 1] : undefined;\n\n      if (length > 2 && typeof iteratee == 'function') {\n        length -= 2;\n      } else {\n        iteratee = (length > 1 && typeof thisArg == 'function') ? (--length, thisArg) : undefined;\n        thisArg = undefined;\n      }\n      arrays.length = length;\n      return unzipWith(arrays, iteratee, thisArg);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps `value` with explicit method\n     * chaining enabled.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _.chain(users)\n     *   .sortBy('age')\n     *   .map(function(chr) {\n     *     return chr.user + ' is ' + chr.age;\n     *   })\n     *   .first()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor is\n     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n     * this method is to \"tap into\" a method chain in order to perform operations\n     * on intermediate results within the chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor, thisArg) {\n      interceptor.call(thisArg, value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor, thisArg) {\n      return interceptor.call(thisArg, value);\n    }\n\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // without explicit chaining\n     * _(users).first();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // with explicit chaining\n     * _(users).chain()\n     *   .first()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chained sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Creates a new array joining a wrapped array with any additional arrays\n     * and/or values.\n     *\n     * @name concat\n     * @memberOf _\n     * @category Chain\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var wrapped = _(array).concat(2, [3], [[4]]);\n     *\n     * console.log(wrapped.value());\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    var wrapperConcat = restParam(function(values) {\n      values = baseFlatten(values);\n      return this.thru(function(array) {\n        return arrayConcat(isArray(array) ? array : [toObject(array)], values);\n      });\n    });\n\n    /**\n     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).map(function(value) {\n     *   return Math.pow(value, 2);\n     * });\n     *\n     * var other = [3, 4];\n     * var otherWrapped = wrapped.plant(other);\n     *\n     * otherWrapped.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * Reverses the wrapped array so the first element becomes the last, the\n     * second element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n\n      var interceptor = function(value) {\n        return (wrapped && wrapped.__dir__ < 0) ? value : value.reverse();\n      };\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(interceptor);\n    }\n\n    /**\n     * Produces the result of coercing the unwrapped value to a string.\n     *\n     * @name toString\n     * @memberOf _\n     * @category Chain\n     * @returns {string} Returns the coerced string value.\n     * @example\n     *\n     * _([1, 2, 3]).toString();\n     * // => '1,2,3'\n     */\n    function wrapperToString() {\n      return (this.value() + '');\n    }\n\n    /**\n     * Executes the chained sequence to extract the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @alias run, toJSON, valueOf\n     * @category Chain\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements corresponding to the given keys, or indexes,\n     * of `collection`. Keys may be specified as individual arguments or as arrays\n     * of keys.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(number|number[]|string|string[])} [props] The property names\n     *  or indexes of elements to pick, specified individually or in arrays.\n     * @returns {Array} Returns the new array of picked elements.\n     * @example\n     *\n     * _.at(['a', 'b', 'c'], [0, 2]);\n     * // => ['a', 'c']\n     *\n     * _.at(['barney', 'fred', 'pebbles'], 0, 2);\n     * // => ['barney', 'pebbles']\n     */\n    var at = restParam(function(collection, props) {\n      return baseAt(collection, baseFlatten(props));\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the number of times the key was returned by `iteratee`.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * The predicate is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias all\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': false },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.every(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias select\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.filter([4, 5, 6], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 6]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.filter(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.filter(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function filter(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias detect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.result(_.find(users, function(chr) {\n     *   return chr.age < 40;\n     * }), 'user');\n     * // => 'barney'\n     *\n     * // using the `_.matches` callback shorthand\n     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.result(_.find(users, 'active', false), 'user');\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.result(_.find(users, 'active'), 'user');\n     * // => 'barney'\n     */\n    var find = createFind(baseEach);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(baseEachRight, true);\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning the first element that has equivalent property\n     * values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n     * // => 'barney'\n     *\n     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n     * // => 'fred'\n     */\n    function findWhere(collection, source) {\n      return find(collection, baseMatches(source));\n    }\n\n    /**\n     * Iterates over elements of `collection` invoking `iteratee` for each element.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection). Iteratee functions may exit iteration early\n     * by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n     * may be used for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEach(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from left to right and returns the array\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n     *   console.log(n, key);\n     * });\n     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n     */\n    var forEach = createForEach(arrayEach, baseEach);\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEachRight(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from right to left and returns the array\n     */\n    var forEachRight = createForEach(arrayEachRight, baseEachRight);\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is an array of the elements responsible for generating the key.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * // using the `_.property` callback shorthand\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @alias contains, include\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} target The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.includes('pebbles', 'eb');\n     * // => true\n     */\n    function includes(collection, target, fromIndex, guard) {\n      var length = collection ? getLength(collection) : 0;\n      if (!isLength(length)) {\n        collection = values(collection);\n        length = collection.length;\n      }\n      if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {\n        fromIndex = 0;\n      } else {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n      }\n      return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n        ? (fromIndex <= length && collection.indexOf(target, fromIndex) > -1)\n        : (!!length && getIndexOf(collection, target, fromIndex) > -1);\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the last element responsible for generating the key. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var keyData = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.indexBy(keyData, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return String.fromCharCode(object.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return this.fromCharCode(object.code);\n     * }, String);\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     */\n    var indexBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `methodName` is a function it is\n     * invoked for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invoke([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invoke = restParam(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` through\n     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,\n     * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,\n     * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,\n     * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,\n     * `sum`, `uniq`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @alias collect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function timesThree(n) {\n     *   return n * 3;\n     * }\n     *\n     * _.map([1, 2], timesThree);\n     * // => [3, 6]\n     *\n     * _.map({ 'a': 1, 'b': 2 }, timesThree);\n     * // => [3, 6] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee, thisArg) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return func(collection, iteratee);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, while the second of which\n     * contains elements `predicate` returns falsey for. The predicate is bound\n     * to `thisArg` and invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * _.partition([1, 2, 3], function(n) {\n     *   return n % 2;\n     * });\n     * // => [[1, 3], [2]]\n     *\n     * _.partition([1.2, 2.3, 3.4], function(n) {\n     *   return this.floor(n) % 2;\n     * }, Math);\n     * // => [[1.2, 3.4], [2.3]]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * var mapper = function(array) {\n     *   return _.pluck(array, 'user');\n     * };\n     *\n     * // using the `_.matches` callback shorthand\n     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n     * // => [['pebbles'], ['barney', 'fred']]\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.map(_.partition(users, 'active', false), mapper);\n     * // => [['barney', 'pebbles'], ['fred']]\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(_.partition(users, 'active'), mapper);\n     * // => [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Gets the property value of `path` from all elements in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|string} path The path of the property to pluck.\n     * @returns {Array} Returns the property values.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.pluck(users, 'user');\n     * // => ['barney', 'fred']\n     *\n     * var userIndex = _.indexBy(users, 'user');\n     * _.pluck(userIndex, 'age');\n     * // => [36, 40] (iteration order is not guaranteed)\n     */\n    function pluck(collection, path) {\n      return map(collection, property(path));\n    }\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` through `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not provided the first element of `collection` is used as the initial\n     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `sortByAll`,\n     * and `sortByOrder`\n     *\n     * @static\n     * @memberOf _\n     * @alias foldl, inject\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.reduce([1, 2], function(total, n) {\n     *   return total + n;\n     * });\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     *   return result;\n     * }, {});\n     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n     */\n    var reduce = createReduce(arrayReduce, baseEach);\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias foldr\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    var reduceRight = createReduce(arrayReduceRight, baseEachRight);\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.reject([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [1, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.reject(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.reject(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function reject(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, function(value, index, collection) {\n        return !predicate(value, index, collection);\n      });\n    }\n\n    /**\n     * Gets a random element or `n` random elements from a collection.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to sample.\n     * @param {number} [n] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {*} Returns the random sample(s).\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     *\n     * _.sample([1, 2, 3, 4], 2);\n     * // => [3, 1]\n     */\n    function sample(collection, n, guard) {\n      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n        collection = toIterable(collection);\n        var length = collection.length;\n        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n      }\n      var index = -1,\n          result = toArray(collection),\n          length = result.length,\n          lastIndex = length - 1;\n\n      n = nativeMin(n < 0 ? 0 : (+n || 0), length);\n      while (++index < n) {\n        var rand = baseRandom(index, lastIndex),\n            value = result[rand];\n\n        result[rand] = result[index];\n        result[index] = value;\n      }\n      result.length = n;\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      return sample(collection, POSITIVE_INFINITY);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the size of `collection`.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      var length = collection ? getLength(collection) : 0;\n      return isLength(length) ? length : keys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * The function returns as soon as it finds a passing value and does not iterate\n     * over the entire collection. The predicate is bound to `thisArg` and invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias any\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.some(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through `iteratee`. This method performs\n     * a stable sort, that is, it preserves the original sort order of equal elements.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return Math.sin(n);\n     * });\n     * // => [3, 1, 2]\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return this.sin(n);\n     * }, Math);\n     * // => [3, 1, 2]\n     *\n     * var users = [\n     *   { 'user': 'fred' },\n     *   { 'user': 'pebbles' },\n     *   { 'user': 'barney' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.sortBy(users, 'user'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function sortBy(collection, iteratee, thisArg) {\n      if (collection == null) {\n        return [];\n      }\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n      var index = -1;\n      iteratee = getCallback(iteratee, thisArg, 3);\n\n      var result = baseMap(collection, function(value, key, collection) {\n        return { 'criteria': iteratee(value, key, collection), 'index': ++index, 'value': value };\n      });\n      return baseSortBy(result, compareAscending);\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it can sort by multiple iteratees\n     * or property names.\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees\n     *  The iteratees to sort by, specified as individual values or arrays of values.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n     * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n     *\n     * _.map(_.sortByAll(users, 'user', function(chr) {\n     *   return Math.floor(chr.age / 10);\n     * }), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    var sortByAll = restParam(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var guard = iteratees[2];\n      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {\n        iteratees.length = 1;\n      }\n      return baseSortByOrder(collection, baseFlatten(iteratees), []);\n    });\n\n    /**\n     * This method is like `_.sortByAll` except that it allows specifying the\n     * sort orders of the iteratees to sort by. If `orders` is unspecified, all\n     * values are sorted in ascending order. Otherwise, a value is sorted in\n     * ascending order if its corresponding order is \"asc\", and descending if \"desc\".\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // sort by `user` in ascending order and by `age` in descending order\n     * _.map(_.sortByOrder(users, ['user', 'age'], ['asc', 'desc']), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    function sortByOrder(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (guard && isIterateeCall(iteratees, orders, guard)) {\n        orders = undefined;\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseSortByOrder(collection, iteratees, orders);\n    }\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning an array of all elements that have equivalent\n     * property values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n     * // => ['fred']\n     */\n    function where(collection, source) {\n      return filter(collection, baseMatches(source));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the number of milliseconds that have elapsed since the Unix epoch\n     * (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @category Date\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => logs the number of milliseconds it took for the deferred function to be invoked\n     */\n    var now = nativeNow || function() {\n      return new Date().getTime();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it is called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'done saving!' after the two async saves have completed\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      n = nativeIsFinite(n = +n) ? n : 0;\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that accepts up to `n` arguments ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      if (guard && isIterateeCall(func, n, guard)) {\n        n = undefined;\n      }\n      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it is called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery('#add').on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and prepends any additional `_.bind` arguments to those provided to the\n     * bound function.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind` this method does not set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var greet = function(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * };\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // using placeholders\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = restParam(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bind.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method. Method names may be specified as individual arguments or as arrays\n     * of method names. If no method names are provided all enumerable function\n     * properties, own and inherited, of `object` are bound.\n     *\n     * **Note:** This method does not set the \"length\" property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} [methodNames] The object method names to bind,\n     *  specified as individual method names or arrays of method names.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view);\n     * jQuery('#docs').on('click', view.onClick);\n     * // => logs 'clicked docs' when the element is clicked\n     */\n    var bindAll = restParam(function(object, methodNames) {\n      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);\n\n      var index = -1,\n          length = methodNames.length;\n\n      while (++index < length) {\n        var key = methodNames[index];\n        object[key] = createWrapper(object[key], BIND_FLAG, object);\n      }\n      return object;\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` and prepends\n     * any additional `_.bindKey` arguments to those provided to the bound function.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist.\n     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object the method belongs to.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // using placeholders\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = restParam(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bindKey.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts one or more arguments of `func` that when\n     * called either invokes `func` returning its result, if all `func` arguments\n     * have been provided, or returns a function that accepts one or more of the\n     * remaining `func` arguments, and so on. The arity of `func` may be specified\n     * if `func.length` is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    var curry = createCurry(CURRY_FLAG);\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    var curryRight = createCurry(CURRY_RIGHT_FLAG);\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed invocations. Provide an options object to indicate that `func`\n     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n     * Subsequent calls to the debounced function return the result of the last\n     * `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n     *  delayed before it is invoked.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // avoid costly calculations while the window size is in flux\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n     *   'maxWait': 1000\n     * }));\n     *\n     * // cancel a debounced call\n     * var todoChanges = _.debounce(batchLog, 1000);\n     * Object.observe(models.todo, todoChanges);\n     *\n     * Object.observe(models, function(changes) {\n     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n     *     todoChanges.cancel();\n     *   }\n     * }, ['delete']);\n     *\n     * // ...at some point `models.todo` is changed\n     * models.todo.completed = true;\n     *\n     * // ...before 1 second has passed `models.todo` is deleted\n     * // which cancels the debounced `todoChanges` call\n     * delete models.todo;\n     */\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          maxWait = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = wait < 0 ? 0 : (+wait || 0);\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if (isObject(options)) {\n        leading = !!options.leading;\n        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function cancel() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        if (maxTimeoutId) {\n          clearTimeout(maxTimeoutId);\n        }\n        lastCalled = 0;\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n      }\n\n      function complete(isCalled, id) {\n        if (id) {\n          clearTimeout(id);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (isCalled) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = undefined;\n          }\n        }\n      }\n\n      function delayed() {\n        var remaining = wait - (now() - stamp);\n        if (remaining <= 0 || remaining > wait) {\n          complete(trailingCall, maxTimeoutId);\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      }\n\n      function maxDelayed() {\n        complete(trailing, timeoutId);\n      }\n\n      function debounced() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0 || remaining > maxWait;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          }\n          else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        }\n        else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = undefined;\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // logs 'deferred' after one or more milliseconds\n     */\n    var defer = restParam(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n    var delay = restParam(function(func, wait, args) {\n      return baseDelay(func, wait, args);\n    });\n\n    /**\n     * Creates a function that returns the result of invoking the provided\n     * functions with the `this` binding of the created function, where each\n     * successive invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow(_.add, square);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the provided functions from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias backflow, compose\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight(square, _.add);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is coerced to a string and used as the\n     * cache key. The `func` is invoked with the `this` binding of the memoized\n     * function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var upperCase = _.memoize(function(string) {\n     *   return string.toUpperCase();\n     * });\n     *\n     * upperCase('fred');\n     * // => 'FRED'\n     *\n     * // modifying the result cache\n     * upperCase.cache.set('fred', 'BARNEY');\n     * upperCase('fred');\n     * // => 'BARNEY'\n     *\n     * // replacing `_.memoize.Cache`\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'barney' };\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'fred' }\n     *\n     * _.memoize.Cache = WeakMap;\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'barney' }\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new memoize.Cache;\n      return memoized;\n    }\n\n    /**\n     * Creates a function that runs each argument through a corresponding\n     * transform function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms] The functions to transform\n     * arguments, specified as individual functions or arrays of functions.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var modded = _.modArgs(function(x, y) {\n     *   return [x, y];\n     * }, square, doubled);\n     *\n     * modded(1, 2);\n     * // => [1, 4]\n     *\n     * modded(5, 10);\n     * // => [25, 20]\n     */\n    var modArgs = restParam(function(func, transforms) {\n      transforms = baseFlatten(transforms);\n      if (typeof func != 'function' || !arrayEvery(transforms, baseIsFunction)) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = transforms.length;\n      return restParam(function(args) {\n        var index = nativeMin(args.length, length);\n        while (index--) {\n          args[index] = transforms[index](args[index]);\n        }\n        return func.apply(this, args);\n      });\n    });\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        return !predicate.apply(this, arguments);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first call. The `func` is invoked\n     * with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with `partial` arguments prepended\n     * to those provided to the new function. This method is like `_.bind` except\n     * it does **not** alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // using placeholders\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = createPartial(PARTIAL_FLAG);\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to those provided to the new function.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // using placeholders\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified indexes where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, 2, 0, 1);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     *\n     * var map = _.rearg(_.map, [1, 0]);\n     * map(function(n) {\n     *   return n * 3;\n     * }, [1, 2, 3]);\n     * // => [3, 6, 9]\n     */\n    var rearg = restParam(function(func, indexes) {\n      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes));\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as an array.\n     *\n     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.restParam(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function restParam(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            rest = Array(length);\n\n        while (++index < length) {\n          rest[index] = args[start + index];\n        }\n        switch (start) {\n          case 0: return func.call(this, rest);\n          case 1: return func.call(this, args[0], rest);\n          case 2: return func.call(this, args[0], args[1], rest);\n        }\n        var otherArgs = Array(start + 1);\n        index = -1;\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = rest;\n        return func.apply(this, otherArgs);\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the created\n     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n     *\n     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * // with a Promise\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function(array) {\n        return func.apply(this, array);\n      };\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed invocations. Provide an options object to indicate\n     * that `func` should be invoked on the leading and/or trailing edge of the\n     * `wait` timeout. Subsequent calls to the throttled function return the\n     * result of the last `func` call.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // avoid excessively updating the position while scrolling\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n     *   'trailing': false\n     * }));\n     *\n     * // cancel a trailing throttled call\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (options === false) {\n        leading = false;\n      } else if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, { 'leading': leading, 'maxWait': +wait, 'trailing': trailing });\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Any additional arguments provided to the function are\n     * appended to those provided to the wrapper function. The wrapper is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return createWrapper(wrapper, PARTIAL_FLAG, undefined, [value], []);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n     * otherwise they are assigned by reference. If `customizer` is provided it is\n     * invoked to produce the cloned values. If `customizer` returns `undefined`\n     * cloning is handled by the method instead. The `customizer` is bound to\n     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var shallow = _.clone(users);\n     * shallow[0] === users[0];\n     * // => true\n     *\n     * var deep = _.clone(users, true);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.clone(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 0\n     */\n    function clone(value, isDeep, customizer, thisArg) {\n      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n        isDeep = false;\n      }\n      else if (typeof isDeep == 'function') {\n        thisArg = customizer;\n        customizer = isDeep;\n        isDeep = false;\n      }\n      return typeof customizer == 'function'\n        ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, isDeep);\n    }\n\n    /**\n     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n     * to produce the cloned values. If `customizer` returns `undefined` cloning\n     * is handled by the method instead. The `customizer` is bound to `thisArg`\n     * and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var deep = _.cloneDeep(users);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.cloneDeep(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 20\n     */\n    function cloneDeep(value, customizer, thisArg) {\n      return typeof customizer == 'function'\n        ? baseClone(value, true, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, true);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    function gt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    function gte(value, other) {\n      return value >= other;\n    }\n\n    /**\n     * Checks if `value` is classified as an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      return isObjectLike(value) && isArrayLike(value) &&\n        hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(function() { return arguments; }());\n     * // => false\n     */\n    var isArray = nativeIsArray || function(value) {\n      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n    };\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    function isDate(value) {\n      return isObjectLike(value) && objToString.call(value) == dateTag;\n    }\n\n    /**\n     * Checks if `value` is a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is empty. A value is considered empty unless it is an\n     * `arguments` object, array, string, or jQuery-like collection with a length\n     * greater than `0` or an object with own enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) ||\n          (isObjectLike(value) && isFunction(value.splice)))) {\n        return !value.length;\n      }\n      return !keys(value).length;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent. If `customizer` is provided it is invoked to compare values.\n     * If `customizer` returns `undefined` comparisons are handled by the method\n     * instead. The `customizer` is bound to `thisArg` and invoked with three\n     * arguments: (value, other [, index|key]).\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. Functions and DOM nodes\n     * are **not** supported. Provide a customizer function to extend support\n     * for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @alias eq\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * object == other;\n     * // => false\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * // using a customizer callback\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqual(array, other, function(value, other) {\n     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n     *     return true;\n     *   }\n     * });\n     * // => true\n     */\n    function isEqual(value, other, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return  result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on [`Number.isFinite`](http://ecma-international.org/ecma-262/6.0/#sec-number.isfinite).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(10);\n     * // => true\n     *\n     * _.isFinite('10');\n     * // => false\n     *\n     * _.isFinite(true);\n     * // => false\n     *\n     * _.isFinite(Object(10));\n     * // => false\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in older versions of Chrome and Safari which return 'function' for regexes\n      // and Safari 8 equivalents which return 'object' for typed array constructors.\n      return isObject(value) && objToString.call(value) == funcTag;\n    }\n\n    /**\n     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(1);\n     * // => false\n     */\n    function isObject(value) {\n      // Avoid a V8 JIT bug in Chrome 19-20.\n      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n      var type = typeof value;\n      return !!value && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Performs a deep comparison between `object` and `source` to determine if\n     * `object` contains equivalent property values. If `customizer` is provided\n     * it is invoked to compare values. If `customizer` returns `undefined`\n     * comparisons are handled by the method instead. The `customizer` is bound\n     * to `thisArg` and invoked with three arguments: (value, other, index|key).\n     *\n     * **Note:** This method supports comparing properties of arrays, booleans,\n     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n     * and DOM nodes are **not** supported. Provide a customizer function to extend\n     * support for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.isMatch(object, { 'age': 40 });\n     * // => true\n     *\n     * _.isMatch(object, { 'age': 36 });\n     * // => false\n     *\n     * // using a customizer callback\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatch(object, source, function(value, other) {\n     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n     * });\n     * // => true\n     */\n    function isMatch(object, source, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      return baseIsMatch(object, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n     * which returns `true` for `undefined` and other non-numeric values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (value == null) {\n        return false;\n      }\n      if (isFunction(value)) {\n        return reIsNative.test(fnToString.call(value));\n      }\n      return isObjectLike(value) && reIsHostCtor.test(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n     * as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isNumber(8.4);\n     * // => true\n     *\n     * _.isNumber(NaN);\n     * // => true\n     *\n     * _.isNumber('8.4');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * **Note:** This method assumes objects created by the `Object` constructor\n     * have no inherited enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      var Ctor;\n\n      // Exit early for non `Object` objects.\n      if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isArguments(value)) ||\n          (!hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n        return false;\n      }\n      // IE < 9 iterates inherited properties before own properties. If the first\n      // iterated property is an object's own property then there are no inherited\n      // enumerable properties.\n      var result;\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      baseForIn(value, function(subValue, key) {\n        result = key;\n      });\n      return result === undefined || hasOwnProperty.call(value, result);\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    function isRegExp(value) {\n      return isObject(value) && objToString.call(value) == regexpTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    function isTypedArray(value) {\n      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    function lt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    function lte(value, other) {\n      return value <= other;\n    }\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * (function() {\n     *   return _.toArray(arguments).slice(1);\n     * }(1, 2, 3));\n     * // => [2, 3]\n     */\n    function toArray(value) {\n      var length = value ? getLength(value) : 0;\n      if (!isLength(length)) {\n        return values(value);\n      }\n      if (!length) {\n        return [];\n      }\n      return arrayCopy(value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable\n     * properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return baseCopy(value, keysIn(value));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Recursively merges own enumerable properties of the source object(s), that\n     * don't resolve to `undefined` into the destination object. Subsequent sources\n     * overwrite property assignments of previous sources. If `customizer` is\n     * provided it is invoked to produce the merged values of the destination and\n     * source properties. If `customizer` returns `undefined` merging is handled\n     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n     * with five arguments: (objectValue, sourceValue, key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var users = {\n     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n     * };\n     *\n     * var ages = {\n     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n     * };\n     *\n     * _.merge(users, ages);\n     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n     *\n     * // using a customizer callback\n     * var object = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var other = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.merge(object, other, function(a, b) {\n     *   if (_.isArray(a)) {\n     *     return a.concat(b);\n     *   }\n     * });\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n     */\n    var merge = createAssigner(baseMerge);\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object. Subsequent sources overwrite property assignments of previous sources.\n     * If `customizer` is provided it is invoked to produce the assigned values.\n     * The `customizer` is bound to `thisArg` and invoked with five arguments:\n     * (objectValue, sourceValue, key, object, source).\n     *\n     * **Note:** This method mutates `object` and is based on\n     * [`Object.assign`](http://ecma-international.org/ecma-262/6.0/#sec-object.assign).\n     *\n     * @static\n     * @memberOf _\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using a customizer callback\n     * var defaults = _.partialRight(_.assign, function(value, other) {\n     *   return _.isUndefined(value) ? other : value;\n     * });\n     *\n     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var assign = createAssigner(function(object, source, customizer) {\n      return customizer\n        ? assignWith(object, source, customizer)\n        : baseAssign(object, source);\n    });\n\n    /**\n     * Creates an object that inherits from the given `prototype` object. If a\n     * `properties` object is provided its own enumerable properties are assigned\n     * to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties, guard) {\n      var result = baseCreate(prototype);\n      if (guard && isIterateeCall(prototype, properties, guard)) {\n        properties = undefined;\n      }\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object for all destination properties that resolve to `undefined`. Once a\n     * property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var defaults = createDefaults(assign, assignDefaults);\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n     *\n     */\n    var defaultsDeep = createDefaults(merge, mergeDefaults);\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    var findKey = createFindKey(baseForOwn);\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    var findLastKey = createFindKey(baseForOwnRight);\n\n    /**\n     * Iterates over own and inherited enumerable properties of an object invoking\n     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n     */\n    var forIn = createForIn(baseFor);\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n     */\n    var forInRight = createForIn(baseForRight);\n\n    /**\n     * Iterates over own enumerable properties of an object invoking `iteratee`\n     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n     * three arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a' and 'b' (iteration order is not guaranteed)\n     */\n    var forOwn = createForOwn(baseForOwn);\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n     */\n    var forOwnRight = createForOwn(baseForOwnRight);\n\n    /**\n     * Creates an array of function property names from all enumerable properties,\n     * own and inherited, of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @alias methods\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of property names.\n     * @example\n     *\n     * _.functions(_);\n     * // => ['after', 'ary', 'assign', ...]\n     */\n    function functions(object) {\n      return baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the property value at `path` of `object`. If the resolved value is\n     * `undefined` the `defaultValue` is used in its place.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, toPath(path), path + '');\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': { 'c': 3 } } };\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b.c');\n     * // => true\n     *\n     * _.has(object, ['a', 'b', 'c']);\n     * // => true\n     */\n    function has(object, path) {\n      if (object == null) {\n        return false;\n      }\n      var result = hasOwnProperty.call(object, path);\n      if (!result && !isKey(path)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        if (object == null) {\n          return false;\n        }\n        path = last(path);\n        result = hasOwnProperty.call(object, path);\n      }\n      return result || (isLength(object.length) && isIndex(path, object.length) &&\n        (isArray(object) || isArguments(object)));\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite property\n     * assignments of previous values unless `multiValue` is `true`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {boolean} [multiValue] Allow multiple values per key.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     *\n     * // with `multiValue`\n     * _.invert(object, true);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function invert(object, multiValue, guard) {\n      if (guard && isIterateeCall(object, multiValue, guard)) {\n        multiValue = undefined;\n      }\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (multiValue) {\n          if (hasOwnProperty.call(result, value)) {\n            result[value].push(key);\n          } else {\n            result[value] = [key];\n          }\n        }\n        else {\n          result[value] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    var keys = !nativeKeys ? shimKeys : function(object) {\n      var Ctor = object == null ? undefined : object.constructor;\n      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n          (typeof object != 'function' && isArrayLike(object))) {\n        return shimKeys(object);\n      }\n      return isObject(object) ? nativeKeys(object) : [];\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      if (object == null) {\n        return [];\n      }\n      if (!isObject(object)) {\n        object = Object(object);\n      }\n      var length = object.length;\n      length = (length && isLength(length) &&\n        (isArray(object) || isArguments(object)) && length) || 0;\n\n      var Ctor = object.constructor,\n          index = -1,\n          isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n          result = Array(length),\n          skipIndexes = length > 0;\n\n      while (++index < length) {\n        result[index] = (index + '');\n      }\n      for (var key in object) {\n        if (!(skipIndexes && isIndex(key, length)) &&\n            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * property of `object` through `iteratee`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    var mapKeys = createObjectMapper(true);\n\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through `iteratee`. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, key, object).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n     *   return n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // using the `_.property` callback shorthand\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    var mapValues = createObjectMapper();\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable properties of `object` that are not omitted.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to omit, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.omit(object, 'age');\n     * // => { 'user': 'fred' }\n     *\n     * _.omit(object, _.isNumber);\n     * // => { 'user': 'fred' }\n     */\n    var omit = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      if (typeof props[0] != 'function') {\n        var props = arrayMap(baseFlatten(props), String);\n        return pickByArray(object, baseDifference(keysIn(object), props));\n      }\n      var predicate = bindCallback(props[0], props[1], 3);\n      return pickByCallback(object, function(value, key, object) {\n        return !predicate(value, key, object);\n      });\n    });\n\n    /**\n     * Creates a two dimensional array of the key-value pairs for `object`,\n     * e.g. `[[key1, value1], [key2, value2]]`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the new array of key-value pairs.\n     * @example\n     *\n     * _.pairs({ 'barney': 36, 'fred': 40 });\n     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n     */\n    function pairs(object) {\n      object = toObject(object);\n\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var key = props[index];\n        result[index] = [key, object[key]];\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties. Property\n     * names may be specified as individual arguments or as arrays of property\n     * names. If `predicate` is provided it is invoked for each property of `object`\n     * picking the properties `predicate` returns truthy for. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to pick, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.pick(object, 'user');\n     * // => { 'user': 'fred' }\n     *\n     * _.pick(object, _.isString);\n     * // => { 'user': 'fred' }\n     */\n    var pick = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      return typeof props[0] == 'function'\n        ? pickByCallback(object, bindCallback(props[0], props[1], 3))\n        : pickByArray(object, baseFlatten(props));\n    });\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a function\n     * it is invoked with the `this` binding of its parent object and its result\n     * is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a.b.c', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a.b.c', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      var result = object == null ? undefined : object[path];\n      if (result === undefined) {\n        if (object != null && !isKey(path, object)) {\n          path = toPath(path);\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          result = object == null ? undefined : object[last(path)];\n        }\n        result = result === undefined ? defaultValue : result;\n      }\n      return isFunction(result) ? result.call(object) : result;\n    }\n\n    /**\n     * Sets the property value of `path` on `object`. If a portion of `path`\n     * does not exist it is created.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to augment.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, 'x[0].y.z', 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      if (object == null) {\n        return object;\n      }\n      var pathKey = (path + '');\n      path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = path[index];\n        if (isObject(nested)) {\n          if (index == lastIndex) {\n            nested[key] = value;\n          } else if (nested[key] == null) {\n            nested[key] = isIndex(path[index + 1]) ? [] : {};\n          }\n        }\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own enumerable\n     * properties through `iteratee`, with each invocation potentially mutating\n     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n     * with four arguments: (accumulator, value, key, object). Iteratee functions\n     * may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     */\n    function transform(object, iteratee, accumulator, thisArg) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getCallback(iteratee, thisArg, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Creates an array of the own enumerable property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property values\n     * of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Checks if `n` is between `start` and up to but not including, `end`. If\n     * `end` is not specified it is set to `start` with `start` then set to `0`.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} n The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     */\n    function inRange(value, start, end) {\n      start = +start || 0;\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      return value >= nativeMin(start, end) && value < nativeMax(start, end);\n    }\n\n    /**\n     * Produces a random number between `min` and `max` (inclusive). If only one\n     * argument is provided a number between `0` and the given number is returned.\n     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n     * number is returned instead of an integer.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} [min=0] The minimum possible value.\n     * @param {number} [max=1] The maximum possible value.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(min, max, floating) {\n      if (floating && isIterateeCall(min, max, floating)) {\n        max = floating = undefined;\n      }\n      var noMin = min == null,\n          noMax = max == null;\n\n      if (floating == null) {\n        if (noMax && typeof min == 'boolean') {\n          floating = min;\n          min = 1;\n        }\n        else if (typeof max == 'boolean') {\n          floating = max;\n          noMax = true;\n        }\n      }\n      if (noMin && noMax) {\n        max = 1;\n        noMax = false;\n      }\n      min = +min || 0;\n      if (noMax) {\n        max = min;\n        min = 0;\n      } else {\n        max = +max || 0;\n      }\n      if (floating || min % 1 || max % 1) {\n        var rand = nativeRandom();\n        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n      }\n      return baseRandom(min, max);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__foo_bar__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n    });\n\n    /**\n     * Capitalizes the first character of `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('fred');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      string = baseToString(string);\n      return string && (string.charAt(0).toUpperCase() + string.slice(1));\n    }\n\n    /**\n     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = baseToString(string);\n      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search from.\n     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = baseToString(string);\n      target = (target + '');\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : nativeMin(position < 0 ? 0 : (+position || 0), length);\n\n      position -= target.length;\n      return position >= 0 && string.indexOf(target, position) == position;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional characters\n     * use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value.\n     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in Internet Explorer < 9, they can break out\n     * of attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n     * for more details.\n     *\n     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n     * to reduce XSS vectors.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n      string = baseToString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n     * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n     */\n    function escapeRegExp(string) {\n      string = baseToString(string);\n      return (string && reHasRegExpChars.test(string))\n        ? string.replace(reRegExpChars, escapeRegExpChar)\n        : (string || '(?:)');\n    }\n\n    /**\n     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__foo_bar__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = baseToString(string);\n      length = +length;\n\n      var strLength = string.length;\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return string;\n      }\n      var mid = (length - strLength) / 2,\n          leftLength = nativeFloor(mid),\n          rightLength = nativeCeil(mid);\n\n      chars = createPadding('', rightLength, chars);\n      return chars.slice(0, leftLength) + string + chars;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padLeft('abc', 6);\n     * // => '   abc'\n     *\n     * _.padLeft('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padLeft('abc', 3);\n     * // => 'abc'\n     */\n    var padLeft = createPadDir();\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padRight('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padRight('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padRight('abc', 3);\n     * // => 'abc'\n     */\n    var padRight = createPadDir(true);\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n     * in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\n     * of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n      // Chrome fails to trim leading <BOM> whitespace characters.\n      // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n      if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      string = trim(string);\n      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=0] The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n) {\n      var result = '';\n      string = baseToString(string);\n      n = +n;\n      if (n < 1 || !string || !nativeIsFinite(n)) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        string += string;\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--foo-bar');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__foo_bar__');\n     * // => 'Foo Bar'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = baseToString(string);\n      position = position == null\n        ? 0\n        : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n\n      return string.lastIndexOf(target, position) == position;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is provided it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [options.variable] The data object variable name.\n     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // using the \"interpolate\" delimiter to create a compiled template\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // using the HTML \"escape\" delimiter to escape data property values\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the internal `print` function in \"evaluate\" delimiters\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // using custom template delimiters\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // using backslashes to treat delimiters as plain text\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // using the `imports` option to import `jQuery` as `jq`\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the `sourceURL` option to specify a custom sourceURL for the template\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // using the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and a stack trace\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, otherOptions) {\n      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n        options = otherOptions = undefined;\n      }\n      string = baseToString(string);\n      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\n      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products requires returning the `match`\n        // string in order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n      }\n      chars = (chars + '');\n      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimLeft('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimLeft('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimLeft(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string));\n      }\n      return string.slice(charsLeftIndex(string, (chars + '')));\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimRight('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimRight('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimRight(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(0, trimmedRightIndex(string) + 1);\n      }\n      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object|number} [options] The options object or maximum string length.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.trunc('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', 24);\n     * // => 'hi-diddly-ho there, n...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function trunc(string, options, guard) {\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (options != null) {\n        if (isObject(options)) {\n          var separator = 'separator' in options ? options.separator : separator;\n          length = 'length' in options ? (+options.length || 0) : length;\n          omission = 'omission' in options ? baseToString(options.omission) : omission;\n        } else {\n          length = +options || 0;\n        }\n      }\n      string = baseToString(string);\n      if (length >= string.length) {\n        return string;\n      }\n      var end = length - omission.length;\n      if (end < 1) {\n        return omission;\n      }\n      var result = string.slice(0, end);\n      if (separator == null) {\n        return result + omission;\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              newEnd,\n              substring = string.slice(0, end);\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            newEnd = match.index;\n          }\n          result = result.slice(0, newEnd == null ? end : newEnd);\n        }\n      } else if (string.indexOf(separator, end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n     * corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n     * entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = baseToString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      if (guard && isIterateeCall(string, pattern, guard)) {\n        pattern = undefined;\n      }\n      string = baseToString(string);\n      return string.match(pattern || reWords) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function} func The function to attempt.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // avoid throwing errors for invalid selectors\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = restParam(function(func, args) {\n      try {\n        return func.apply(undefined, args);\n      } catch(e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and arguments of the created function. If `func` is a property name the\n     * created callback returns the property value for a given element. If `func`\n     * is an object the created callback returns `true` for elements that contain\n     * the equivalent object properties, otherwise it returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias iteratee\n     * @category Utility\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // wrap to create custom callback shorthands\n     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n     *   if (!match) {\n     *     return callback(func, thisArg);\n     *   }\n     *   return function(object) {\n     *     return match[2] == 'gt'\n     *       ? object[match[1]] > match[3]\n     *       : object[match[1]] < match[3];\n     *   };\n     * });\n     *\n     * _.filter(users, 'age__gt36');\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n    function callback(func, thisArg, guard) {\n      if (guard && isIterateeCall(func, thisArg, guard)) {\n        thisArg = undefined;\n      }\n      return isObjectLike(func)\n        ? matches(func)\n        : baseCallback(func, thisArg);\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var getter = _.constant(object);\n     *\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * This method returns the first argument provided to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that performs a deep comparison between a given object\n     * and `source`, returning `true` if the given object has equivalent property\n     * values, else `false`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that compares the property value of `path` on a given\n     * object to `value`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * _.find(users, _.matchesProperty('user', 'fred'));\n     * // => { 'user': 'fred' }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` on a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    var method = restParam(function(path, args) {\n      return function(object) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path on `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = restParam(function(object, args) {\n      return function(path) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable function properties of a source object to the\n     * destination object. If `object` is a function then methods are added to\n     * its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added\n     *  are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      if (options == null) {\n        var isObj = isObject(source),\n            props = isObj ? keys(source) : undefined,\n            methodNames = (props && props.length) ? baseFunctions(source, props) : undefined;\n\n        if (!(methodNames ? methodNames.length : isObj)) {\n          methodNames = false;\n          options = source;\n          source = object;\n          object = this;\n        }\n      }\n      if (!methodNames) {\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = true,\n          index = -1,\n          isFunc = isFunction(object),\n          length = methodNames.length;\n\n      if (options === false) {\n        chain = false;\n      } else if (isObject(options) && 'chain' in options) {\n        chain = options.chain;\n      }\n      while (++index < length) {\n        var methodName = methodNames[index],\n            func = source[methodName];\n\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = (function(func) {\n            return function() {\n              var chainAll = this.__chain__;\n              if (chain || chainAll) {\n                var result = object(this.__wrapped__),\n                    actions = result.__actions__ = arrayCopy(this.__actions__);\n\n                actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n                result.__chain__ = chainAll;\n                return result;\n              }\n              return func.apply(object, arrayPush([this.value()], arguments));\n            };\n          }(func));\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      root._ = oldDash;\n      return this;\n    }\n\n    /**\n     * A no-operation function that returns `undefined` regardless of the\n     * arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that returns the property value at `path` on a\n     * given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': 2 } } },\n     *   { 'a': { 'b': { 'c': 1 } } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the property value at a given path on `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return baseGet(object, toPath(path), path + '');\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. If `end` is not specified it is\n     * set to `start` with `start` then set to `0`. If `end` is less than `start`\n     * a zero-length range is created unless a negative `step` is specified.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the new array of numbers.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    function range(start, end, step) {\n      if (step && isIterateeCall(start, end, step)) {\n        end = step = undefined;\n      }\n      start = +start || 0;\n      step = step == null ? 1 : (+step || 0);\n\n      if (end == null) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the iteratee function `n` times, returning an array of the results\n     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n     * one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n     * // => [3, 6, 4]\n     *\n     * _.times(3, function(n) {\n     *   mage.castSpell(n);\n     * });\n     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`\n     *\n     * _.times(3, function(n) {\n     *   this.cast(n);\n     * }, mage);\n     * // => also invokes `mage.castSpell(n)` three times\n     */\n    function times(n, iteratee, thisArg) {\n      n = nativeFloor(n);\n\n      // Exit early to avoid a JSC JIT bug in Safari 8\n      // where `Array(0)` is treated as `Array(1)`.\n      if (n < 1 || !nativeIsFinite(n)) {\n        return [];\n      }\n      var index = -1,\n          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\n      iteratee = bindCallback(iteratee, thisArg, 1);\n      while (++index < n) {\n        if (index < MAX_ARRAY_LENGTH) {\n          result[index] = iteratee(index);\n        } else {\n          iteratee(index);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return baseToString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} augend The first number to add.\n     * @param {number} addend The second number to add.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    function add(augend, addend) {\n      return (+augend || 0) + (+addend || 0);\n    }\n\n    /**\n     * Calculates `n` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Calculates `n` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => -Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.max(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.max(users, 'age');\n     * // => { 'user': 'fred', 'age': 40 }\n     */\n    var max = createExtremum(gt, NEGATIVE_INFINITY);\n\n    /**\n     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n     * `Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.min(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.min(users, 'age');\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var min = createExtremum(lt, POSITIVE_INFINITY);\n\n    /**\n     * Calculates `n` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Gets the sum of the values in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 6]);\n     * // => 10\n     *\n     * _.sum({ 'a': 4, 'b': 6 });\n     * // => 10\n     *\n     * var objects = [\n     *   { 'n': 4 },\n     *   { 'n': 6 }\n     * ];\n     *\n     * _.sum(objects, function(object) {\n     *   return object.n;\n     * });\n     * // => 10\n     *\n     * // using the `_.property` callback shorthand\n     * _.sum(objects, 'n');\n     * // => 10\n     */\n    function sum(collection, iteratee, thisArg) {\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return iteratee.length == 1\n        ? arraySum(isArray(collection) ? collection : toIterable(collection), iteratee)\n        : baseSum(collection, iteratee);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    // Add functions to the `Map` cache.\n    MapCache.prototype['delete'] = mapDelete;\n    MapCache.prototype.get = mapGet;\n    MapCache.prototype.has = mapHas;\n    MapCache.prototype.set = mapSet;\n\n    // Add functions to the `Set` cache.\n    SetCache.prototype.push = cachePush;\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    // Add functions that return wrapped values when chaining.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.callback = callback;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.functions = functions;\n    lodash.groupBy = groupBy;\n    lodash.indexBy = indexBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.invert = invert;\n    lodash.invoke = invoke;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.modArgs = modArgs;\n    lodash.negate = negate;\n    lodash.omit = omit;\n    lodash.once = once;\n    lodash.pairs = pairs;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pluck = pluck;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.restParam = restParam;\n    lodash.set = set;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortByAll = sortByAll;\n    lodash.sortByOrder = sortByOrder;\n    lodash.spread = spread;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.times = times;\n    lodash.toArray = toArray;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.union = union;\n    lodash.uniq = uniq;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.where = where;\n    lodash.without = without;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.backflow = flowRight;\n    lodash.collect = map;\n    lodash.compose = flowRight;\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.extend = assign;\n    lodash.iteratee = callback;\n    lodash.methods = functions;\n    lodash.object = zipObject;\n    lodash.select = filter;\n    lodash.tail = rest;\n    lodash.unique = uniq;\n\n    // Add functions to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions that return unwrapped values when chaining.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.deburr = deburr;\n    lodash.endsWith = endsWith;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.findWhere = findWhere;\n    lodash.first = first;\n    lodash.floor = floor;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isBoolean = isBoolean;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isMatch = isMatch;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isString = isString;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.min = min;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padLeft = padLeft;\n    lodash.padRight = padRight;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.sum = sum;\n    lodash.template = template;\n    lodash.trim = trim;\n    lodash.trimLeft = trimLeft;\n    lodash.trimRight = trimRight;\n    lodash.trunc = trunc;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.words = words;\n\n    // Add aliases.\n    lodash.all = every;\n    lodash.any = some;\n    lodash.contains = includes;\n    lodash.eq = isEqual;\n    lodash.detect = find;\n    lodash.foldl = reduce;\n    lodash.foldr = reduceRight;\n    lodash.head = first;\n    lodash.include = includes;\n    lodash.inject = reduce;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!lodash.prototype[methodName]) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), false);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions capable of returning wrapped and unwrapped values when chaining.\n    lodash.sample = sample;\n\n    lodash.prototype.sample = function(n) {\n      if (!this.__chain__ && n == null) {\n        return sample(this.value());\n      }\n      return this.thru(function(value) {\n        return sample(value, n);\n      });\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__;\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n        n = n == null ? 1 : nativeMax(nativeFloor(n) || 0, 0);\n\n        var result = this.clone();\n        if (filtered) {\n          result.__takeCount__ = nativeMin(result.__takeCount__, n);\n        } else {\n          result.__views__.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type != LAZY_MAP_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {\n        var result = this.clone();\n        result.__iteratees__.push({ 'iteratee': getCallback(iteratee, thisArg, 1), 'type': type });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.first` and `_.last`.\n    arrayEach(['first', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n    arrayEach(['initial', 'rest'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n    arrayEach(['pluck', 'where'], function(methodName, index) {\n      var operationName = index ? 'filter' : 'map',\n          createCallback = index ? baseMatches : property;\n\n      LazyWrapper.prototype[methodName] = function(value) {\n        return this[operationName](createCallback(value));\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.reject = function(predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 1);\n      return this.filter(function(value) {\n        return !predicate(value);\n      });\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = start == null ? 0 : (+start || 0);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = (+end || 0);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate, thisArg) {\n      return this.reverse().takeWhile(predicate, thisArg).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(POSITIVE_INFINITY);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),\n          retUnwrapped = /^(?:first|last)$/.test(methodName),\n          lodashFunc = lodash[retUnwrapped ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName];\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var args = retUnwrapped ? [1] : arguments,\n            chainAll = this.__chain__,\n            value = this.__wrapped__,\n            isHybrid = !!this.__actions__.length,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var interceptor = function(value) {\n          return (retUnwrapped && chainAll)\n            ? lodashFunc(value, 1)[0]\n            : lodashFunc.apply(undefined, arrayPush([value], args));\n        };\n\n        var action = { 'func': thru, 'args': [interceptor], 'thisArg': undefined },\n            onlyLazy = isLazy && !isHybrid;\n\n        if (retUnwrapped && !chainAll) {\n          if (onlyLazy) {\n            value = value.clone();\n            value.__actions__.push(action);\n            return func.call(value);\n          }\n          return lodashFunc.call(undefined, this.value())[0];\n        }\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push(action);\n          return new LodashWrapper(result, chainAll);\n        }\n        return this.thru(interceptor);\n      };\n    });\n\n    // Add `Array` and `String` methods to `lodash.prototype`.\n    arrayEach(['join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName) {\n      var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          return func.apply(this.value(), args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(value, args);\n        });\n      };\n    });\n\n    // Map minified function names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name,\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': undefined }];\n\n    // Add functions to the lazy wrapper.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chaining functions to the `lodash` wrapper.\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.concat = wrapperConcat;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toString = wrapperToString;\n    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add function aliases to the `lodash` wrapper.\n    lodash.prototype.collect = lodash.prototype.map;\n    lodash.prototype.head = lodash.prototype.first;\n    lodash.prototype.select = lodash.prototype.filter;\n    lodash.prototype.tail = lodash.prototype.rest;\n\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose lodash to the global object when an AMD loader is present to avoid\n    // errors in cases where lodash is loaded by a script tag and not intended\n    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n    // more details.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for Node.js or RingoJS.\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // Export for Rhino with CommonJS support.\n    else {\n      freeExports._ = _;\n    }\n  }\n  else {\n    // Export for a browser or Rhino.\n    root._ = _;\n  }\n}.call(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/~/lodash/index.js\n ** module id = 110\n ** module chunks = 0\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 111\n ** module chunks = 0 1\n **/","module.exports = '1.0.7';\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/~/graphlib/lib/version.js\n ** module id = 112\n ** module chunks = 0\n **/","var _ = require(\"./lodash\"),\n    Graph = require(\"./graph\");\n\nmodule.exports = {\n  write: write,\n  read: read\n};\n\nfunction write(g) {\n  var json = {\n    options: {\n      directed: g.isDirected(),\n      multigraph: g.isMultigraph(),\n      compound: g.isCompound()\n    },\n    nodes: writeNodes(g),\n    edges: writeEdges(g)\n  };\n  if (!_.isUndefined(g.graph())) {\n    json.value = _.clone(g.graph());\n  }\n  return json;\n}\n\nfunction writeNodes(g) {\n  return _.map(g.nodes(), function(v) {\n    var nodeValue = g.node(v),\n        parent = g.parent(v),\n        node = { v: v };\n    if (!_.isUndefined(nodeValue)) {\n      node.value = nodeValue;\n    }\n    if (!_.isUndefined(parent)) {\n      node.parent = parent;\n    }\n    return node;\n  });\n}\n\nfunction writeEdges(g) {\n  return _.map(g.edges(), function(e) {\n    var edgeValue = g.edge(e),\n        edge = { v: e.v, w: e.w };\n    if (!_.isUndefined(e.name)) {\n      edge.name = e.name;\n    }\n    if (!_.isUndefined(edgeValue)) {\n      edge.value = edgeValue;\n    }\n    return edge;\n  });\n}\n\nfunction read(json) {\n  var g = new Graph(json.options).setGraph(json.value);\n  _.each(json.nodes, function(entry) {\n    g.setNode(entry.v, entry.value);\n    if (entry.parent) {\n      g.setParent(entry.v, entry.parent);\n    }\n  });\n  _.each(json.edges, function(entry) {\n    g.setEdge({ v: entry.v, w: entry.w, name: entry.name }, entry.value);\n  });\n  return g;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/~/graphlib/lib/json.js\n ** module id = 113\n ** module chunks = 0\n **/","module.exports = {\n  components: require(\"./components\"),\n  dijkstra: require(\"./dijkstra\"),\n  dijkstraAll: require(\"./dijkstra-all\"),\n  findCycles: require(\"./find-cycles\"),\n  floydWarshall: require(\"./floyd-warshall\"),\n  isAcyclic: require(\"./is-acyclic\"),\n  postorder: require(\"./postorder\"),\n  preorder: require(\"./preorder\"),\n  prim: require(\"./prim\"),\n  tarjan: require(\"./tarjan\"),\n  topsort: require(\"./topsort\")\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/~/graphlib/lib/alg/index.js\n ** module id = 114\n ** module chunks = 0\n **/","var _ = require(\"../lodash\");\n\nmodule.exports = components;\n\nfunction components(g) {\n  var visited = {},\n      cmpts = [],\n      cmpt;\n\n  function dfs(v) {\n    if (_.has(visited, v)) return;\n    visited[v] = true;\n    cmpt.push(v);\n    _.each(g.successors(v), dfs);\n    _.each(g.predecessors(v), dfs);\n  }\n\n  _.each(g.nodes(), function(v) {\n    cmpt = [];\n    dfs(v);\n    if (cmpt.length) {\n      cmpts.push(cmpt);\n    }\n  });\n\n  return cmpts;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/~/graphlib/lib/alg/components.js\n ** module id = 115\n ** module chunks = 0\n **/","var _ = require(\"../lodash\"),\n    PriorityQueue = require(\"../data/priority-queue\");\n\nmodule.exports = dijkstra;\n\nvar DEFAULT_WEIGHT_FUNC = _.constant(1);\n\nfunction dijkstra(g, source, weightFn, edgeFn) {\n  return runDijkstra(g, String(source),\n                     weightFn || DEFAULT_WEIGHT_FUNC,\n                     edgeFn || function(v) { return g.outEdges(v); });\n}\n\nfunction runDijkstra(g, source, weightFn, edgeFn) {\n  var results = {},\n      pq = new PriorityQueue(),\n      v, vEntry;\n\n  var updateNeighbors = function(edge) {\n    var w = edge.v !== v ? edge.v : edge.w,\n        wEntry = results[w],\n        weight = weightFn(edge),\n        distance = vEntry.distance + weight;\n\n    if (weight < 0) {\n      throw new Error(\"dijkstra does not allow negative edge weights. \" +\n                      \"Bad edge: \" + edge + \" Weight: \" + weight);\n    }\n\n    if (distance < wEntry.distance) {\n      wEntry.distance = distance;\n      wEntry.predecessor = v;\n      pq.decrease(w, distance);\n    }\n  };\n\n  g.nodes().forEach(function(v) {\n    var distance = v === source ? 0 : Number.POSITIVE_INFINITY;\n    results[v] = { distance: distance };\n    pq.add(v, distance);\n  });\n\n  while (pq.size() > 0) {\n    v = pq.removeMin();\n    vEntry = results[v];\n    if (vEntry.distance === Number.POSITIVE_INFINITY) {\n      break;\n    }\n\n    edgeFn(v).forEach(updateNeighbors);\n  }\n\n  return results;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/~/graphlib/lib/alg/dijkstra.js\n ** module id = 116\n ** module chunks = 0\n **/","var _ = require(\"../lodash\");\n\nmodule.exports = PriorityQueue;\n\n/**\n * A min-priority queue data structure. This algorithm is derived from Cormen,\n * et al., \"Introduction to Algorithms\". The basic idea of a min-priority\n * queue is that you can efficiently (in O(1) time) get the smallest key in\n * the queue. Adding and removing elements takes O(log n) time. A key can\n * have its priority decreased in O(log n) time.\n */\nfunction PriorityQueue() {\n  this._arr = [];\n  this._keyIndices = {};\n}\n\n/**\n * Returns the number of elements in the queue. Takes `O(1)` time.\n */\nPriorityQueue.prototype.size = function() {\n  return this._arr.length;\n};\n\n/**\n * Returns the keys that are in the queue. Takes `O(n)` time.\n */\nPriorityQueue.prototype.keys = function() {\n  return this._arr.map(function(x) { return x.key; });\n};\n\n/**\n * Returns `true` if **key** is in the queue and `false` if not.\n */\nPriorityQueue.prototype.has = function(key) {\n  return _.has(this._keyIndices, key);\n};\n\n/**\n * Returns the priority for **key**. If **key** is not present in the queue\n * then this function returns `undefined`. Takes `O(1)` time.\n *\n * @param {Object} key\n */\nPriorityQueue.prototype.priority = function(key) {\n  var index = this._keyIndices[key];\n  if (index !== undefined) {\n    return this._arr[index].priority;\n  }\n};\n\n/**\n * Returns the key for the minimum element in this queue. If the queue is\n * empty this function throws an Error. Takes `O(1)` time.\n */\nPriorityQueue.prototype.min = function() {\n  if (this.size() === 0) {\n    throw new Error(\"Queue underflow\");\n  }\n  return this._arr[0].key;\n};\n\n/**\n * Inserts a new key into the priority queue. If the key already exists in\n * the queue this function returns `false`; otherwise it will return `true`.\n * Takes `O(n)` time.\n *\n * @param {Object} key the key to add\n * @param {Number} priority the initial priority for the key\n */\nPriorityQueue.prototype.add = function(key, priority) {\n  var keyIndices = this._keyIndices;\n  key = String(key);\n  if (!_.has(keyIndices, key)) {\n    var arr = this._arr;\n    var index = arr.length;\n    keyIndices[key] = index;\n    arr.push({key: key, priority: priority});\n    this._decrease(index);\n    return true;\n  }\n  return false;\n};\n\n/**\n * Removes and returns the smallest key in the queue. Takes `O(log n)` time.\n */\nPriorityQueue.prototype.removeMin = function() {\n  this._swap(0, this._arr.length - 1);\n  var min = this._arr.pop();\n  delete this._keyIndices[min.key];\n  this._heapify(0);\n  return min.key;\n};\n\n/**\n * Decreases the priority for **key** to **priority**. If the new priority is\n * greater than the previous priority, this function will throw an Error.\n *\n * @param {Object} key the key for which to raise priority\n * @param {Number} priority the new priority for the key\n */\nPriorityQueue.prototype.decrease = function(key, priority) {\n  var index = this._keyIndices[key];\n  if (priority > this._arr[index].priority) {\n    throw new Error(\"New priority is greater than current priority. \" +\n        \"Key: \" + key + \" Old: \" + this._arr[index].priority + \" New: \" + priority);\n  }\n  this._arr[index].priority = priority;\n  this._decrease(index);\n};\n\nPriorityQueue.prototype._heapify = function(i) {\n  var arr = this._arr;\n  var l = 2 * i,\n      r = l + 1,\n      largest = i;\n  if (l < arr.length) {\n    largest = arr[l].priority < arr[largest].priority ? l : largest;\n    if (r < arr.length) {\n      largest = arr[r].priority < arr[largest].priority ? r : largest;\n    }\n    if (largest !== i) {\n      this._swap(i, largest);\n      this._heapify(largest);\n    }\n  }\n};\n\nPriorityQueue.prototype._decrease = function(index) {\n  var arr = this._arr;\n  var priority = arr[index].priority;\n  var parent;\n  while (index !== 0) {\n    parent = index >> 1;\n    if (arr[parent].priority < priority) {\n      break;\n    }\n    this._swap(index, parent);\n    index = parent;\n  }\n};\n\nPriorityQueue.prototype._swap = function(i, j) {\n  var arr = this._arr;\n  var keyIndices = this._keyIndices;\n  var origArrI = arr[i];\n  var origArrJ = arr[j];\n  arr[i] = origArrJ;\n  arr[j] = origArrI;\n  keyIndices[origArrJ.key] = i;\n  keyIndices[origArrI.key] = j;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/~/graphlib/lib/data/priority-queue.js\n ** module id = 117\n ** module chunks = 0\n **/","var dijkstra = require(\"./dijkstra\"),\n    _ = require(\"../lodash\");\n\nmodule.exports = dijkstraAll;\n\nfunction dijkstraAll(g, weightFunc, edgeFunc) {\n  return _.transform(g.nodes(), function(acc, v) {\n    acc[v] = dijkstra(g, v, weightFunc, edgeFunc);\n  }, {});\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/~/graphlib/lib/alg/dijkstra-all.js\n ** module id = 118\n ** module chunks = 0\n **/","var _ = require(\"../lodash\"),\n    tarjan = require(\"./tarjan\");\n\nmodule.exports = findCycles;\n\nfunction findCycles(g) {\n  return _.filter(tarjan(g), function(cmpt) {\n    return cmpt.length > 1 || (cmpt.length === 1 && g.hasEdge(cmpt[0], cmpt[0]));\n  });\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/~/graphlib/lib/alg/find-cycles.js\n ** module id = 119\n ** module chunks = 0\n **/","var _ = require(\"../lodash\");\n\nmodule.exports = tarjan;\n\nfunction tarjan(g) {\n  var index = 0,\n      stack = [],\n      visited = {}, // node id -> { onStack, lowlink, index }\n      results = [];\n\n  function dfs(v) {\n    var entry = visited[v] = {\n      onStack: true,\n      lowlink: index,\n      index: index++\n    };\n    stack.push(v);\n\n    g.successors(v).forEach(function(w) {\n      if (!_.has(visited, w)) {\n        dfs(w);\n        entry.lowlink = Math.min(entry.lowlink, visited[w].lowlink);\n      } else if (visited[w].onStack) {\n        entry.lowlink = Math.min(entry.lowlink, visited[w].index);\n      }\n    });\n\n    if (entry.lowlink === entry.index) {\n      var cmpt = [],\n          w;\n      do {\n        w = stack.pop();\n        visited[w].onStack = false;\n        cmpt.push(w);\n      } while (v !== w);\n      results.push(cmpt);\n    }\n  }\n\n  g.nodes().forEach(function(v) {\n    if (!_.has(visited, v)) {\n      dfs(v);\n    }\n  });\n\n  return results;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/~/graphlib/lib/alg/tarjan.js\n ** module id = 120\n ** module chunks = 0\n **/","var _ = require(\"../lodash\");\n\nmodule.exports = floydWarshall;\n\nvar DEFAULT_WEIGHT_FUNC = _.constant(1);\n\nfunction floydWarshall(g, weightFn, edgeFn) {\n  return runFloydWarshall(g,\n                          weightFn || DEFAULT_WEIGHT_FUNC,\n                          edgeFn || function(v) { return g.outEdges(v); });\n}\n\nfunction runFloydWarshall(g, weightFn, edgeFn) {\n  var results = {},\n      nodes = g.nodes();\n\n  nodes.forEach(function(v) {\n    results[v] = {};\n    results[v][v] = { distance: 0 };\n    nodes.forEach(function(w) {\n      if (v !== w) {\n        results[v][w] = { distance: Number.POSITIVE_INFINITY };\n      }\n    });\n    edgeFn(v).forEach(function(edge) {\n      var w = edge.v === v ? edge.w : edge.v,\n          d = weightFn(edge);\n      results[v][w] = { distance: d, predecessor: v };\n    });\n  });\n\n  nodes.forEach(function(k) {\n    var rowK = results[k];\n    nodes.forEach(function(i) {\n      var rowI = results[i];\n      nodes.forEach(function(j) {\n        var ik = rowI[k];\n        var kj = rowK[j];\n        var ij = rowI[j];\n        var altDistance = ik.distance + kj.distance;\n        if (altDistance < ij.distance) {\n          ij.distance = altDistance;\n          ij.predecessor = kj.predecessor;\n        }\n      });\n    });\n  });\n\n  return results;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/~/graphlib/lib/alg/floyd-warshall.js\n ** module id = 121\n ** module chunks = 0\n **/","var topsort = require(\"./topsort\");\n\nmodule.exports = isAcyclic;\n\nfunction isAcyclic(g) {\n  try {\n    topsort(g);\n  } catch (e) {\n    if (e instanceof topsort.CycleException) {\n      return false;\n    }\n    throw e;\n  }\n  return true;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/~/graphlib/lib/alg/is-acyclic.js\n ** module id = 122\n ** module chunks = 0\n **/","var _ = require(\"../lodash\");\n\nmodule.exports = topsort;\ntopsort.CycleException = CycleException;\n\nfunction topsort(g) {\n  var visited = {},\n      stack = {},\n      results = [];\n\n  function visit(node) {\n    if (_.has(stack, node)) {\n      throw new CycleException();\n    }\n\n    if (!_.has(visited, node)) {\n      stack[node] = true;\n      visited[node] = true;\n      _.each(g.predecessors(node), visit);\n      delete stack[node];\n      results.push(node);\n    }\n  }\n\n  _.each(g.sinks(), visit);\n\n  if (_.size(visited) !== g.nodeCount()) {\n    throw new CycleException();\n  }\n\n  return results;\n}\n\nfunction CycleException() {}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/~/graphlib/lib/alg/topsort.js\n ** module id = 123\n ** module chunks = 0\n **/","var dfs = require(\"./dfs\");\n\nmodule.exports = postorder;\n\nfunction postorder(g, vs) {\n  return dfs(g, vs, \"post\");\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/~/graphlib/lib/alg/postorder.js\n ** module id = 124\n ** module chunks = 0\n **/","var _ = require(\"../lodash\");\n\nmodule.exports = dfs;\n\n/*\n * A helper that preforms a pre- or post-order traversal on the input graph\n * and returns the nodes in the order they were visited. This algorithm treats\n * the input as undirected.\n *\n * Order must be one of \"pre\" or \"post\".\n */\nfunction dfs(g, vs, order) {\n  if (!_.isArray(vs)) {\n    vs = [vs];\n  }\n\n  var acc = [],\n      visited = {};\n  _.each(vs, function(v) {\n    if (!g.hasNode(v)) {\n      throw new Error(\"Graph does not have node: \" + v);\n    }\n\n    doDfs(g, v, order === \"post\", visited, acc);\n  });\n  return acc;\n}\n\nfunction doDfs(g, v, postorder, visited, acc) {\n  if (!_.has(visited, v)) {\n    visited[v] = true;\n\n    if (!postorder) { acc.push(v); }\n    _.each(g.neighbors(v), function(w) {\n      doDfs(g, w, postorder, visited, acc);\n    });\n    if (postorder) { acc.push(v); }\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/~/graphlib/lib/alg/dfs.js\n ** module id = 125\n ** module chunks = 0\n **/","var dfs = require(\"./dfs\");\n\nmodule.exports = preorder;\n\nfunction preorder(g, vs) {\n  return dfs(g, vs, \"pre\");\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/~/graphlib/lib/alg/preorder.js\n ** module id = 126\n ** module chunks = 0\n **/","var _ = require(\"../lodash\"),\n    Graph = require(\"../graph\"),\n    PriorityQueue = require(\"../data/priority-queue\");\n\nmodule.exports = prim;\n\nfunction prim(g, weightFunc) {\n  var result = new Graph(),\n      parents = {},\n      pq = new PriorityQueue(),\n      v;\n\n  function updateNeighbors(edge) {\n    var w = edge.v === v ? edge.w : edge.v,\n        pri = pq.priority(w);\n    if (pri !== undefined) {\n      var edgeWeight = weightFunc(edge);\n      if (edgeWeight < pri) {\n        parents[w] = v;\n        pq.decrease(w, edgeWeight);\n      }\n    }\n  }\n\n  if (g.nodeCount() === 0) {\n    return result;\n  }\n\n  _.each(g.nodes(), function(v) {\n    pq.add(v, Number.POSITIVE_INFINITY);\n    result.setNode(v);\n  });\n\n  // Start from an arbitrary node\n  pq.decrease(g.nodes()[0], 0);\n\n  var init = false;\n  while (pq.size() > 0) {\n    v = pq.removeMin();\n    if (_.has(parents, v)) {\n      result.setEdge(v, parents[v]);\n    } else if (init) {\n      throw new Error(\"Input graph is not connected: \" + g);\n    } else {\n      init = true;\n    }\n\n    g.nodeEdges(v).forEach(updateNeighbors);\n  }\n\n  return result;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/~/graphlib/lib/alg/prim.js\n ** module id = 127\n ** module chunks = 0\n **/","\"use strict\";\n\nvar _ = require(\"./lodash\"),\n    acyclic = require(\"./acyclic\"),\n    normalize = require(\"./normalize\"),\n    rank = require(\"./rank\"),\n    normalizeRanks = require(\"./util\").normalizeRanks,\n    parentDummyChains = require(\"./parent-dummy-chains\"),\n    removeEmptyRanks = require(\"./util\").removeEmptyRanks,\n    nestingGraph = require(\"./nesting-graph\"),\n    addBorderSegments = require(\"./add-border-segments\"),\n    coordinateSystem = require(\"./coordinate-system\"),\n    order = require(\"./order\"),\n    position = require(\"./position\"),\n    util = require(\"./util\"),\n    Graph = require(\"./graphlib\").Graph;\n\nmodule.exports = layout;\n\nfunction layout(g, opts) {\n  var time = opts && opts.debugTiming ? util.time : util.notime;\n  time(\"layout\", function() {\n    var layoutGraph = time(\"  buildLayoutGraph\",\n                               function() { return buildLayoutGraph(g); });\n    time(\"  runLayout\",        function() { runLayout(layoutGraph, time); });\n    time(\"  updateInputGraph\", function() { updateInputGraph(g, layoutGraph); });\n  });\n}\n\nfunction runLayout(g, time) {\n  time(\"    makeSpaceForEdgeLabels\", function() { makeSpaceForEdgeLabels(g); });\n  time(\"    removeSelfEdges\",        function() { removeSelfEdges(g); });\n  time(\"    acyclic\",                function() { acyclic.run(g); });\n  time(\"    nestingGraph.run\",       function() { nestingGraph.run(g); });\n  time(\"    rank\",                   function() { rank(util.asNonCompoundGraph(g)); });\n  time(\"    injectEdgeLabelProxies\", function() { injectEdgeLabelProxies(g); });\n  time(\"    removeEmptyRanks\",       function() { removeEmptyRanks(g); });\n  time(\"    nestingGraph.cleanup\",   function() { nestingGraph.cleanup(g); });\n  time(\"    normalizeRanks\",         function() { normalizeRanks(g); });\n  time(\"    assignRankMinMax\",       function() { assignRankMinMax(g); });\n  time(\"    removeEdgeLabelProxies\", function() { removeEdgeLabelProxies(g); });\n  time(\"    normalize.run\",          function() { normalize.run(g); });\n  time(\"    parentDummyChains\",      function() { parentDummyChains(g); });\n  time(\"    addBorderSegments\",      function() { addBorderSegments(g); });\n  time(\"    order\",                  function() { order(g); });\n  time(\"    insertSelfEdges\",        function() { insertSelfEdges(g); });\n  time(\"    adjustCoordinateSystem\", function() { coordinateSystem.adjust(g); });\n  time(\"    position\",               function() { position(g); });\n  time(\"    positionSelfEdges\",      function() { positionSelfEdges(g); });\n  time(\"    removeBorderNodes\",      function() { removeBorderNodes(g); });\n  time(\"    normalize.undo\",         function() { normalize.undo(g); });\n  time(\"    fixupEdgeLabelCoords\",   function() { fixupEdgeLabelCoords(g); });\n  time(\"    undoCoordinateSystem\",   function() { coordinateSystem.undo(g); });\n  time(\"    translateGraph\",         function() { translateGraph(g); });\n  time(\"    assignNodeIntersects\",   function() { assignNodeIntersects(g); });\n  time(\"    reversePoints\",          function() { reversePointsForReversedEdges(g); });\n  time(\"    acyclic.undo\",           function() { acyclic.undo(g); });\n}\n\n/*\n * Copies final layout information from the layout graph back to the input\n * graph. This process only copies whitelisted attributes from the layout graph\n * to the input graph, so it serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction updateInputGraph(inputGraph, layoutGraph) {\n  _.each(inputGraph.nodes(), function(v) {\n    var inputLabel = inputGraph.node(v),\n        layoutLabel = layoutGraph.node(v);\n\n    if (inputLabel) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n\n      if (layoutGraph.children(v).length) {\n        inputLabel.width = layoutLabel.width;\n        inputLabel.height = layoutLabel.height;\n      }\n    }\n  });\n\n  _.each(inputGraph.edges(), function(e) {\n    var inputLabel = inputGraph.edge(e),\n        layoutLabel = layoutGraph.edge(e);\n\n    inputLabel.points = layoutLabel.points;\n    if (_.has(layoutLabel, \"x\")) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n    }\n  });\n\n  inputGraph.graph().width = layoutGraph.graph().width;\n  inputGraph.graph().height = layoutGraph.graph().height;\n}\n\nvar graphNumAttrs = [\"nodesep\", \"edgesep\", \"ranksep\", \"marginx\", \"marginy\"],\n    graphDefaults = { ranksep: 50, edgesep: 20, nodesep: 50, rankdir: \"tb\" },\n    graphAttrs = [\"acyclicer\", \"ranker\", \"rankdir\", \"align\"],\n    nodeNumAttrs = [\"width\", \"height\"],\n    nodeDefaults = { width: 0, height: 0 },\n    edgeNumAttrs = [\"minlen\", \"weight\", \"width\", \"height\", \"labeloffset\"],\n    edgeDefaults = {\n      minlen: 1, weight: 1, width: 0, height: 0,\n      labeloffset: 10, labelpos: \"r\"\n    },\n    edgeAttrs = [\"labelpos\"];\n\n/*\n * Constructs a new graph from the input graph, which can be used for layout.\n * This process copies only whitelisted attributes from the input graph to the\n * layout graph. Thus this function serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction buildLayoutGraph(inputGraph) {\n  var g = new Graph({ multigraph: true, compound: true }),\n      graph = canonicalize(inputGraph.graph());\n\n  g.setGraph(_.merge({},\n    graphDefaults,\n    selectNumberAttrs(graph, graphNumAttrs),\n    _.pick(graph, graphAttrs)));\n\n  _.each(inputGraph.nodes(), function(v) {\n    var node = canonicalize(inputGraph.node(v));\n    g.setNode(v, _.defaults(selectNumberAttrs(node, nodeNumAttrs), nodeDefaults));\n    g.setParent(v, inputGraph.parent(v));\n  });\n\n  _.each(inputGraph.edges(), function(e) {\n    var edge = canonicalize(inputGraph.edge(e));\n    g.setEdge(e, _.merge({},\n      edgeDefaults,\n      selectNumberAttrs(edge, edgeNumAttrs),\n      _.pick(edge, edgeAttrs)));\n  });\n\n  return g;\n}\n\n/*\n * This idea comes from the Gansner paper: to account for edge labels in our\n * layout we split each rank in half by doubling minlen and halving ranksep.\n * Then we can place labels at these mid-points between nodes.\n *\n * We also add some minimal padding to the width to push the label for the edge\n * away from the edge itself a bit.\n */\nfunction makeSpaceForEdgeLabels(g) {\n  var graph = g.graph();\n  graph.ranksep /= 2;\n  _.each(g.edges(), function(e) {\n    var edge = g.edge(e);\n    edge.minlen *= 2;\n    if (edge.labelpos.toLowerCase() !== \"c\") {\n      if (graph.rankdir === \"TB\" || graph.rankdir === \"BT\") {\n        edge.width += edge.labeloffset;\n      } else {\n        edge.height += edge.labeloffset;\n      }\n    }\n  });\n}\n\n/*\n * Creates temporary dummy nodes that capture the rank in which each edge's\n * label is going to, if it has one of non-zero width and height. We do this\n * so that we can safely remove empty ranks while preserving balance for the\n * label's position.\n */\nfunction injectEdgeLabelProxies(g) {\n  _.each(g.edges(), function(e) {\n    var edge = g.edge(e);\n    if (edge.width && edge.height) {\n      var v = g.node(e.v),\n          w = g.node(e.w),\n          label = { rank: (w.rank - v.rank) / 2 + v.rank, e: e };\n      util.addDummyNode(g, \"edge-proxy\", label, \"_ep\");\n    }\n  });\n}\n\nfunction assignRankMinMax(g) {\n  var maxRank = 0;\n  _.each(g.nodes(), function(v) {\n    var node = g.node(v);\n    if (node.borderTop) {\n      node.minRank = g.node(node.borderTop).rank;\n      node.maxRank = g.node(node.borderBottom).rank;\n      maxRank = _.max(maxRank, node.maxRank);\n    }\n  });\n  g.graph().maxRank = maxRank;\n}\n\nfunction removeEdgeLabelProxies(g) {\n  _.each(g.nodes(), function(v) {\n    var node = g.node(v);\n    if (node.dummy === \"edge-proxy\") {\n      g.edge(node.e).labelRank = node.rank;\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction translateGraph(g) {\n  var minX = Number.POSITIVE_INFINITY,\n      maxX = 0,\n      minY = Number.POSITIVE_INFINITY,\n      maxY = 0,\n      graphLabel = g.graph(),\n      marginX = graphLabel.marginx || 0,\n      marginY = graphLabel.marginy || 0;\n\n  function getExtremes(attrs) {\n    var x = attrs.x,\n        y = attrs.y,\n        w = attrs.width,\n        h = attrs.height;\n    minX = Math.min(minX, x - w / 2);\n    maxX = Math.max(maxX, x + w / 2);\n    minY = Math.min(minY, y - h / 2);\n    maxY = Math.max(maxY, y + h / 2);\n  }\n\n  _.each(g.nodes(), function(v) { getExtremes(g.node(v)); });\n  _.each(g.edges(), function(e) {\n    var edge = g.edge(e);\n    if (_.has(edge, \"x\")) {\n      getExtremes(edge);\n    }\n  });\n\n  minX -= marginX;\n  minY -= marginY;\n\n  _.each(g.nodes(), function(v) {\n    var node = g.node(v);\n    node.x -= minX;\n    node.y -= minY;\n  });\n\n  _.each(g.edges(), function(e) {\n    var edge = g.edge(e);\n    _.each(edge.points, function(p) {\n      p.x -= minX;\n      p.y -= minY;\n    });\n    if (_.has(edge, \"x\")) { edge.x -= minX; }\n    if (_.has(edge, \"y\")) { edge.y -= minY; }\n  });\n\n  graphLabel.width = maxX - minX + marginX;\n  graphLabel.height = maxY - minY + marginY;\n}\n\nfunction assignNodeIntersects(g) {\n  _.each(g.edges(), function(e) {\n    var edge = g.edge(e),\n        nodeV = g.node(e.v),\n        nodeW = g.node(e.w),\n        p1, p2;\n    if (!edge.points) {\n      edge.points = [];\n      p1 = nodeW;\n      p2 = nodeV;\n    } else {\n      p1 = edge.points[0];\n      p2 = edge.points[edge.points.length - 1];\n    }\n    edge.points.unshift(util.intersectRect(nodeV, p1));\n    edge.points.push(util.intersectRect(nodeW, p2));\n  });\n}\n\nfunction fixupEdgeLabelCoords(g) {\n  _.each(g.edges(), function(e) {\n    var edge = g.edge(e);\n    if (_.has(edge, \"x\")) {\n      if (edge.labelpos === \"l\" || edge.labelpos === \"r\") {\n        edge.width -= edge.labeloffset;\n      }\n      switch (edge.labelpos) {\n        case \"l\": edge.x -= edge.width / 2 + edge.labeloffset; break;\n        case \"r\": edge.x += edge.width / 2 + edge.labeloffset; break;\n      }\n    }\n  });\n}\n\nfunction reversePointsForReversedEdges(g) {\n  _.each(g.edges(), function(e) {\n    var edge = g.edge(e);\n    if (edge.reversed) {\n      edge.points.reverse();\n    }\n  });\n}\n\nfunction removeBorderNodes(g) {\n  _.each(g.nodes(), function(v) {\n    if (g.children(v).length) {\n      var node = g.node(v),\n          t = g.node(node.borderTop),\n          b = g.node(node.borderBottom),\n          l = g.node(_.last(node.borderLeft)),\n          r = g.node(_.last(node.borderRight));\n\n      node.width = Math.abs(r.x - l.x);\n      node.height = Math.abs(b.y - t.y);\n      node.x = l.x + node.width / 2;\n      node.y = t.y + node.height / 2;\n    }\n  });\n\n  _.each(g.nodes(), function(v) {\n    if (g.node(v).dummy === \"border\") {\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction removeSelfEdges(g) {\n  _.each(g.edges(), function(e) {\n    if (e.v === e.w) {\n      var node = g.node(e.v);\n      if (!node.selfEdges) {\n        node.selfEdges = [];\n      }\n      node.selfEdges.push({ e: e, label: g.edge(e) });\n      g.removeEdge(e);\n    }\n  });\n}\n\nfunction insertSelfEdges(g) {\n  var layers = util.buildLayerMatrix(g);\n  _.each(layers, function(layer) {\n    var orderShift = 0;\n    _.each(layer, function(v, i) {\n      var node = g.node(v);\n      node.order = i + orderShift;\n      _.each(node.selfEdges, function(selfEdge) {\n        util.addDummyNode(g, \"selfedge\", {\n          width: selfEdge.label.width,\n          height: selfEdge.label.height,\n          rank: node.rank,\n          order: i + (++orderShift),\n          e: selfEdge.e,\n          label: selfEdge.label\n        }, \"_se\");\n      });\n      delete node.selfEdges;\n    });\n  });\n}\n\nfunction positionSelfEdges(g) {\n  _.each(g.nodes(), function(v) {\n    var node = g.node(v);\n    if (node.dummy === \"selfedge\") {\n      var selfNode = g.node(node.e.v),\n          x = selfNode.x + selfNode.width / 2,\n          y = selfNode.y,\n          dx = node.x - x,\n          dy = selfNode.height / 2;\n      g.setEdge(node.e, node.label);\n      g.removeNode(v);\n      node.label.points = [\n        { x: x + 2 * dx / 3, y: y - dy },\n        { x: x + 5 * dx / 6, y: y - dy },\n        { x: x +     dx    , y: y },\n        { x: x + 5 * dx / 6, y: y + dy },\n        { x: x + 2 * dx / 3, y: y + dy },\n      ];\n      node.label.x = node.x;\n      node.label.y = node.y;\n    }\n  });\n}\n\nfunction selectNumberAttrs(obj, attrs) {\n  return _.mapValues(_.pick(obj, attrs), Number);\n}\n\nfunction canonicalize(attrs) {\n  var newAttrs = {};\n  _.each(attrs, function(v, k) {\n    newAttrs[k.toLowerCase()] = v;\n  });\n  return newAttrs;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/lib/layout.js\n ** module id = 128\n ** module chunks = 0\n **/","/* global window */\n\nvar lodash;\n\nif (typeof require === \"function\") {\n  try {\n    lodash = require(\"lodash\");\n  } catch (e) {}\n}\n\nif (!lodash) {\n  lodash = window._;\n}\n\nmodule.exports = lodash;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/lib/lodash.js\n ** module id = 129\n ** module chunks = 0\n **/","\"use strict\";\n\nvar _ = require(\"./lodash\"),\n    greedyFAS = require(\"./greedy-fas\");\n\nmodule.exports = {\n  run: run,\n  undo: undo\n};\n\nfunction run(g) {\n  var fas = (g.graph().acyclicer === \"greedy\"\n                ? greedyFAS(g, weightFn(g))\n                : dfsFAS(g));\n  _.each(fas, function(e) {\n    var label = g.edge(e);\n    g.removeEdge(e);\n    label.forwardName = e.name;\n    label.reversed = true;\n    g.setEdge(e.w, e.v, label, _.uniqueId(\"rev\"));\n  });\n\n  function weightFn(g) {\n    return function(e) {\n      return g.edge(e).weight;\n    };\n  }\n}\n\nfunction dfsFAS(g) {\n  var fas = [],\n      stack = {},\n      visited = {};\n\n  function dfs(v) {\n    if (_.has(visited, v)) {\n      return;\n    }\n    visited[v] = true;\n    stack[v] = true;\n    _.each(g.outEdges(v), function(e) {\n      if (_.has(stack, e.w)) {\n        fas.push(e);\n      } else {\n        dfs(e.w);\n      }\n    });\n    delete stack[v];\n  }\n\n  _.each(g.nodes(), dfs);\n  return fas;\n}\n\nfunction undo(g) {\n  _.each(g.edges(), function(e) {\n    var label = g.edge(e);\n    if (label.reversed) {\n      g.removeEdge(e);\n\n      var forwardName = label.forwardName;\n      delete label.reversed;\n      delete label.forwardName;\n      g.setEdge(e.w, e.v, label, forwardName);\n    }\n  });\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/lib/acyclic.js\n ** module id = 130\n ** module chunks = 0\n **/","var _ = require(\"./lodash\"),\n    Graph = require(\"./graphlib\").Graph,\n    List = require(\"./data/list\");\n\n/*\n * A greedy heuristic for finding a feedback arc set for a graph. A feedback\n * arc set is a set of edges that can be removed to make a graph acyclic.\n * The algorithm comes from: P. Eades, X. Lin, and W. F. Smyth, \"A fast and\n * effective heuristic for the feedback arc set problem.\" This implementation\n * adjusts that from the paper to allow for weighted edges.\n */\nmodule.exports = greedyFAS;\n\nvar DEFAULT_WEIGHT_FN = _.constant(1);\n\nfunction greedyFAS(g, weightFn) {\n  if (g.nodeCount() <= 1) {\n    return [];\n  }\n  var state = buildState(g, weightFn || DEFAULT_WEIGHT_FN);\n  var results = doGreedyFAS(state.graph, state.buckets, state.zeroIdx);\n\n  // Expand multi-edges\n  return _.flatten(_.map(results, function(e) {\n    return g.outEdges(e.v, e.w);\n  }), true);\n}\n\nfunction doGreedyFAS(g, buckets, zeroIdx) {\n  var results = [],\n      sources = buckets[buckets.length - 1],\n      sinks = buckets[0];\n\n  var entry;\n  while (g.nodeCount()) {\n    while ((entry = sinks.dequeue()))   { removeNode(g, buckets, zeroIdx, entry); }\n    while ((entry = sources.dequeue())) { removeNode(g, buckets, zeroIdx, entry); }\n    if (g.nodeCount()) {\n      for (var i = buckets.length - 2; i > 0; --i) {\n        entry = buckets[i].dequeue();\n        if (entry) {\n          results = results.concat(removeNode(g, buckets, zeroIdx, entry, true));\n          break;\n        }\n      }\n    }\n  }\n\n  return results;\n}\n\nfunction removeNode(g, buckets, zeroIdx, entry, collectPredecessors) {\n  var results = collectPredecessors ? [] : undefined;\n\n  _.each(g.inEdges(entry.v), function(edge) {\n    var weight = g.edge(edge),\n        uEntry = g.node(edge.v);\n\n    if (collectPredecessors) {\n      results.push({ v: edge.v, w: edge.w });\n    }\n\n    uEntry.out -= weight;\n    assignBucket(buckets, zeroIdx, uEntry);\n  });\n\n  _.each(g.outEdges(entry.v), function(edge) {\n    var weight = g.edge(edge),\n        w = edge.w,\n        wEntry = g.node(w);\n    wEntry[\"in\"] -= weight;\n    assignBucket(buckets, zeroIdx, wEntry);\n  });\n\n  g.removeNode(entry.v);\n\n  return results;\n}\n\nfunction buildState(g, weightFn) {\n  var fasGraph = new Graph(),\n      maxIn = 0,\n      maxOut = 0;\n\n  _.each(g.nodes(), function(v) {\n    fasGraph.setNode(v, { v: v, \"in\": 0, out: 0 });\n  });\n\n  // Aggregate weights on nodes, but also sum the weights across multi-edges\n  // into a single edge for the fasGraph.\n  _.each(g.edges(), function(e) {\n    var prevWeight = fasGraph.edge(e.v, e.w) || 0,\n        weight = weightFn(e),\n        edgeWeight = prevWeight + weight;\n    fasGraph.setEdge(e.v, e.w, edgeWeight);\n    maxOut = Math.max(maxOut, fasGraph.node(e.v).out += weight);\n    maxIn  = Math.max(maxIn,  fasGraph.node(e.w)[\"in\"]  += weight);\n  });\n\n  var buckets = _.range(maxOut + maxIn + 3).map(function() { return new List(); });\n  var zeroIdx = maxIn + 1;\n\n  _.each(fasGraph.nodes(), function(v) {\n    assignBucket(buckets, zeroIdx, fasGraph.node(v));\n  });\n\n  return { graph: fasGraph, buckets: buckets, zeroIdx: zeroIdx };\n}\n\nfunction assignBucket(buckets, zeroIdx, entry) {\n  if (!entry.out) {\n    buckets[0].enqueue(entry);\n  } else if (!entry[\"in\"]) {\n    buckets[buckets.length - 1].enqueue(entry);\n  } else {\n    buckets[entry.out - entry[\"in\"] + zeroIdx].enqueue(entry);\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/lib/greedy-fas.js\n ** module id = 131\n ** module chunks = 0\n **/","/*\n * Simple doubly linked list implementation derived from Cormen, et al.,\n * \"Introduction to Algorithms\".\n */\n\nmodule.exports = List;\n\nfunction List() {\n  var sentinel = {};\n  sentinel._next = sentinel._prev = sentinel;\n  this._sentinel = sentinel;\n}\n\nList.prototype.dequeue = function() {\n  var sentinel = this._sentinel,\n      entry = sentinel._prev;\n  if (entry !== sentinel) {\n    unlink(entry);\n    return entry;\n  }\n};\n\nList.prototype.enqueue = function(entry) {\n  var sentinel = this._sentinel;\n  if (entry._prev && entry._next) {\n    unlink(entry);\n  }\n  entry._next = sentinel._next;\n  sentinel._next._prev = entry;\n  sentinel._next = entry;\n  entry._prev = sentinel;\n};\n\nList.prototype.toString = function() {\n  var strs = [],\n      sentinel = this._sentinel,\n      curr = sentinel._prev;\n  while (curr !== sentinel) {\n    strs.push(JSON.stringify(curr, filterOutLinks));\n    curr = curr._prev;\n  }\n  return \"[\" + strs.join(\", \") + \"]\";\n};\n\nfunction unlink(entry) {\n  entry._prev._next = entry._next;\n  entry._next._prev = entry._prev;\n  delete entry._next;\n  delete entry._prev;\n}\n\nfunction filterOutLinks(k, v) {\n  if (k !== \"_next\" && k !== \"_prev\") {\n    return v;\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/lib/data/list.js\n ** module id = 132\n ** module chunks = 0\n **/","\"use strict\";\n\nvar _ = require(\"./lodash\"),\n    util = require(\"./util\");\n\nmodule.exports = {\n  run: run,\n  undo: undo\n};\n\n/*\n * Breaks any long edges in the graph into short segments that span 1 layer\n * each. This operation is undoable with the denormalize function.\n *\n * Pre-conditions:\n *\n *    1. The input graph is a DAG.\n *    2. Each node in the graph has a \"rank\" property.\n *\n * Post-condition:\n *\n *    1. All edges in the graph have a length of 1.\n *    2. Dummy nodes are added where edges have been split into segments.\n *    3. The graph is augmented with a \"dummyChains\" attribute which contains\n *       the first dummy in each chain of dummy nodes produced.\n */\nfunction run(g) {\n  g.graph().dummyChains = [];\n  _.each(g.edges(), function(edge) { normalizeEdge(g, edge); });\n}\n\nfunction normalizeEdge(g, e) {\n  var v = e.v,\n      vRank = g.node(v).rank,\n      w = e.w,\n      wRank = g.node(w).rank,\n      name = e.name,\n      edgeLabel = g.edge(e),\n      labelRank = edgeLabel.labelRank;\n\n  if (wRank === vRank + 1) return;\n\n  g.removeEdge(e);\n\n  var dummy, attrs, i;\n  for (i = 0, ++vRank; vRank < wRank; ++i, ++vRank) {\n    edgeLabel.points = [];\n    attrs = {\n      width: 0, height: 0,\n      edgeLabel: edgeLabel, edgeObj: e,\n      rank: vRank\n    };\n    dummy = util.addDummyNode(g, \"edge\", attrs, \"_d\");\n    if (vRank === labelRank) {\n      attrs.width = edgeLabel.width;\n      attrs.height = edgeLabel.height;\n      attrs.dummy = \"edge-label\";\n      attrs.labelpos = edgeLabel.labelpos;\n    }\n    g.setEdge(v, dummy, { weight: edgeLabel.weight }, name);\n    if (i === 0) {\n      g.graph().dummyChains.push(dummy);\n    }\n    v = dummy;\n  }\n\n  g.setEdge(v, w, { weight: edgeLabel.weight }, name);\n}\n\nfunction undo(g) {\n  _.each(g.graph().dummyChains, function(v) {\n    var node = g.node(v),\n        origLabel = node.edgeLabel,\n        w;\n    g.setEdge(node.edgeObj, origLabel);\n    while (node.dummy) {\n      w = g.successors(v)[0];\n      g.removeNode(v);\n      origLabel.points.push({ x: node.x, y: node.y });\n      if (node.dummy === \"edge-label\") {\n        origLabel.x = node.x;\n        origLabel.y = node.y;\n        origLabel.width = node.width;\n        origLabel.height = node.height;\n      }\n      v = w;\n      node = g.node(v);\n    }\n  });\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/lib/normalize.js\n ** module id = 133\n ** module chunks = 0\n **/","\"use strict\";\n\nvar _ = require(\"./lodash\"),\n    Graph = require(\"./graphlib\").Graph;\n\nmodule.exports = {\n  addDummyNode: addDummyNode,\n  simplify: simplify,\n  asNonCompoundGraph: asNonCompoundGraph,\n  successorWeights: successorWeights,\n  predecessorWeights: predecessorWeights,\n  intersectRect: intersectRect,\n  buildLayerMatrix: buildLayerMatrix,\n  normalizeRanks: normalizeRanks,\n  removeEmptyRanks: removeEmptyRanks,\n  addBorderNode: addBorderNode,\n  maxRank: maxRank,\n  partition: partition,\n  time: time,\n  notime: notime\n};\n\n/*\n * Adds a dummy node to the graph and return v.\n */\nfunction addDummyNode(g, type, attrs, name) {\n  var v;\n  do {\n    v = _.uniqueId(name);\n  } while (g.hasNode(v));\n\n  attrs.dummy = type;\n  g.setNode(v, attrs);\n  return v;\n}\n\n/*\n * Returns a new graph with only simple edges. Handles aggregation of data\n * associated with multi-edges.\n */\nfunction simplify(g) {\n  var simplified = new Graph().setGraph(g.graph());\n  _.each(g.nodes(), function(v) { simplified.setNode(v, g.node(v)); });\n  _.each(g.edges(), function(e) {\n    var simpleLabel = simplified.edge(e.v, e.w) || { weight: 0, minlen: 1 },\n        label = g.edge(e);\n    simplified.setEdge(e.v, e.w, {\n      weight: simpleLabel.weight + label.weight,\n      minlen: Math.max(simpleLabel.minlen, label.minlen)\n    });\n  });\n  return simplified;\n}\n\nfunction asNonCompoundGraph(g) {\n  var simplified = new Graph({ multigraph: g.isMultigraph() }).setGraph(g.graph());\n  _.each(g.nodes(), function(v) {\n    if (!g.children(v).length) {\n      simplified.setNode(v, g.node(v));\n    }\n  });\n  _.each(g.edges(), function(e) {\n    simplified.setEdge(e, g.edge(e));\n  });\n  return simplified;\n}\n\nfunction successorWeights(g) {\n  var weightMap = _.map(g.nodes(), function(v) {\n    var sucs = {};\n    _.each(g.outEdges(v), function(e) {\n      sucs[e.w] = (sucs[e.w] || 0) + g.edge(e).weight;\n    });\n    return sucs;\n  });\n  return _.zipObject(g.nodes(), weightMap);\n}\n\nfunction predecessorWeights(g) {\n  var weightMap = _.map(g.nodes(), function(v) {\n    var preds = {};\n    _.each(g.inEdges(v), function(e) {\n      preds[e.v] = (preds[e.v] || 0) + g.edge(e).weight;\n    });\n    return preds;\n  });\n  return _.zipObject(g.nodes(), weightMap);\n}\n\n/*\n * Finds where a line starting at point ({x, y}) would intersect a rectangle\n * ({x, y, width, height}) if it were pointing at the rectangle's center.\n */\nfunction intersectRect(rect, point) {\n  var x = rect.x;\n  var y = rect.y;\n\n  // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = rect.width / 2;\n  var h = rect.height / 2;\n\n  if (!dx && !dy) {\n    throw new Error(\"Not possible to find intersection inside of the rectangle\");\n  }\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = h * dx / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = w * dy / dx;\n  }\n\n  return { x: x + sx, y: y + sy };\n}\n\n/*\n * Given a DAG with each node assigned \"rank\" and \"order\" properties, this\n * function will produce a matrix with the ids of each node.\n */\nfunction buildLayerMatrix(g) {\n  var layering = _.map(_.range(maxRank(g) + 1), function() { return []; });\n  _.each(g.nodes(), function(v) {\n    var node = g.node(v),\n        rank = node.rank;\n    if (!_.isUndefined(rank)) {\n      layering[rank][node.order] = v;\n    }\n  });\n  return layering;\n}\n\n/*\n * Adjusts the ranks for all nodes in the graph such that all nodes v have\n * rank(v) >= 0 and at least one node w has rank(w) = 0.\n */\nfunction normalizeRanks(g) {\n  var min = _.min(_.map(g.nodes(), function(v) { return g.node(v).rank; }));\n  _.each(g.nodes(), function(v) {\n    var node = g.node(v);\n    if (_.has(node, \"rank\")) {\n      node.rank -= min;\n    }\n  });\n}\n\nfunction removeEmptyRanks(g) {\n  // Ranks may not start at 0, so we need to offset them\n  var offset = _.min(_.map(g.nodes(), function(v) { return g.node(v).rank; }));\n\n  var layers = [];\n  _.each(g.nodes(), function(v) {\n    var rank = g.node(v).rank - offset;\n    if (!layers[rank]) {\n      layers[rank] = [];\n    }\n    layers[rank].push(v);\n  });\n\n  var delta = 0,\n      nodeRankFactor = g.graph().nodeRankFactor;\n  _.each(layers, function(vs, i) {\n    if (_.isUndefined(vs) && i % nodeRankFactor !== 0) {\n      --delta;\n    } else if (delta) {\n      _.each(vs, function(v) { g.node(v).rank += delta; });\n    }\n  });\n}\n\nfunction addBorderNode(g, prefix, rank, order) {\n  var node = {\n    width: 0,\n    height: 0\n  };\n  if (arguments.length >= 4) {\n    node.rank = rank;\n    node.order = order;\n  }\n  return addDummyNode(g, \"border\", node, prefix);\n}\n\nfunction maxRank(g) {\n  return _.max(_.map(g.nodes(), function(v) {\n    var rank = g.node(v).rank;\n    if (!_.isUndefined(rank)) {\n      return rank;\n    }\n  }));\n}\n\n/*\n * Partition a collection into two groups: `lhs` and `rhs`. If the supplied\n * function returns true for an entry it goes into `lhs`. Otherwise it goes\n * into `rhs.\n */\nfunction partition(collection, fn) {\n  var result = { lhs: [], rhs: [] };\n  _.each(collection, function(value) {\n    if (fn(value)) {\n      result.lhs.push(value);\n    } else {\n      result.rhs.push(value);\n    }\n  });\n  return result;\n}\n\n/*\n * Returns a new function that wraps `fn` with a timer. The wrapper logs the\n * time it takes to execute the function.\n */\nfunction time(name, fn) {\n  var start = _.now();\n  try {\n    return fn();\n  } finally {\n    console.log(name + \" time: \" + (_.now() - start) + \"ms\");\n  }\n}\n\nfunction notime(name, fn) {\n  return fn();\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/lib/util.js\n ** module id = 134\n ** module chunks = 0\n **/","\"use strict\";\n\nvar rankUtil = require(\"./util\"),\n    longestPath = rankUtil.longestPath,\n    feasibleTree = require(\"./feasible-tree\"),\n    networkSimplex = require(\"./network-simplex\");\n\nmodule.exports = rank;\n\n/*\n * Assigns a rank to each node in the input graph that respects the \"minlen\"\n * constraint specified on edges between nodes.\n *\n * This basic structure is derived from Gansner, et al., \"A Technique for\n * Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a connected DAG\n *    2. Graph nodes must be objects\n *    3. Graph edges must have \"weight\" and \"minlen\" attributes\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have a \"rank\" attribute based on the results of the\n *       algorithm. Ranks can start at any index (including negative), we'll\n *       fix them up later.\n */\nfunction rank(g) {\n  switch(g.graph().ranker) {\n    case \"network-simplex\": networkSimplexRanker(g); break;\n    case \"tight-tree\": tightTreeRanker(g); break;\n    case \"longest-path\": longestPathRanker(g); break;\n    default: networkSimplexRanker(g);\n  }\n}\n\n// A fast and simple ranker, but results are far from optimal.\nvar longestPathRanker = longestPath;\n\nfunction tightTreeRanker(g) {\n  longestPath(g);\n  feasibleTree(g);\n}\n\nfunction networkSimplexRanker(g) {\n  networkSimplex(g);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/lib/rank/index.js\n ** module id = 135\n ** module chunks = 0\n **/","\"use strict\";\n\nvar _ = require(\"../lodash\");\n\nmodule.exports = {\n  longestPath: longestPath,\n  slack: slack\n};\n\n/*\n * Initializes ranks for the input graph using the longest path algorithm. This\n * algorithm scales well and is fast in practice, it yields rather poor\n * solutions. Nodes are pushed to the lowest layer possible, leaving the bottom\n * ranks wide and leaving edges longer than necessary. However, due to its\n * speed, this algorithm is good for getting an initial ranking that can be fed\n * into other algorithms.\n *\n * This algorithm does not normalize layers because it will be used by other\n * algorithms in most cases. If using this algorithm directly, be sure to\n * run normalize at the end.\n *\n * Pre-conditions:\n *\n *    1. Input graph is a DAG.\n *    2. Input graph node labels can be assigned properties.\n *\n * Post-conditions:\n *\n *    1. Each node will be assign an (unnormalized) \"rank\" property.\n */\nfunction longestPath(g) {\n  var visited = {};\n\n  function dfs(v) {\n    var label = g.node(v);\n    if (_.has(visited, v)) {\n      return label.rank;\n    }\n    visited[v] = true;\n\n    var rank = _.min(_.map(g.outEdges(v), function(e) {\n      return dfs(e.w) - g.edge(e).minlen;\n    }));\n\n    if (rank === Number.POSITIVE_INFINITY) {\n      rank = 0;\n    }\n\n    return (label.rank = rank);\n  }\n\n  _.each(g.sources(), dfs);\n}\n\n/*\n * Returns the amount of slack for the given edge. The slack is defined as the\n * difference between the length of the edge and its minimum length.\n */\nfunction slack(g, e) {\n  return g.node(e.w).rank - g.node(e.v).rank - g.edge(e).minlen;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/lib/rank/util.js\n ** module id = 136\n ** module chunks = 0\n **/","\"use strict\";\n\nvar _ = require(\"../lodash\"),\n    Graph = require(\"../graphlib\").Graph,\n    slack = require(\"./util\").slack;\n\nmodule.exports = feasibleTree;\n\n/*\n * Constructs a spanning tree with tight edges and adjusted the input node's\n * ranks to achieve this. A tight edge is one that is has a length that matches\n * its \"minlen\" attribute.\n *\n * The basic structure for this function is derived from Gansner, et al., \"A\n * Technique for Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a DAG.\n *    2. Graph must be connected.\n *    3. Graph must have at least one node.\n *    5. Graph nodes must have been previously assigned a \"rank\" property that\n *       respects the \"minlen\" property of incident edges.\n *    6. Graph edges must have a \"minlen\" property.\n *\n * Post-conditions:\n *\n *    - Graph nodes will have their rank adjusted to ensure that all edges are\n *      tight.\n *\n * Returns a tree (undirected graph) that is constructed using only \"tight\"\n * edges.\n */\nfunction feasibleTree(g) {\n  var t = new Graph({ directed: false });\n\n  // Choose arbitrary node from which to start our tree\n  var start = g.nodes()[0],\n      size = g.nodeCount();\n  t.setNode(start, {});\n\n  var edge, delta;\n  while (tightTree(t, g) < size) {\n    edge = findMinSlackEdge(t, g);\n    delta = t.hasNode(edge.v) ? slack(g, edge) : -slack(g, edge);\n    shiftRanks(t, g, delta);\n  }\n\n  return t;\n}\n\n/*\n * Finds a maximal tree of tight edges and returns the number of nodes in the\n * tree.\n */\nfunction tightTree(t, g) {\n  function dfs(v) {\n    _.each(g.nodeEdges(v), function(e) {\n      var edgeV = e.v,\n          w = (v === edgeV) ? e.w : edgeV;\n      if (!t.hasNode(w) && !slack(g, e)) {\n        t.setNode(w, {});\n        t.setEdge(v, w, {});\n        dfs(w);\n      }\n    });\n  }\n\n  _.each(t.nodes(), dfs);\n  return t.nodeCount();\n}\n\n/*\n * Finds the edge with the smallest slack that is incident on tree and returns\n * it.\n */\nfunction findMinSlackEdge(t, g) {\n  return _.min(g.edges(), function(e) {\n    if (t.hasNode(e.v) !== t.hasNode(e.w)) {\n      return slack(g, e);\n    }\n  });\n}\n\nfunction shiftRanks(t, g, delta) {\n  _.each(t.nodes(), function(v) {\n    g.node(v).rank += delta;\n  });\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/lib/rank/feasible-tree.js\n ** module id = 137\n ** module chunks = 0\n **/","\"use strict\";\n\nvar _ = require(\"../lodash\"),\n    feasibleTree = require(\"./feasible-tree\"),\n    slack = require(\"./util\").slack,\n    initRank = require(\"./util\").longestPath,\n    preorder = require(\"../graphlib\").alg.preorder,\n    postorder = require(\"../graphlib\").alg.postorder,\n    simplify = require(\"../util\").simplify;\n\nmodule.exports = networkSimplex;\n\n// Expose some internals for testing purposes\nnetworkSimplex.initLowLimValues = initLowLimValues;\nnetworkSimplex.initCutValues = initCutValues;\nnetworkSimplex.calcCutValue = calcCutValue;\nnetworkSimplex.leaveEdge = leaveEdge;\nnetworkSimplex.enterEdge = enterEdge;\nnetworkSimplex.exchangeEdges = exchangeEdges;\n\n/*\n * The network simplex algorithm assigns ranks to each node in the input graph\n * and iteratively improves the ranking to reduce the length of edges.\n *\n * Preconditions:\n *\n *    1. The input graph must be a DAG.\n *    2. All nodes in the graph must have an object value.\n *    3. All edges in the graph must have \"minlen\" and \"weight\" attributes.\n *\n * Postconditions:\n *\n *    1. All nodes in the graph will have an assigned \"rank\" attribute that has\n *       been optimized by the network simplex algorithm. Ranks start at 0.\n *\n *\n * A rough sketch of the algorithm is as follows:\n *\n *    1. Assign initial ranks to each node. We use the longest path algorithm,\n *       which assigns ranks to the lowest position possible. In general this\n *       leads to very wide bottom ranks and unnecessarily long edges.\n *    2. Construct a feasible tight tree. A tight tree is one such that all\n *       edges in the tree have no slack (difference between length of edge\n *       and minlen for the edge). This by itself greatly improves the assigned\n *       rankings by shorting edges.\n *    3. Iteratively find edges that have negative cut values. Generally a\n *       negative cut value indicates that the edge could be removed and a new\n *       tree edge could be added to produce a more compact graph.\n *\n * Much of the algorithms here are derived from Gansner, et al., \"A Technique\n * for Drawing Directed Graphs.\" The structure of the file roughly follows the\n * structure of the overall algorithm.\n */\nfunction networkSimplex(g) {\n  g = simplify(g);\n  initRank(g);\n  var t = feasibleTree(g);\n  initLowLimValues(t);\n  initCutValues(t, g);\n\n  var e, f;\n  while ((e = leaveEdge(t))) {\n    f = enterEdge(t, g, e);\n    exchangeEdges(t, g, e, f);\n  }\n}\n\n/*\n * Initializes cut values for all edges in the tree.\n */\nfunction initCutValues(t, g) {\n  var vs = postorder(t, t.nodes());\n  vs = vs.slice(0, vs.length - 1);\n  _.each(vs, function(v) {\n    assignCutValue(t, g, v);\n  });\n}\n\nfunction assignCutValue(t, g, child) {\n  var childLab = t.node(child),\n      parent = childLab.parent;\n  t.edge(child, parent).cutvalue = calcCutValue(t, g, child);\n}\n\n/*\n * Given the tight tree, its graph, and a child in the graph calculate and\n * return the cut value for the edge between the child and its parent.\n */\nfunction calcCutValue(t, g, child) {\n  var childLab = t.node(child),\n      parent = childLab.parent,\n      // True if the child is on the tail end of the edge in the directed graph\n      childIsTail = true,\n      // The graph's view of the tree edge we're inspecting\n      graphEdge = g.edge(child, parent),\n      // The accumulated cut value for the edge between this node and its parent\n      cutValue = 0;\n\n  if (!graphEdge) {\n    childIsTail = false;\n    graphEdge = g.edge(parent, child);\n  }\n\n  cutValue = graphEdge.weight;\n\n  _.each(g.nodeEdges(child), function(e) {\n    var isOutEdge = e.v === child,\n        other = isOutEdge ? e.w : e.v;\n\n    if (other !== parent) {\n      var pointsToHead = isOutEdge === childIsTail,\n          otherWeight = g.edge(e).weight;\n\n      cutValue += pointsToHead ? otherWeight : -otherWeight;\n      if (isTreeEdge(t, child, other)) {\n        var otherCutValue = t.edge(child, other).cutvalue;\n        cutValue += pointsToHead ? -otherCutValue : otherCutValue;\n      }\n    }\n  });\n\n  return cutValue;\n}\n\nfunction initLowLimValues(tree, root) {\n  if (arguments.length < 2) {\n    root = tree.nodes()[0];\n  }\n  dfsAssignLowLim(tree, {}, 1, root);\n}\n\nfunction dfsAssignLowLim(tree, visited, nextLim, v, parent) {\n  var low = nextLim,\n      label = tree.node(v);\n\n  visited[v] = true;\n  _.each(tree.neighbors(v), function(w) {\n    if (!_.has(visited, w)) {\n      nextLim = dfsAssignLowLim(tree, visited, nextLim, w, v);\n    }\n  });\n\n  label.low = low;\n  label.lim = nextLim++;\n  if (parent) {\n    label.parent = parent;\n  } else {\n    // TODO should be able to remove this when we incrementally update low lim\n    delete label.parent;\n  }\n\n  return nextLim;\n}\n\nfunction leaveEdge(tree) {\n  return _.find(tree.edges(), function(e) {\n    return tree.edge(e).cutvalue < 0;\n  });\n}\n\nfunction enterEdge(t, g, edge) {\n  var v = edge.v,\n      w = edge.w;\n\n  // For the rest of this function we assume that v is the tail and w is the\n  // head, so if we don't have this edge in the graph we should flip it to\n  // match the correct orientation.\n  if (!g.hasEdge(v, w)) {\n    v = edge.w;\n    w = edge.v;\n  }\n\n  var vLabel = t.node(v),\n      wLabel = t.node(w),\n      tailLabel = vLabel,\n      flip = false;\n\n  // If the root is in the tail of the edge then we need to flip the logic that\n  // checks for the head and tail nodes in the candidates function below.\n  if (vLabel.lim > wLabel.lim) {\n    tailLabel = wLabel;\n    flip = true;\n  }\n\n  var candidates = _.filter(g.edges(), function(edge) {\n    return flip === isDescendant(t, t.node(edge.v), tailLabel) &&\n           flip !== isDescendant(t, t.node(edge.w), tailLabel);\n  });\n\n  return _.min(candidates, function(edge) { return slack(g, edge); });\n}\n\nfunction exchangeEdges(t, g, e, f) {\n  var v = e.v,\n      w = e.w;\n  t.removeEdge(v, w);\n  t.setEdge(f.v, f.w, {});\n  initLowLimValues(t);\n  initCutValues(t, g);\n  updateRanks(t, g);\n}\n\nfunction updateRanks(t, g) {\n  var root = _.find(t.nodes(), function(v) { return !g.node(v).parent; }),\n      vs = preorder(t, root);\n  vs = vs.slice(1);\n  _.each(vs, function(v) {\n    var parent = t.node(v).parent,\n        edge = g.edge(v, parent),\n        flipped = false;\n\n    if (!edge) {\n      edge = g.edge(parent, v);\n      flipped = true;\n    }\n\n    g.node(v).rank = g.node(parent).rank + (flipped ? edge.minlen : -edge.minlen);\n  });\n}\n\n/*\n * Returns true if the edge is in the tree.\n */\nfunction isTreeEdge(tree, u, v) {\n  return tree.hasEdge(u, v);\n}\n\n/*\n * Returns true if the specified node is descendant of the root node per the\n * assigned low and lim attributes in the tree.\n */\nfunction isDescendant(tree, vLabel, rootLabel) {\n  return rootLabel.low <= vLabel.lim && vLabel.lim <= rootLabel.lim;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/lib/rank/network-simplex.js\n ** module id = 138\n ** module chunks = 0\n **/","var _ = require(\"./lodash\");\n\nmodule.exports = parentDummyChains;\n\nfunction parentDummyChains(g) {\n  var postorderNums = postorder(g);\n\n  _.each(g.graph().dummyChains, function(v) {\n    var node = g.node(v),\n        edgeObj = node.edgeObj,\n        pathData = findPath(g, postorderNums, edgeObj.v, edgeObj.w),\n        path = pathData.path,\n        lca = pathData.lca,\n        pathIdx = 0,\n        pathV = path[pathIdx],\n        ascending = true;\n\n    while (v !== edgeObj.w) {\n      node = g.node(v);\n\n      if (ascending) {\n        while ((pathV = path[pathIdx]) !== lca &&\n               g.node(pathV).maxRank < node.rank) {\n          pathIdx++;\n        }\n\n        if (pathV === lca) {\n          ascending = false;\n        }\n      }\n\n      if (!ascending) {\n        while (pathIdx < path.length - 1 &&\n               g.node(pathV = path[pathIdx + 1]).minRank <= node.rank) {\n          pathIdx++;\n        }\n        pathV = path[pathIdx];\n      }\n\n      g.setParent(v, pathV);\n      v = g.successors(v)[0];\n    }\n  });\n}\n\n// Find a path from v to w through the lowest common ancestor (LCA). Return the\n// full path and the LCA.\nfunction findPath(g, postorderNums, v, w) {\n  var vPath = [],\n      wPath = [],\n      low = Math.min(postorderNums[v].low, postorderNums[w].low),\n      lim = Math.max(postorderNums[v].lim, postorderNums[w].lim),\n      parent,\n      lca;\n\n  // Traverse up from v to find the LCA\n  parent = v;\n  do {\n    parent = g.parent(parent);\n    vPath.push(parent);\n  } while (parent &&\n           (postorderNums[parent].low > low || lim > postorderNums[parent].lim));\n  lca = parent;\n\n  // Traverse from w to LCA\n  parent = w;\n  while ((parent = g.parent(parent)) !== lca) {\n    wPath.push(parent);\n  }\n\n  return { path: vPath.concat(wPath.reverse()), lca: lca };\n}\n\nfunction postorder(g) {\n  var result = {},\n      lim = 0;\n\n  function dfs(v) {\n    var low = lim;\n    _.each(g.children(v), dfs);\n    result[v] = { low: low, lim: lim++ };\n  }\n  _.each(g.children(), dfs);\n\n  return result;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/lib/parent-dummy-chains.js\n ** module id = 139\n ** module chunks = 0\n **/","var _ = require(\"./lodash\"),\n    util = require(\"./util\");\n\nmodule.exports = {\n  run: run,\n  cleanup: cleanup\n};\n\n/*\n * A nesting graph creates dummy nodes for the tops and bottoms of subgraphs,\n * adds appropriate edges to ensure that all cluster nodes are placed between\n * these boundries, and ensures that the graph is connected.\n *\n * In addition we ensure, through the use of the minlen property, that nodes\n * and subgraph border nodes to not end up on the same rank.\n *\n * Preconditions:\n *\n *    1. Input graph is a DAG\n *    2. Nodes in the input graph has a minlen attribute\n *\n * Postconditions:\n *\n *    1. Input graph is connected.\n *    2. Dummy nodes are added for the tops and bottoms of subgraphs.\n *    3. The minlen attribute for nodes is adjusted to ensure nodes do not\n *       get placed on the same rank as subgraph border nodes.\n *\n * The nesting graph idea comes from Sander, \"Layout of Compound Directed\n * Graphs.\"\n */\nfunction run(g) {\n  var root = util.addDummyNode(g, \"root\", {}, \"_root\"),\n      depths = treeDepths(g),\n      height = _.max(depths) - 1,\n      nodeSep = 2 * height + 1;\n\n  g.graph().nestingRoot = root;\n\n  // Multiply minlen by nodeSep to align nodes on non-border ranks.\n  _.each(g.edges(), function(e) { g.edge(e).minlen *= nodeSep; });\n\n  // Calculate a weight that is sufficient to keep subgraphs vertically compact\n  var weight = sumWeights(g) + 1;\n\n  // Create border nodes and link them up\n  _.each(g.children(), function(child) {\n    dfs(g, root, nodeSep, weight, height, depths, child);\n  });\n\n  // Save the multiplier for node layers for later removal of empty border\n  // layers.\n  g.graph().nodeRankFactor = nodeSep;\n}\n\nfunction dfs(g, root, nodeSep, weight, height, depths, v) {\n  var children = g.children(v);\n  if (!children.length) {\n    if (v !== root) {\n      g.setEdge(root, v, { weight: 0, minlen: nodeSep });\n    }\n    return;\n  }\n\n  var top = util.addBorderNode(g, \"_bt\"),\n      bottom = util.addBorderNode(g, \"_bb\"),\n      label = g.node(v);\n\n  g.setParent(top, v);\n  label.borderTop = top;\n  g.setParent(bottom, v);\n  label.borderBottom = bottom;\n\n  _.each(children, function(child) {\n    dfs(g, root, nodeSep, weight, height, depths, child);\n\n    var childNode = g.node(child),\n        childTop = childNode.borderTop ? childNode.borderTop : child,\n        childBottom = childNode.borderBottom ? childNode.borderBottom : child,\n        thisWeight = childNode.borderTop ? weight : 2 * weight,\n        minlen = childTop !== childBottom ? 1 : height - depths[v] + 1;\n\n    g.setEdge(top, childTop, {\n      weight: thisWeight,\n      minlen: minlen,\n      nestingEdge: true\n    });\n\n    g.setEdge(childBottom, bottom, {\n      weight: thisWeight,\n      minlen: minlen,\n      nestingEdge: true\n    });\n  });\n\n  if (!g.parent(v)) {\n    g.setEdge(root, top, { weight: 0, minlen: height + depths[v] });\n  }\n}\n\nfunction treeDepths(g) {\n  var depths = {};\n  function dfs(v, depth) {\n    var children = g.children(v);\n    if (children && children.length) {\n      _.each(children, function(child) {\n        dfs(child, depth + 1);\n      });\n    }\n    depths[v] = depth;\n  }\n  _.each(g.children(), function(v) { dfs(v, 1); });\n  return depths;\n}\n\nfunction sumWeights(g) {\n  return _.reduce(g.edges(), function(acc, e) {\n    return acc + g.edge(e).weight;\n  }, 0);\n}\n\nfunction cleanup(g) {\n  var graphLabel = g.graph();\n  g.removeNode(graphLabel.nestingRoot);\n  delete graphLabel.nestingRoot;\n  _.each(g.edges(), function(e) {\n    var edge = g.edge(e);\n    if (edge.nestingEdge) {\n      g.removeEdge(e);\n    }\n  });\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/lib/nesting-graph.js\n ** module id = 140\n ** module chunks = 0\n **/","var _ = require(\"./lodash\"),\n    util = require(\"./util\");\n\nmodule.exports = addBorderSegments;\n\nfunction addBorderSegments(g) {\n  function dfs(v) {\n    var children = g.children(v),\n        node = g.node(v);\n    if (children.length) {\n      _.each(children, dfs);\n    }\n\n    if (_.has(node, \"minRank\")) {\n      node.borderLeft = [];\n      node.borderRight = [];\n      for (var rank = node.minRank, maxRank = node.maxRank + 1;\n           rank < maxRank;\n           ++rank) {\n        addBorderNode(g, \"borderLeft\", \"_bl\", v, node, rank);\n        addBorderNode(g, \"borderRight\", \"_br\", v, node, rank);\n      }\n    }\n  }\n\n  _.each(g.children(), dfs);\n}\n\nfunction addBorderNode(g, prop, prefix, sg, sgNode, rank) {\n  var label = { width: 0, height: 0, rank: rank, borderType: prop },\n      prev = sgNode[prop][rank - 1],\n      curr = util.addDummyNode(g, \"border\", label, prefix);\n  sgNode[prop][rank] = curr;\n  g.setParent(curr, sg);\n  if (prev) {\n    g.setEdge(prev, curr, { weight: 1 });\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/lib/add-border-segments.js\n ** module id = 141\n ** module chunks = 0\n **/","\"use strict\";\n\nvar _ = require(\"./lodash\");\n\nmodule.exports = {\n  adjust: adjust,\n  undo: undo\n};\n\nfunction adjust(g) {\n  var rankDir = g.graph().rankdir.toLowerCase();\n  if (rankDir === \"lr\" || rankDir === \"rl\") {\n    swapWidthHeight(g);\n  }\n}\n\nfunction undo(g) {\n  var rankDir = g.graph().rankdir.toLowerCase();\n  if (rankDir === \"bt\" || rankDir === \"rl\") {\n    reverseY(g);\n  }\n\n  if (rankDir === \"lr\" || rankDir === \"rl\") {\n    swapXY(g);\n    swapWidthHeight(g);\n  }\n}\n\nfunction swapWidthHeight(g) {\n  _.each(g.nodes(), function(v) { swapWidthHeightOne(g.node(v)); });\n  _.each(g.edges(), function(e) { swapWidthHeightOne(g.edge(e)); });\n}\n\nfunction swapWidthHeightOne(attrs) {\n  var w = attrs.width;\n  attrs.width = attrs.height;\n  attrs.height = w;\n}\n\nfunction reverseY(g) {\n  _.each(g.nodes(), function(v) { reverseYOne(g.node(v)); });\n\n  _.each(g.edges(), function(e) {\n    var edge = g.edge(e);\n    _.each(edge.points, reverseYOne);\n    if (_.has(edge, \"y\")) {\n      reverseYOne(edge);\n    }\n  });\n}\n\nfunction reverseYOne(attrs) {\n  attrs.y = -attrs.y;\n}\n\nfunction swapXY(g) {\n  _.each(g.nodes(), function(v) { swapXYOne(g.node(v)); });\n\n  _.each(g.edges(), function(e) {\n    var edge = g.edge(e);\n    _.each(edge.points, swapXYOne);\n    if (_.has(edge, \"x\")) {\n      swapXYOne(edge);\n    }\n  });\n}\n\nfunction swapXYOne(attrs) {\n  var x = attrs.x;\n  attrs.x = attrs.y;\n  attrs.y = x;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/lib/coordinate-system.js\n ** module id = 142\n ** module chunks = 0\n **/","\"use strict\";\n\nvar _ = require(\"../lodash\"),\n    initOrder = require(\"./init-order\"),\n    crossCount = require(\"./cross-count\"),\n    sortSubgraph = require(\"./sort-subgraph\"),\n    buildLayerGraph = require(\"./build-layer-graph\"),\n    addSubgraphConstraints = require(\"./add-subgraph-constraints\"),\n    Graph = require(\"../graphlib\").Graph,\n    util = require(\"../util\");\n\nmodule.exports = order;\n\n/*\n * Applies heuristics to minimize edge crossings in the graph and sets the best\n * order solution as an order attribute on each node.\n *\n * Pre-conditions:\n *\n *    1. Graph must be DAG\n *    2. Graph nodes must be objects with a \"rank\" attribute\n *    3. Graph edges must have the \"weight\" attribute\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have an \"order\" attribute based on the results of the\n *       algorithm.\n */\nfunction order(g) {\n  var maxRank = util.maxRank(g),\n      downLayerGraphs = buildLayerGraphs(g, _.range(1, maxRank + 1), \"inEdges\"),\n      upLayerGraphs = buildLayerGraphs(g, _.range(maxRank - 1, -1, -1), \"outEdges\");\n\n  var layering = initOrder(g);\n  assignOrder(g, layering);\n\n  var bestCC = Number.POSITIVE_INFINITY,\n      best;\n\n  for (var i = 0, lastBest = 0; lastBest < 4; ++i, ++lastBest) {\n    sweepLayerGraphs(i % 2 ? downLayerGraphs : upLayerGraphs, i % 4 >= 2);\n\n    layering = util.buildLayerMatrix(g);\n    var cc = crossCount(g, layering);\n    if (cc < bestCC) {\n      lastBest = 0;\n      best = _.cloneDeep(layering);\n      bestCC = cc;\n    }\n  }\n\n  assignOrder(g, best);\n}\n\nfunction buildLayerGraphs(g, ranks, relationship) {\n  return _.map(ranks, function(rank) {\n    return buildLayerGraph(g, rank, relationship);\n  });\n}\n\nfunction sweepLayerGraphs(layerGraphs, biasRight) {\n  var cg = new Graph();\n  _.each(layerGraphs, function(lg) {\n    var root = lg.graph().root;\n    var sorted = sortSubgraph(lg, root, cg, biasRight);\n    _.each(sorted.vs, function(v, i) {\n      lg.node(v).order = i;\n    });\n    addSubgraphConstraints(lg, cg, sorted.vs);\n  });\n}\n\nfunction assignOrder(g, layering) {\n  _.each(layering, function(layer) {\n    _.each(layer, function(v, i) {\n      g.node(v).order = i;\n    });\n  });\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/lib/order/index.js\n ** module id = 143\n ** module chunks = 0\n **/","\"use strict\";\n\nvar _ = require(\"../lodash\");\n\nmodule.exports = initOrder;\n\n/*\n * Assigns an initial order value for each node by performing a DFS search\n * starting from nodes in the first rank. Nodes are assigned an order in their\n * rank as they are first visited.\n *\n * This approach comes from Gansner, et al., \"A Technique for Drawing Directed\n * Graphs.\"\n *\n * Returns a layering matrix with an array per layer and each layer sorted by\n * the order of its nodes.\n */\nfunction initOrder(g) {\n  var visited = {},\n      simpleNodes = _.filter(g.nodes(), function(v) {\n        return !g.children(v).length;\n      }),\n      maxRank = _.max(_.map(simpleNodes, function(v) { return g.node(v).rank; })),\n      layers = _.map(_.range(maxRank + 1), function() { return []; });\n\n  function dfs(v) {\n    if (_.has(visited, v)) return;\n    visited[v] = true;\n    var node = g.node(v);\n    layers[node.rank].push(v);\n    _.each(g.successors(v), dfs);\n  }\n\n  var orderedVs = _.sortBy(simpleNodes, function(v) { return g.node(v).rank; });\n  _.each(orderedVs, dfs);\n\n  return layers;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/lib/order/init-order.js\n ** module id = 144\n ** module chunks = 0\n **/","\"use strict\";\n\nvar _ = require(\"../lodash\");\n\nmodule.exports = crossCount;\n\n/*\n * A function that takes a layering (an array of layers, each with an array of\n * ordererd nodes) and a graph and returns a weighted crossing count.\n *\n * Pre-conditions:\n *\n *    1. Input graph must be simple (not a multigraph), directed, and include\n *       only simple edges.\n *    2. Edges in the input graph must have assigned weights.\n *\n * Post-conditions:\n *\n *    1. The graph and layering matrix are left unchanged.\n *\n * This algorithm is derived from Barth, et al., \"Bilayer Cross Counting.\"\n */\nfunction crossCount(g, layering) {\n  var cc = 0;\n  for (var i = 1; i < layering.length; ++i) {\n    cc += twoLayerCrossCount(g, layering[i-1], layering[i]);\n  }\n  return cc;\n}\n\nfunction twoLayerCrossCount(g, northLayer, southLayer) {\n  // Sort all of the edges between the north and south layers by their position\n  // in the north layer and then the south. Map these edges to the position of\n  // their head in the south layer.\n  var southPos = _.zipObject(southLayer,\n                             _.map(southLayer, function (v, i) { return i; }));\n  var southEntries = _.flatten(_.map(northLayer, function(v) {\n    return _.chain(g.outEdges(v))\n            .map(function(e) {\n              return { pos: southPos[e.w], weight: g.edge(e).weight };\n            })\n            .sortBy(\"pos\")\n            .value();\n  }), true);\n\n  // Build the accumulator tree\n  var firstIndex = 1;\n  while (firstIndex < southLayer.length) firstIndex <<= 1;\n  var treeSize = 2 * firstIndex - 1;\n  firstIndex -= 1;\n  var tree = _.map(new Array(treeSize), function() { return 0; });\n\n  // Calculate the weighted crossings\n  var cc = 0;\n  _.each(southEntries.forEach(function(entry) {\n    var index = entry.pos + firstIndex;\n    tree[index] += entry.weight;\n    var weightSum = 0;\n    while (index > 0) {\n      if (index % 2) {\n        weightSum += tree[index + 1];\n      }\n      index = (index - 1) >> 1;\n      tree[index] += entry.weight;\n    }\n    cc += entry.weight * weightSum;\n  }));\n\n  return cc;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/lib/order/cross-count.js\n ** module id = 145\n ** module chunks = 0\n **/","var _ = require(\"../lodash\"),\n    barycenter = require(\"./barycenter\"),\n    resolveConflicts = require(\"./resolve-conflicts\"),\n    sort = require(\"./sort\");\n\nmodule.exports = sortSubgraph;\n\nfunction sortSubgraph(g, v, cg, biasRight) {\n  var movable = g.children(v),\n      node = g.node(v),\n      bl = node ? node.borderLeft : undefined,\n      br = node ? node.borderRight: undefined,\n      subgraphs = {};\n\n  if (bl) {\n    movable = _.filter(movable, function(w) {\n      return w !== bl && w !== br;\n    });\n  }\n\n  var barycenters = barycenter(g, movable);\n  _.each(barycenters, function(entry) {\n    if (g.children(entry.v).length) {\n      var subgraphResult = sortSubgraph(g, entry.v, cg, biasRight);\n      subgraphs[entry.v] = subgraphResult;\n      if (_.has(subgraphResult, \"barycenter\")) {\n        mergeBarycenters(entry, subgraphResult);\n      }\n    }\n  });\n\n  var entries = resolveConflicts(barycenters, cg);\n  expandSubgraphs(entries, subgraphs);\n\n  var result = sort(entries, biasRight);\n\n  if (bl) {\n    result.vs = _.flatten([bl, result.vs, br], true);\n    if (g.predecessors(bl).length) {\n      var blPred = g.node(g.predecessors(bl)[0]),\n          brPred = g.node(g.predecessors(br)[0]);\n      if (!_.has(result, \"barycenter\")) {\n        result.barycenter = 0;\n        result.weight = 0;\n      }\n      result.barycenter = (result.barycenter * result.weight +\n                           blPred.order + brPred.order) / (result.weight + 2);\n      result.weight += 2;\n    }\n  }\n\n  return result;\n}\n\nfunction expandSubgraphs(entries, subgraphs) {\n  _.each(entries, function(entry) {\n    entry.vs = _.flatten(entry.vs.map(function(v) {\n      if (subgraphs[v]) {\n        return subgraphs[v].vs;\n      }\n      return v;\n    }), true);\n  });\n}\n\nfunction mergeBarycenters(target, other) {\n  if (!_.isUndefined(target.barycenter)) {\n    target.barycenter = (target.barycenter * target.weight +\n                         other.barycenter * other.weight) /\n                        (target.weight + other.weight);\n    target.weight += other.weight;\n  } else {\n    target.barycenter = other.barycenter;\n    target.weight = other.weight;\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/lib/order/sort-subgraph.js\n ** module id = 146\n ** module chunks = 0\n **/","var _ = require(\"../lodash\");\n\nmodule.exports = barycenter;\n\nfunction barycenter(g, movable) {\n  return _.map(movable, function(v) {\n    var inV = g.inEdges(v);\n    if (!inV.length) {\n      return { v: v };\n    } else {\n      var result = _.reduce(inV, function(acc, e) {\n        var edge = g.edge(e),\n            nodeU = g.node(e.v);\n        return {\n          sum: acc.sum + (edge.weight * nodeU.order),\n          weight: acc.weight + edge.weight\n        };\n      }, { sum: 0, weight: 0 });\n\n      return {\n        v: v,\n        barycenter: result.sum / result.weight,\n        weight: result.weight\n      };\n    }\n  });\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/lib/order/barycenter.js\n ** module id = 147\n ** module chunks = 0\n **/","\"use strict\";\n\nvar _ = require(\"../lodash\");\n\nmodule.exports = resolveConflicts;\n\n/*\n * Given a list of entries of the form {v, barycenter, weight} and a\n * constraint graph this function will resolve any conflicts between the\n * constraint graph and the barycenters for the entries. If the barycenters for\n * an entry would violate a constraint in the constraint graph then we coalesce\n * the nodes in the conflict into a new node that respects the contraint and\n * aggregates barycenter and weight information.\n *\n * This implementation is based on the description in Forster, \"A Fast and\n * Simple Hueristic for Constrained Two-Level Crossing Reduction,\" thought it\n * differs in some specific details.\n *\n * Pre-conditions:\n *\n *    1. Each entry has the form {v, barycenter, weight}, or if the node has\n *       no barycenter, then {v}.\n *\n * Returns:\n *\n *    A new list of entries of the form {vs, i, barycenter, weight}. The list\n *    `vs` may either be a singleton or it may be an aggregation of nodes\n *    ordered such that they do not violate constraints from the constraint\n *    graph. The property `i` is the lowest original index of any of the\n *    elements in `vs`.\n */\nfunction resolveConflicts(entries, cg) {\n  var mappedEntries = {};\n  _.each(entries, function(entry, i) {\n    var tmp = mappedEntries[entry.v] = {\n      indegree: 0,\n      \"in\": [],\n      out: [],\n      vs: [entry.v],\n      i: i\n    };\n    if (!_.isUndefined(entry.barycenter)) {\n      tmp.barycenter = entry.barycenter;\n      tmp.weight = entry.weight;\n    }\n  });\n\n  _.each(cg.edges(), function(e) {\n    var entryV = mappedEntries[e.v],\n        entryW = mappedEntries[e.w];\n    if (!_.isUndefined(entryV) && !_.isUndefined(entryW)) {\n      entryW.indegree++;\n      entryV.out.push(mappedEntries[e.w]);\n    }\n  });\n\n  var sourceSet = _.filter(mappedEntries, function(entry) {\n    return !entry.indegree;\n  });\n\n  return doResolveConflicts(sourceSet);\n}\n\nfunction doResolveConflicts(sourceSet) {\n  var entries = [];\n\n  function handleIn(vEntry) {\n    return function(uEntry) {\n      if (uEntry.merged) {\n        return;\n      }\n      if (_.isUndefined(uEntry.barycenter) ||\n          _.isUndefined(vEntry.barycenter) ||\n          uEntry.barycenter >= vEntry.barycenter) {\n        mergeEntries(vEntry, uEntry);\n      }\n    };\n  }\n\n  function handleOut(vEntry) {\n    return function(wEntry) {\n      wEntry[\"in\"].push(vEntry);\n      if (--wEntry.indegree === 0) {\n        sourceSet.push(wEntry);\n      }\n    };\n  }\n\n  while (sourceSet.length) {\n    var entry = sourceSet.pop();\n    entries.push(entry);\n    _.each(entry[\"in\"].reverse(), handleIn(entry));\n    _.each(entry.out, handleOut(entry));\n  }\n\n  return _.chain(entries)\n          .filter(function(entry) { return !entry.merged; })\n          .map(function(entry) {\n            return _.pick(entry, [\"vs\", \"i\", \"barycenter\", \"weight\"]);\n          })\n          .value();\n}\n\nfunction mergeEntries(target, source) {\n  var sum = 0,\n      weight = 0;\n\n  if (target.weight) {\n    sum += target.barycenter * target.weight;\n    weight += target.weight;\n  }\n\n  if (source.weight) {\n    sum += source.barycenter * source.weight;\n    weight += source.weight;\n  }\n\n  target.vs = source.vs.concat(target.vs);\n  target.barycenter = sum / weight;\n  target.weight = weight;\n  target.i = Math.min(source.i, target.i);\n  source.merged = true;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/lib/order/resolve-conflicts.js\n ** module id = 148\n ** module chunks = 0\n **/","var _ = require(\"../lodash\"),\n    util = require(\"../util\");\n\nmodule.exports = sort;\n\nfunction sort(entries, biasRight) {\n  var parts = util.partition(entries, function(entry) {\n    return _.has(entry, \"barycenter\");\n  });\n  var sortable = parts.lhs,\n      unsortable = _.sortBy(parts.rhs, function(entry) { return -entry.i; }),\n      vs = [],\n      sum = 0,\n      weight = 0,\n      vsIndex = 0;\n\n  sortable.sort(compareWithBias(!!biasRight));\n\n  vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n\n  _.each(sortable, function (entry) {\n    vsIndex += entry.vs.length;\n    vs.push(entry.vs);\n    sum += entry.barycenter * entry.weight;\n    weight += entry.weight;\n    vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n  });\n\n  var result = { vs: _.flatten(vs, true) };\n  if (weight) {\n    result.barycenter = sum / weight;\n    result.weight = weight;\n  }\n  return result;\n}\n\nfunction consumeUnsortable(vs, unsortable, index) {\n  var last;\n  while (unsortable.length && (last = _.last(unsortable)).i <= index) {\n    unsortable.pop();\n    vs.push(last.vs);\n    index++;\n  }\n  return index;\n}\n\nfunction compareWithBias(bias) {\n  return function(entryV, entryW) {\n    if (entryV.barycenter < entryW.barycenter) {\n      return -1;\n    } else if (entryV.barycenter > entryW.barycenter) {\n      return 1;\n    }\n\n    return !bias ? entryV.i - entryW.i : entryW.i - entryV.i;\n  };\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/lib/order/sort.js\n ** module id = 149\n ** module chunks = 0\n **/","var _ = require(\"../lodash\"),\n    Graph = require(\"../graphlib\").Graph;\n\nmodule.exports = buildLayerGraph;\n\n/*\n * Constructs a graph that can be used to sort a layer of nodes. The graph will\n * contain all base and subgraph nodes from the request layer in their original\n * hierarchy and any edges that are incident on these nodes and are of the type\n * requested by the \"relationship\" parameter.\n *\n * Nodes from the requested rank that do not have parents are assigned a root\n * node in the output graph, which is set in the root graph attribute. This\n * makes it easy to walk the hierarchy of movable nodes during ordering.\n *\n * Pre-conditions:\n *\n *    1. Input graph is a DAG\n *    2. Base nodes in the input graph have a rank attribute\n *    3. Subgraph nodes in the input graph has minRank and maxRank attributes\n *    4. Edges have an assigned weight\n *\n * Post-conditions:\n *\n *    1. Output graph has all nodes in the movable rank with preserved\n *       hierarchy.\n *    2. Root nodes in the movable layer are made children of the node\n *       indicated by the root attribute of the graph.\n *    3. Non-movable nodes incident on movable nodes, selected by the\n *       relationship parameter, are included in the graph (without hierarchy).\n *    4. Edges incident on movable nodes, selected by the relationship\n *       parameter, are added to the output graph.\n *    5. The weights for copied edges are aggregated as need, since the output\n *       graph is not a multi-graph.\n */\nfunction buildLayerGraph(g, rank, relationship) {\n  var root = createRootNode(g),\n      result = new Graph({ compound: true }).setGraph({ root: root })\n                  .setDefaultNodeLabel(function(v) { return g.node(v); });\n\n  _.each(g.nodes(), function(v) {\n    var node = g.node(v),\n        parent = g.parent(v);\n\n    if (node.rank === rank || node.minRank <= rank && rank <= node.maxRank) {\n      result.setNode(v);\n      result.setParent(v, parent || root);\n\n      // This assumes we have only short edges!\n      _.each(g[relationship](v), function(e) {\n        var u = e.v === v ? e.w : e.v,\n            edge = result.edge(u, v),\n            weight = !_.isUndefined(edge) ? edge.weight : 0;\n        result.setEdge(u, v, { weight: g.edge(e).weight + weight });\n      });\n\n      if (_.has(node, \"minRank\")) {\n        result.setNode(v, {\n          borderLeft: node.borderLeft[rank],\n          borderRight: node.borderRight[rank]\n        });\n      }\n    }\n  });\n\n  return result;\n}\n\nfunction createRootNode(g) {\n  var v;\n  while (g.hasNode((v = _.uniqueId(\"_root\"))));\n  return v;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/lib/order/build-layer-graph.js\n ** module id = 150\n ** module chunks = 0\n **/","var _ = require(\"../lodash\");\n\nmodule.exports = addSubgraphConstraints;\n\nfunction addSubgraphConstraints(g, cg, vs) {\n  var prev = {},\n      rootPrev;\n\n  _.each(vs, function(v) {\n    var child = g.parent(v),\n        parent,\n        prevChild;\n    while (child) {\n      parent = g.parent(child);\n      if (parent) {\n        prevChild = prev[parent];\n        prev[parent] = child;\n      } else {\n        prevChild = rootPrev;\n        rootPrev = child;\n      }\n      if (prevChild && prevChild !== child) {\n        cg.setEdge(prevChild, child);\n        return;\n      }\n      child = parent;\n    }\n  });\n\n  /*\n  function dfs(v) {\n    var children = v ? g.children(v) : g.children();\n    if (children.length) {\n      var min = Number.POSITIVE_INFINITY,\n          subgraphs = [];\n      _.each(children, function(child) {\n        var childMin = dfs(child);\n        if (g.children(child).length) {\n          subgraphs.push({ v: child, order: childMin });\n        }\n        min = Math.min(min, childMin);\n      });\n      _.reduce(_.sortBy(subgraphs, \"order\"), function(prev, curr) {\n        cg.setEdge(prev.v, curr.v);\n        return curr;\n      });\n      return min;\n    }\n    return g.node(v).order;\n  }\n  dfs(undefined);\n  */\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/lib/order/add-subgraph-constraints.js\n ** module id = 151\n ** module chunks = 0\n **/","\"use strict\";\n\nvar _ = require(\"../lodash\"),\n    util = require(\"../util\"),\n    positionX = require(\"./bk\").positionX;\n\nmodule.exports = position;\n\nfunction position(g) {\n  g = util.asNonCompoundGraph(g);\n\n  positionY(g);\n  _.each(positionX(g), function(x, v) {\n    g.node(v).x = x;\n  });\n}\n\nfunction positionY(g) {\n  var layering = util.buildLayerMatrix(g),\n      rankSep = g.graph().ranksep,\n      prevY = 0;\n  _.each(layering, function(layer) {\n    var maxHeight = _.max(_.map(layer, function(v) { return g.node(v).height; }));\n    _.each(layer, function(v) {\n      g.node(v).y = prevY + maxHeight / 2;\n    });\n    prevY += maxHeight + rankSep;\n  });\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/lib/position/index.js\n ** module id = 152\n ** module chunks = 0\n **/","\"use strict\";\n\nvar _ = require(\"../lodash\"),\n    Graph = require(\"../graphlib\").Graph,\n    util = require(\"../util\");\n\n/*\n * This module provides coordinate assignment based on Brandes and Köpf, \"Fast\n * and Simple Horizontal Coordinate Assignment.\"\n */\n\nmodule.exports = {\n  positionX: positionX,\n  findType1Conflicts: findType1Conflicts,\n  findType2Conflicts: findType2Conflicts,\n  addConflict: addConflict,\n  hasConflict: hasConflict,\n  verticalAlignment: verticalAlignment,\n  horizontalCompaction: horizontalCompaction,\n  alignCoordinates: alignCoordinates,\n  findSmallestWidthAlignment: findSmallestWidthAlignment,\n  balance: balance\n};\n\n/*\n * Marks all edges in the graph with a type-1 conflict with the \"type1Conflict\"\n * property. A type-1 conflict is one where a non-inner segment crosses an\n * inner segment. An inner segment is an edge with both incident nodes marked\n * with the \"dummy\" property.\n *\n * This algorithm scans layer by layer, starting with the second, for type-1\n * conflicts between the current layer and the previous layer. For each layer\n * it scans the nodes from left to right until it reaches one that is incident\n * on an inner segment. It then scans predecessors to determine if they have\n * edges that cross that inner segment. At the end a final scan is done for all\n * nodes on the current rank to see if they cross the last visited inner\n * segment.\n *\n * This algorithm (safely) assumes that a dummy node will only be incident on a\n * single node in the layers being scanned.\n */\nfunction findType1Conflicts(g, layering) {\n  var conflicts = {};\n\n  function visitLayer(prevLayer, layer) {\n    var\n      // last visited node in the previous layer that is incident on an inner\n      // segment.\n      k0 = 0,\n      // Tracks the last node in this layer scanned for crossings with a type-1\n      // segment.\n      scanPos = 0,\n      prevLayerLength = prevLayer.length,\n      lastNode = _.last(layer);\n\n    _.each(layer, function(v, i) {\n      var w = findOtherInnerSegmentNode(g, v),\n          k1 = w ? g.node(w).order : prevLayerLength;\n\n      if (w || v === lastNode) {\n        _.each(layer.slice(scanPos, i +1), function(scanNode) {\n          _.each(g.predecessors(scanNode), function(u) {\n            var uLabel = g.node(u),\n                uPos = uLabel.order;\n            if ((uPos < k0 || k1 < uPos) &&\n                !(uLabel.dummy && g.node(scanNode).dummy)) {\n              addConflict(conflicts, u, scanNode);\n            }\n          });\n        });\n        scanPos = i + 1;\n        k0 = k1;\n      }\n    });\n\n    return layer;\n  }\n\n  _.reduce(layering, visitLayer);\n  return conflicts;\n}\n\nfunction findType2Conflicts(g, layering) {\n  var conflicts = {};\n\n  function scan(south, southPos, southEnd, prevNorthBorder, nextNorthBorder) {\n    var v;\n    _.each(_.range(southPos, southEnd), function(i) {\n      v = south[i];\n      if (g.node(v).dummy) {\n        _.each(g.predecessors(v), function(u) {\n          var uNode = g.node(u);\n          if (uNode.dummy &&\n              (uNode.order < prevNorthBorder || uNode.order > nextNorthBorder)) {\n            addConflict(conflicts, u, v);\n          }\n        });\n      }\n    });\n  }\n\n\n  function visitLayer(north, south) {\n    var prevNorthPos = -1,\n        nextNorthPos,\n        southPos = 0;\n\n    _.each(south, function(v, southLookahead) {\n      if (g.node(v).dummy === \"border\") {\n        var predecessors = g.predecessors(v);\n        if (predecessors.length) {\n          nextNorthPos = g.node(predecessors[0]).order;\n          scan(south, southPos, southLookahead, prevNorthPos, nextNorthPos);\n          southPos = southLookahead;\n          prevNorthPos = nextNorthPos;\n        }\n      }\n      scan(south, southPos, south.length, nextNorthPos, north.length);\n    });\n\n    return south;\n  }\n\n  _.reduce(layering, visitLayer);\n  return conflicts;\n}\n\nfunction findOtherInnerSegmentNode(g, v) {\n  if (g.node(v).dummy) {\n    return _.find(g.predecessors(v), function(u) {\n      return g.node(u).dummy;\n    });\n  }\n}\n\nfunction addConflict(conflicts, v, w) {\n  if (v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n\n  var conflictsV = conflicts[v];\n  if (!conflictsV) {\n    conflicts[v] = conflictsV = {};\n  }\n  conflictsV[w] = true;\n}\n\nfunction hasConflict(conflicts, v, w) {\n  if (v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  return _.has(conflicts[v], w);\n}\n\n/*\n * Try to align nodes into vertical \"blocks\" where possible. This algorithm\n * attempts to align a node with one of its median neighbors. If the edge\n * connecting a neighbor is a type-1 conflict then we ignore that possibility.\n * If a previous node has already formed a block with a node after the node\n * we're trying to form a block with, we also ignore that possibility - our\n * blocks would be split in that scenario.\n */\nfunction verticalAlignment(g, layering, conflicts, neighborFn) {\n  var root = {},\n      align = {},\n      pos = {};\n\n  // We cache the position here based on the layering because the graph and\n  // layering may be out of sync. The layering matrix is manipulated to\n  // generate different extreme alignments.\n  _.each(layering, function(layer) {\n    _.each(layer, function(v, order) {\n      root[v] = v;\n      align[v] = v;\n      pos[v] = order;\n    });\n  });\n\n  _.each(layering, function(layer) {\n    var prevIdx = -1;\n    _.each(layer, function(v) {\n      var ws = neighborFn(v);\n      if (ws.length) {\n        ws = _.sortBy(ws, function(w) { return pos[w]; });\n        var mp = (ws.length - 1) / 2;\n        for (var i = Math.floor(mp), il = Math.ceil(mp); i <= il; ++i) {\n          var w = ws[i];\n          if (align[v] === v &&\n              prevIdx < pos[w] &&\n              !hasConflict(conflicts, v, w)) {\n            align[w] = v;\n            align[v] = root[v] = root[w];\n            prevIdx = pos[w];\n          }\n        }\n      }\n    });\n  });\n\n  return { root: root, align: align };\n}\n\nfunction horizontalCompaction(g, layering, root, align, reverseSep) {\n  // This portion of the algorithm differs from BK due to a number of problems.\n  // Instead of their algorithm we construct a new block graph and do two\n  // sweeps. The first sweep places blocks with the smallest possible\n  // coordinates. The second sweep removes unused space by moving blocks to the\n  // greatest coordinates without violating separation.\n  var xs = {},\n      blockG = buildBlockGraph(g, layering, root, reverseSep);\n\n  // First pass, assign smallest coordinates via DFS\n  var visited = {};\n  function pass1(v) {\n    if (!_.has(visited, v)) {\n      visited[v] = true;\n      xs[v] = _.reduce(blockG.inEdges(v), function(max, e) {\n        pass1(e.v);\n        return Math.max(max, xs[e.v] + blockG.edge(e));\n      }, 0);\n    }\n  }\n  _.each(blockG.nodes(), pass1);\n\n  var borderType = reverseSep ? \"borderLeft\" : \"borderRight\";\n  function pass2(v) {\n    if (visited[v] !== 2) {\n      visited[v]++;\n      var node = g.node(v);\n      var min = _.reduce(blockG.outEdges(v), function(min, e) {\n        pass2(e.w);\n        return Math.min(min, xs[e.w] - blockG.edge(e));\n      }, Number.POSITIVE_INFINITY);\n      if (min !== Number.POSITIVE_INFINITY && node.borderType !== borderType) {\n        xs[v] = Math.max(xs[v], min);\n      }\n    }\n  }\n  _.each(blockG.nodes(), pass2);\n\n  // Assign x coordinates to all nodes\n  _.each(align, function(v) {\n    xs[v] = xs[root[v]];\n  });\n\n  return xs;\n}\n\n\nfunction buildBlockGraph(g, layering, root, reverseSep) {\n  var blockGraph = new Graph(),\n      graphLabel = g.graph(),\n      sepFn = sep(graphLabel.nodesep, graphLabel.edgesep, reverseSep);\n\n  _.each(layering, function(layer) {\n    var u;\n    _.each(layer, function(v) {\n      var vRoot = root[v];\n      blockGraph.setNode(vRoot);\n      if (u) {\n        var uRoot = root[u],\n            prevMax = blockGraph.edge(uRoot, vRoot);\n        blockGraph.setEdge(uRoot, vRoot, Math.max(sepFn(g, v, u), prevMax || 0));\n      }\n      u = v;\n    });\n  });\n\n  return blockGraph;\n}\n\n/*\n * Returns the alignment that has the smallest width of the given alignments.\n */\nfunction findSmallestWidthAlignment(g, xss) {\n  return _.min(xss, function(xs) {\n    var min = _.min(xs, function(x, v) { return x - width(g, v) / 2; }),\n        max = _.max(xs, function(x, v) { return x + width(g, v) / 2; });\n    return max - min;\n  });\n}\n\n/*\n * Align the coordinates of each of the layout alignments such that\n * left-biased alignments have their minimum coordinate at the same point as\n * the minimum coordinate of the smallest width alignment and right-biased\n * alignments have their maximum coordinate at the same point as the maximum\n * coordinate of the smallest width alignment.\n */\nfunction alignCoordinates(xss, alignTo) {\n  var alignToMin = _.min(alignTo),\n      alignToMax = _.max(alignTo);\n\n  _.each([\"u\", \"d\"], function(vert) {\n    _.each([\"l\", \"r\"], function(horiz) {\n      var alignment = vert + horiz,\n          xs = xss[alignment],\n          delta;\n      if (xs === alignTo) return;\n\n      delta = horiz === \"l\" ? alignToMin - _.min(xs) : alignToMax - _.max(xs);\n\n      if (delta) {\n        xss[alignment] = _.mapValues(xs, function(x) { return x + delta; });\n      }\n    });\n  });\n}\n\nfunction balance(xss, align) {\n  return _.mapValues(xss.ul, function(ignore, v) {\n    if (align) {\n      return xss[align.toLowerCase()][v];\n    } else {\n      var xs = _.sortBy(_.pluck(xss, v));\n      return (xs[1] + xs[2]) / 2;\n    }\n  });\n}\n\nfunction positionX(g) {\n  var layering = util.buildLayerMatrix(g),\n      conflicts = _.merge(findType1Conflicts(g, layering),\n                          findType2Conflicts(g, layering));\n\n  var xss = {},\n      adjustedLayering;\n  _.each([\"u\", \"d\"], function(vert) {\n    adjustedLayering = vert === \"u\" ? layering : _.values(layering).reverse();\n    _.each([\"l\", \"r\"], function(horiz) {\n      if (horiz === \"r\") {\n        adjustedLayering = _.map(adjustedLayering, function(inner) {\n          return _.values(inner).reverse();\n        });\n      }\n\n      var neighborFn = _.bind(vert === \"u\" ? g.predecessors : g.successors, g);\n      var align = verticalAlignment(g, adjustedLayering, conflicts, neighborFn);\n      var xs = horizontalCompaction(g, adjustedLayering,\n                                    align.root, align.align,\n                                    horiz === \"r\");\n      if (horiz === \"r\") {\n        xs = _.mapValues(xs, function(x) { return -x; });\n      }\n      xss[vert + horiz] = xs;\n    });\n  });\n\n  var smallestWidth = findSmallestWidthAlignment(g, xss);\n  alignCoordinates(xss, smallestWidth);\n  return balance(xss, g.graph().align);\n}\n\nfunction sep(nodeSep, edgeSep, reverseSep) {\n  return function(g, v, w) {\n    var vLabel = g.node(v),\n        wLabel = g.node(w),\n        sum = 0,\n        delta;\n\n    sum += vLabel.width / 2;\n    if (_.has(vLabel, \"labelpos\")) {\n      switch (vLabel.labelpos.toLowerCase()) {\n        case \"l\": delta = -vLabel.width / 2; break;\n        case \"r\": delta = vLabel.width / 2; break;\n      }\n    }\n    if (delta) {\n      sum += reverseSep ? delta : -delta;\n    }\n    delta = 0;\n\n    sum += (vLabel.dummy ? edgeSep : nodeSep) / 2;\n    sum += (wLabel.dummy ? edgeSep : nodeSep) / 2;\n\n    sum += wLabel.width / 2;\n    if (_.has(wLabel, \"labelpos\")) {\n      switch (wLabel.labelpos.toLowerCase()) {\n        case \"l\": delta = wLabel.width / 2; break;\n        case \"r\": delta = -wLabel.width / 2; break;\n      }\n    }\n    if (delta) {\n      sum += reverseSep ? delta : -delta;\n    }\n    delta = 0;\n\n    return sum;\n  };\n}\n\nfunction width(g, v) {\n  return g.node(v).width;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/lib/position/bk.js\n ** module id = 153\n ** module chunks = 0\n **/","var _ = require(\"./lodash\"),\n    util = require(\"./util\"),\n    Graph = require(\"./graphlib\").Graph;\n\nmodule.exports = {\n  debugOrdering: debugOrdering\n};\n\n/* istanbul ignore next */\nfunction debugOrdering(g) {\n  var layerMatrix = util.buildLayerMatrix(g);\n\n  var h = new Graph({ compound: true, multigraph: true }).setGraph({});\n\n  _.each(g.nodes(), function(v) {\n    h.setNode(v, { label: v });\n    h.setParent(v, \"layer\" + g.node(v).rank);\n  });\n\n  _.each(g.edges(), function(e) {\n    h.setEdge(e.v, e.w, {}, e.name);\n  });\n\n  _.each(layerMatrix, function(layer, i) {\n    var layerV = \"layer\" + i;\n    h.setNode(layerV, { rank: \"same\" });\n    _.reduce(layer, function(u, v) {\n      h.setEdge(u, v, { style: \"invis\" });\n      return v;\n    });\n  });\n\n  return h;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/lib/debug.js\n ** module id = 154\n ** module chunks = 0\n **/","module.exports = \"0.7.4\";\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dagre/lib/version.js\n ** module id = 155\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_156__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"classname\"\n ** module id = 156\n ** module chunks = 0 1\n **/"],"sourceRoot":""}